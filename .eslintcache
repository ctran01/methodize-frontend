[{"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/index.js":"1","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/App.js":"2","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/AuthContext.js":"3","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Routes.js":"4","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/UserStore.js":"5","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TasklistStore.js":"6","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TaskStore.js":"7","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/ProjectStore.js":"8","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TeamStore.js":"9","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/AuthRoutes.js":"10","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingRoutes.js":"11","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TaskReducer.js":"12","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/UserReducer.js":"13","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/ProjectReducer.js":"14","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TasklistReducer.js":"15","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TeamReducer.js":"16","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Team.js":"17","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Project.js":"18","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Tasks.js":"19","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Home.js":"20","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/RegisterPage.js":"21","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/LeftNavBar.js":"22","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LoginPage.js":"23","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/apiServer.js":"24","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingPage.js":"25","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/Onboard.js":"26","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Loader.js":"27","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBar.js":"28","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarHome.js":"29","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarTask.js":"30","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/index.js":"31","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/NewProjectTile.js":"32","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectItemHome.js":"33","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectTile.js":"34","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskDetailsForm.js":"35","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemHome.js":"36","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemTask.js":"37","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskForm.js":"38","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskSection.js":"39","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskListItem.js":"40","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/NewTeamMemberIcon.js":"41","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskProjectForm.js":"42","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/TeamMemberIcon.js":"43","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TeamForm.js":"44","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TaskListForm.js":"45","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/LoginForm.js":"46","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/ProjectForm.js":"47","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/UserAvatar.js":"48","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemProject.js":"49","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddMemberForm.js":"50","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/NewProject.js":"51","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Projects.js":"52","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/NewTasks.js":"53","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTasklist.js":"54","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTasklistPopOut.js":"55","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddProjectPopOut.js":"56","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTaskPopOutTaskPage.js":"57","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/PopOutTaskDetails.js":"58","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTaskPopOutProjectPage.js":"59","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Home.js":"60","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Logo.js":"61","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/project.js":"62","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/tasks.js":"63","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Add.js":"64","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/search.js":"65","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/alert.js":"66","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTaskItem.js":"67","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/pin.js":"68","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/comments.js":"69","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/PopOutTaskDetailsHome.js":"70"},{"size":387,"mtime":1609962889663,"results":"71","hashOfConfig":"72"},{"size":1614,"mtime":1610001741035,"results":"73","hashOfConfig":"72"},{"size":104,"mtime":1607369643885,"results":"74","hashOfConfig":"72"},{"size":508,"mtime":1606848376103,"results":"75","hashOfConfig":"72"},{"size":449,"mtime":1607369643914,"results":"76","hashOfConfig":"72"},{"size":500,"mtime":1607369643909,"results":"77","hashOfConfig":"72"},{"size":450,"mtime":1608238733157,"results":"78","hashOfConfig":"72"},{"size":474,"mtime":1607369643906,"results":"79","hashOfConfig":"72"},{"size":450,"mtime":1607369643912,"results":"80","hashOfConfig":"72"},{"size":3520,"mtime":1610047737882,"results":"81","hashOfConfig":"72"},{"size":779,"mtime":1607369511845,"results":"82","hashOfConfig":"72"},{"size":365,"mtime":1609958921573,"results":"83","hashOfConfig":"72"},{"size":193,"mtime":1607369643903,"results":"84","hashOfConfig":"72"},{"size":460,"mtime":1607369643894,"results":"85","hashOfConfig":"72"},{"size":415,"mtime":1609958921583,"results":"86","hashOfConfig":"72"},{"size":308,"mtime":1607369643901,"results":"87","hashOfConfig":"72"},{"size":4166,"mtime":1609990777871,"results":"88","hashOfConfig":"72"},{"size":11924,"mtime":1609990810300,"results":"89","hashOfConfig":"72"},{"size":3562,"mtime":1609990816531,"results":"90","hashOfConfig":"72"},{"size":8183,"mtime":1609995721993,"results":"91","hashOfConfig":"72"},{"size":3540,"mtime":1607369511865,"results":"92","hashOfConfig":"72"},{"size":5945,"mtime":1609988895090,"results":"93","hashOfConfig":"72"},{"size":841,"mtime":1607369511852,"results":"94","hashOfConfig":"72"},{"size":467,"mtime":1610045360352,"results":"95","hashOfConfig":"72"},{"size":4534,"mtime":1609958921337,"results":"96","hashOfConfig":"72"},{"size":3243,"mtime":1607978384299,"results":"97","hashOfConfig":"72"},{"size":126,"mtime":1609978804232,"results":"98","hashOfConfig":"72"},{"size":4105,"mtime":1609958921353,"results":"99","hashOfConfig":"72"},{"size":4182,"mtime":1609988213276,"results":"100","hashOfConfig":"72"},{"size":4287,"mtime":1609958921370,"results":"101","hashOfConfig":"72"},{"size":260,"mtime":1610045920711,"results":"102","hashOfConfig":"72"},{"size":998,"mtime":1609988250264,"results":"103","hashOfConfig":"72"},{"size":2349,"mtime":1609958921498,"results":"104","hashOfConfig":"72"},{"size":1339,"mtime":1609990742970,"results":"105","hashOfConfig":"72"},{"size":6431,"mtime":1609990798053,"results":"106","hashOfConfig":"72"},{"size":4279,"mtime":1609976458264,"results":"107","hashOfConfig":"72"},{"size":3888,"mtime":1609976457208,"results":"108","hashOfConfig":"72"},{"size":9615,"mtime":1610048219146,"results":"109","hashOfConfig":"72"},{"size":1121,"mtime":1607982655510,"results":"110","hashOfConfig":"72"},{"size":3473,"mtime":1609990803867,"results":"111","hashOfConfig":"72"},{"size":1305,"mtime":1607369592304,"results":"112","hashOfConfig":"72"},{"size":6480,"mtime":1610046573192,"results":"113","hashOfConfig":"72"},{"size":521,"mtime":1607369592311,"results":"114","hashOfConfig":"72"},{"size":2808,"mtime":1609958921330,"results":"115","hashOfConfig":"72"},{"size":2619,"mtime":1610046600173,"results":"116","hashOfConfig":"72"},{"size":3311,"mtime":1609990841947,"results":"117","hashOfConfig":"72"},{"size":4612,"mtime":1610046497137,"results":"118","hashOfConfig":"72"},{"size":722,"mtime":1609990731400,"results":"119","hashOfConfig":"72"},{"size":1574,"mtime":1609958921552,"results":"120","hashOfConfig":"72"},{"size":3307,"mtime":1609990707108,"results":"121","hashOfConfig":"72"},{"size":14083,"mtime":1610046884103,"results":"122","hashOfConfig":"72"},{"size":222,"mtime":1609958921429,"results":"123","hashOfConfig":"72"},{"size":3527,"mtime":1609990771183,"results":"124","hashOfConfig":"72"},{"size":5950,"mtime":1609990790239,"results":"125","hashOfConfig":"72"},{"size":1367,"mtime":1609958921462,"results":"126","hashOfConfig":"72"},{"size":1466,"mtime":1609958921442,"results":"127","hashOfConfig":"72"},{"size":1271,"mtime":1609958921456,"results":"128","hashOfConfig":"72"},{"size":16563,"mtime":1609977897644,"results":"129","hashOfConfig":"72"},{"size":1394,"mtime":1609958921450,"results":"130","hashOfConfig":"72"},{"size":1221,"mtime":1609958921166,"results":"131","hashOfConfig":"72"},{"size":1659,"mtime":1609958921175,"results":"132","hashOfConfig":"72"},{"size":2932,"mtime":1609958921251,"results":"133","hashOfConfig":"72"},{"size":2211,"mtime":1609958921264,"results":"134","hashOfConfig":"72"},{"size":1176,"mtime":1609958921158,"results":"135","hashOfConfig":"72"},{"size":1796,"mtime":1609958921257,"results":"136","hashOfConfig":"72"},{"size":2081,"mtime":1609958921227,"results":"137","hashOfConfig":"72"},{"size":3077,"mtime":1609985698118,"results":"138","hashOfConfig":"72"},{"size":2069,"mtime":1609958921244,"results":"139","hashOfConfig":"72"},{"size":1474,"mtime":1609958921234,"results":"140","hashOfConfig":"72"},{"size":16637,"mtime":1609994253216,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"1sdex4x",{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"144"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"144"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"144"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"144"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"144"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"144"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"144"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"144"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"144"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"144"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"144"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"144"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"144"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"144"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"144"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"144"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"144"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"144"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"144"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"144"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"144"},"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/index.js",[],["306","307"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/App.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/AuthContext.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Routes.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/UserStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TasklistStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TaskStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/ProjectStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TeamStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/AuthRoutes.js",["308","309","310","311","312","313"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingRoutes.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TaskReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/UserReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/ProjectReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TasklistReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TeamReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Team.js",["314"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport TopNavBar from \"../NavigationBar/TopNavBar\";\nimport apiServer from \"../../config/apiServer\";\nimport Loader from \"../Loader\";\nimport \"../../css/TeamPage.css\";\nimport TeamMemberIcon from \"../teams/TeamMemberIcon\";\nimport ProjectTile from \"../projects/ProjectTile\";\nimport NewProjectTile from \"../projects/NewProjectTile\";\nimport NewTeamMemberIcon from \"../teams/NewTeamMemberIcon\";\nimport AddProjectPopOut from \"../PopOutMenu/AddProjectPopOut\";\n\nconst TeamPage = () => {\n  const { teamId, teamName } = useParams();\n  const [team, setTeam] = useState();\n  const [teamProjects, setTeamProjects] = useState();\n  const [teamUsers, setTeamUsers] = useState();\n  const [teamDescription, setTeamDescription] = useState();\n  const [loading, setLoading] = useState(true);\n  const [sideProjectForm, setSideProjectForm] = useState(false);\n\n  const showSideProjectForm = () => {\n    setSideProjectForm(!sideProjectForm);\n  };\n\n  const getTeam = async () => {\n    try {\n      const res = await apiServer.get(`/team/${teamId}`);\n      setTeam(res.data);\n      setTeamProjects(res.data.Projects);\n      setTeamUsers(res.data.Users);\n      setTeamDescription(res.data.description);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleUpdate = (e) => {\n    setTeamDescription(e.target.value);\n  };\n\n  const updateDescription = async (e) => {\n    const description = e.target.value;\n    await apiServer.put(`/team/${teamId}/description`, { description });\n    console.log(e.target.value);\n  };\n\n  useEffect(() => {\n    getTeam();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [teamId, teamName, setTeam, setTeamProjects, setTeamUsers]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  const membersList = teamUsers.map((user, i) => {\n    return <TeamMemberIcon user={user} key={i} />;\n  });\n\n  const projectsList = teamProjects.map((project, i) => {\n    return (\n      <ProjectTile teamId={teamId} project={project} key={i} id={project.id} />\n    );\n  });\n  return (\n    <>\n      <TopNavBar name={teamName} setTeamProjects={setTeamProjects} />\n      <div className=\"team-page-container\">\n        <div className=\"team-page-content-container\">\n          <div className=\"team-page-content-left\">\n            <div className=\"team-content-left-description-container\">\n              <div className=\"team-content-left-description-header\">\n                <div className=\"team-content-title\">Description</div>\n              </div>\n              <form className=\"team-content-left-description-form\">\n                <textarea\n                  className=\"edit-description\"\n                  placeholder=\"Click to add team description...\"\n                  value={teamDescription}\n                  onChange={handleUpdate}\n                  onBlur={updateDescription}\n                ></textarea>\n              </form>\n            </div>\n            <div className=\"team-content-left-members-container\">\n              <div className=\"team-content-left-members-header\">\n                <div className=\"team-content-title\">Members</div>\n              </div>\n              <div className=\"team-content-left-members--list\">\n                {membersList}\n                <NewTeamMemberIcon\n                  setTeamUsers={setTeamUsers}\n                  teamId={teamId}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"team-page-content-right\">\n            <div className=\"team-content-right-header\">\n              <div className=\"team-content-title\">Projects</div>\n            </div>\n            <div className=\"team-content-right-projects--list\">\n              {projectsList}\n              <NewProjectTile showSideProjectForm={showSideProjectForm} />\n            </div>\n          </div>\n        </div>\n        {sideProjectForm ? (\n          <AddProjectPopOut\n            showSideProjectForm={showSideProjectForm}\n            setTeamProjects={setTeamProjects}\n            title={\"Add Project\"}\n          />\n        ) : null}\n      </div>\n    </>\n  );\n};\n\nexport default TeamPage;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Project.js",["315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Modal, responsiveFontSizes } from \"@material-ui/core\";\nimport apiServer from \"../../config/apiServer\";\nimport Loader from \"../Loader\";\nimport TopNavBar from \"../NavigationBar/TopNavBar\";\nimport TaskListForm from \"../Forms/TaskListForm\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport PopOutTaskDetails from \"../PopOutMenu/PopOutTaskDetails\";\nimport AddTasklistPopOut from \"../PopOutMenu/AddTasklistPopOut\";\nimport AddTaskPopOutProjectPage from \"../PopOutMenu/AddTaskPopOutProjectPage\";\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\n\nimport \"../../css/Project.css\";\nimport \"../../css/TaskList.css\";\nimport ColumnTasklist from \"../tasks/ColumnTasklist\";\nimport Add from \"../../assets/Add\";\n\nconst ProjectPage = ({ sidebar }) => {\n  const { projectId, projectName, teamId } = useParams();\n  const [taskState, taskdispatch] = useContext(TaskContext);\n  const [openTasklistForm, setOpenTasklistForm] = useState(false);\n  const [tasks, setTasks] = useState();\n  const [project, setProject] = useState();\n  const [tasklists, setTasklists] = useState();\n\n  //Side Menus\n  const [sideTaskForm, setSideTaskForm] = useState(false);\n  const [sideTasklistForm, setSideTasklistForm] = useState(false);\n  const [sideTaskDetails, setSideTaskDetails] = useState(false);\n\n  const showSideTaskForm = () => {\n    setSideTaskDetails(false);\n    setSideTasklistForm(false);\n    setSideTaskForm(!sideTaskForm);\n  };\n\n  const showSideTasklistForm = () => {\n    setSideTaskDetails(false);\n    setSideTaskForm(false);\n    setSideTasklistForm(!sideTasklistForm);\n  };\n\n  const showSideTaskDetails = () => {\n    setSideTasklistForm(false);\n    setSideTaskForm(false);\n    setSideTaskDetails(!sideTaskDetails);\n  };\n\n  //Task through get /project/id/taskslists. Set here so we can refer to it in the ondragend funnction\n  const [loading, setLoading] = useState(true);\n\n  const openTasklistFormModal = () => {\n    setOpenTasklistForm(true);\n  };\n\n  const closeTasklistFormModal = () => {\n    setOpenTasklistForm(false);\n  };\n\n  const onDragEnd = async (result) => {\n    console.log(result, \"result\");\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === \"column\") {\n      const redorderedLists = reorderTasklists(\n        tasklists,\n        source.index,\n        destination.index\n      );\n\n      setTasklists(redorderedLists);\n      console.log(redorderedLists, \"reordedLists\");\n      redorderedLists.map((list, index) => {\n        return updateTasklist(index, list.id, list.column_index);\n      });\n    }\n\n    if (type === \"task\") {\n      updateTasks(source, destination, draggableId);\n      const destinationTasklistId = destination.droppableId.split(\"-\")[0];\n      const destinationIndexId = destination.droppableId.split(\"-\")[1];\n      const sourceTasklistId = source.droppableId.split(\"-\")[0];\n      const sourceIndexId = source.droppableId.split(\"-\")[1];\n      const destinationTaskIndex = destination.index;\n      const sourceTaskIndex = source.index;\n      //DroppableID of column ${tasklist.id.toString()}-${index.toString()}\n\n      // console.log(\n      //   tasklists[sourceIndexId].Tasks,\n      //   \"tasklists[sourceIndexId] before\"\n      // );\n\n      // tasklists[sourceIndexId].Tasks = [];\n\n      // console.log(\n      //   tasklists[sourceIndexId].Tasks,\n      //   \"tasklists[sourceIndexId] after\"\n      // );\n\n      //sets source tasklist\n      let sourceTasklist = tasklists[sourceIndexId].Tasks;\n      //sets destination tasklist\n      let destinationTasklist = tasklists[destinationIndexId].Tasks;\n\n      reorderTasks(sourceTasklist, destinationTasklist, source, destination);\n      // //returns [new source tasklist, new destination tasklist]\n      // let newSourceTasklist = newTasklists[0];\n      // let newDestinationTasklist = newTasklists[1];\n      // tasklists[sourceIndexId].Tasks = newSourceTasklist;\n      // tasklists[destinationIndexId].Tasks = newDestinationTasklist;\n      // console.log(tasklists, \"tasklists after reorder\");\n      // console.log(\"source: \", source);\n      // console.log(\"destination: \", destination);\n      // console.log(\"draggableId: \", draggableId);\n      // console.log(\"type: \", type);\n\n      // console.log(tasklists, \"tasklists after updating\");\n      // tasklists.map((task, index) => {\n      //   return updateTasks(\n      //     index,\n      //     task.id,\n      //     task.task_index,\n      //     sourceTasklistId,\n      //     destinationTasklistId\n      //   );\n      // });\n\n      //tasklists.map((tasklist,index)=>{\n      //   tasklist.task.map((task,index)=>{\n      // return updateTasks(\n\n      // )\n      //   })\n      // })\n    }\n  };\n\n  const reorderTasklists = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  };\n\n  const reorderTasks = (\n    sourceTasklist,\n    destinationTasklist,\n    source,\n    destination\n  ) => {\n    let sourceTask = sourceTasklist.splice(source.index, 1);\n    destinationTasklist.splice(destination.index, 0, sourceTask[0]);\n    // return [sourceTasklist, destinationTasklist];\n    // console.log(sourceTasklist);\n    // console.log(destinationTasklist, \"destinationTasklist\");\n    //splice source task and insert into destination tasklist\n    //return new sourcetasklist and new desinationtasklist\n  };\n\n  const updateTasklist = async (newIndex, tasklistId, columnIndex) => {\n    await apiServer.put(`/tasklist/${tasklistId}/columnindex/`, { newIndex });\n  };\n\n  const updateTasks = async (source, destination, draggableId) => {\n    const sourceColumnId = source.droppableId;\n    const destinationTasklistId = destination.droppableId.split(\"-\")[0];\n    const destinationIndexId = destination.droppableId.split(\"-\")[1];\n    const sourceTasklistId = source.droppableId.split(\"-\")[0];\n    const sourceIndexId = source.droppableId.split(\"-\")[1];\n    const taskId = draggableId;\n    const updatedTasklist = await apiServer.put(`/task/${taskId}/tasklist`, {\n      destinationTasklistId,\n    }); // this will update the inital task with the new tasklist id\n\n    //Draggable Id === Task.id\n    //source.droppableId[0] === initial tasklist.id\n    //destination.droppableId[0] === destination tasklist.id\n\n    // once that comes back, we want to update the task_index of that task to destination.index\n    const destinationIndex = destination.index; //index of task in tasklist\n    const updatedTaskIndex = await apiServer.put(`/task/${taskId}/taskindex`, {\n      destinationIndex,\n    });\n\n    // once that comes back, we will  update task_indexes for tasklists then re render\n  };\n\n  const getProject = async () => {\n    try {\n      const res = await apiServer.get(`/project/${projectId}`);\n      // await getTasklists();\n      const resp = await apiServer.get(`/project/${projectId}/tasklists`);\n      setProject(res.data);\n      setTasklists(resp.data);\n      // console.log(tasklists);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //NOTE: MAYBE TRY GRABBING TASKS IN ONE GET API CALL AND PUSHING IT DOWN?\n  const getTasklists = async () => {\n    try {\n      const res = await apiServer.get(`/project/${projectId}/tasklists`);\n      setTasklists(res.data);\n\n      // setTasks(res.data.Tasks);\n      // const taskResponse = await apiServer.get(`/project/${projectId}/tasks`);\n      // setTaskArray(taskResponse.data); //Array of all tasks\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n\n  // const updateTasks = async () => {\n  //   //returns individual tasklist tasks\n  //   const res = await apiServer.get(`/tasklist/${tasklist.id}/tasks`);\n  //   setTasklistTasks(res.data);\n  //   setLoading(false);\n  // };\n\n  useEffect(() => {\n    getProject();\n    taskdispatch({ type: \"get_selected_task\", payload: null });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setProject, setTasklists, setTasks]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  //Task list creation\n  const tasklistFormModal = (\n    <div className=\"modal-container\">\n      <TaskListForm\n        setTasklists={setTasklists}\n        projectId={projectId}\n        clickClose={closeTasklistFormModal}\n        open={openTasklistForm}\n      ></TaskListForm>\n    </div>\n  );\n\n  const renderedTasklists = tasklists.map((tasklist, index) => {\n    return (\n      <ColumnTasklist\n        key={index}\n        tasklist={tasklist}\n        index={index}\n        setTasklists={setTasklists}\n        showSideTaskDetails={showSideTaskDetails}\n        sideTaskDetails={sideTaskDetails}\n        showSideTaskForm={showSideTaskForm}\n      />\n    );\n  });\n\n  //----------------------------------------------Project\n  return (\n    // <div style={{ height: \"inherit\" }}>\n    // <div style={{ height: \"inherit\" }}>\n    <>\n      <TopNavBar\n        name={project.name}\n        setTasklists={setTasklists}\n        sidebar={sidebar}\n      />\n      <div className=\"project-page-container\">\n        <div className=\"project-page-main-content\">\n          <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable\n              droppableId=\"all-columns\"\n              direction=\"horizontal\"\n              type=\"column\"\n            >\n              {(provided) => (\n                <div\n                  className=\"project-container\"\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  {renderedTasklists}\n                  {/* {tasklists.map((tasklist, i) => {\n                  return ( */}\n                  {/* <TaskListItem\n                      index={i}\n                      teamId={teamId}\n                      tasklist={tasklist}\n                      key={tasklist.id}\n                    /> */}\n\n                  {/* );\n                })} */}\n\n                  {provided.placeholder}\n                  <div\n                    className=\"tasklist-new-tasklist--button\"\n                    // onClick={openTasklistFormModal}\n                    onClick={showSideTasklistForm}\n                  >\n                    <div\n                      style={{\n                        display: \"flex\",\n                        transform: \"rotate(90deg)\",\n                        alignItems: \"center\",\n                        whiteSpace: \"nowrap\",\n                        marginTop: \"50px\",\n                      }}\n                    >\n                      <Add /> Add Column\n                    </div>\n                  </div>\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n\n          {sideTaskDetails && taskState.selectedTask ? (\n            <PopOutTaskDetails\n              showSideTaskDetails={showSideTaskDetails}\n              sideTaskDetails={sideTaskDetails}\n            />\n          ) : null}\n          {sideTasklistForm ? (\n            <AddTasklistPopOut\n              showSideTasklistForm={showSideTasklistForm}\n              title={\"Add Tasklist\"}\n              setTasklists={setTasklists}\n            />\n          ) : null}\n          {sideTaskForm ? (\n            <AddTaskPopOutProjectPage\n              showSideTaskForm={showSideTaskForm}\n              title={\"Add Task\"}\n              setTasklists={setTasklists}\n            />\n          ) : null}\n        </div>\n      </div>\n\n      {/* </div> */}\n      {/* <Modal open={openTasklistForm} onClose={closeTasklistFormModal}>\n    //     {tasklistFormModal}\n    //   </Modal> */}\n      {/* // // </div> */}\n    </>\n  );\n};\n\nexport default ProjectPage;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Tasks.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Home.js",["334","335"],"import React, { useContext, useState } from \"react\";\n\nimport { Context as UserContext } from \"../../context/store/UserStore\";\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\nimport { Context as ProjectContext } from \"../../context/store/ProjectStore\";\nimport TaskItemHome from \"../tasks/TaskItemHome\";\nimport TopNavBarHome from \"../NavigationBar/TopNavBarHome\";\nimport ProjectTile from \"../projects/ProjectTile\";\nimport NewProjectTile from \"../projects/NewProjectTile\";\nimport homeImage from \"../../assets/codeVersion.png\";\nimport Add from \"../../assets/Add\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport AddProjectPopOut from \"../PopOutMenu/AddProjectPopOut\";\nimport AddTaskPopOutTaskPage from \"../PopOutMenu/AddTaskPopOutTaskPage\";\nimport PopOutTaskDetailsHome from \"../PopOutMenu/PopOutTaskDetailsHome\";\n\nconst HomePage = () => {\n  // debugger;\n  const [userState] = useContext(UserContext);\n  const [taskState] = useContext(TaskContext);\n  const [projectState] = useContext(ProjectContext);\n  // const [teamProjects,setTeamProjects] = useState();\n  const [sideTaskForm, setSideTaskForm] = useState(false);\n  const [sideProjectForm, setSideProjectForm] = useState(false);\n  const [sideTaskDetails, setSideTaskDetails] = useState(false);\n  const showSideTaskForm = () => {\n    setSideTaskDetails(false);\n    setSideProjectForm(false);\n    setSideTaskForm(!sideTaskForm);\n  };\n\n  const showSideProjectForm = () => {\n    setSideTaskDetails(false);\n    setSideTaskForm(false);\n    setSideProjectForm(!sideProjectForm);\n  };\n\n  const showSideTaskDetails = () => {\n    setSideTaskForm(false);\n    setSideProjectForm(false);\n    setSideTaskDetails(!sideTaskDetails);\n  };\n\n  const uncompletedTasklist = taskState.tasks.filter(\n    (task) => task.completed === false\n  );\n\n  const sortedTaskList = uncompletedTasklist.sort(function (a, b) {\n    return new Date(b.due_date) - new Date(a.due_date);\n  });\n\n  const upcomingTasklist = sortedTaskList.slice(0, 9);\n  // const upcomingTasklist = sortedTaskList\n  //   .slice(sortedTaskList.length - 4)\n  //   .reverse();\n\n  const taskList = upcomingTasklist.map((task, i) => {\n    return (\n      !task.completed && (\n        <TaskItemHome\n          task={task}\n          key={i}\n          showSideTaskDetails={showSideTaskDetails}\n          sideTaskDetails={sideTaskDetails}\n        />\n      )\n    );\n  });\n\n  const projectLists = projectState.projects.slice(0, 5);\n\n  const projectTiles = projectLists.map((project, i) => {\n    // return <ProjectItemHome project={project} key={i} id={project.id} />;\n    return <ProjectTile project={project} key={i} id={project.id} />;\n  });\n\n  return (\n    <>\n      <TopNavBarHome />\n      <div className=\"home-container\">\n        <div className=\"home-main-container\">\n          <div\n            className=\"home-main-content-container\"\n            style={{ display: \"flex\" }}\n          >\n            <div\n              className=\"home-inner-container\"\n              style={{\n                background: \"transparent\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                height: \"100%\",\n                width: \"100%\",\n              }}\n            >\n              <div className=\"home-welcome-header\">\n                <p className=\"home-welcome-message\">\n                  Hi, {userState.user.name}!\n                </p>\n                <p\n                  style={{ display: \"flex\", margin: \"0\", alignSelf: \"center\" }}\n                >\n                  Welcome to your dashboard.\n                </p>\n              </div>\n              <div\n                className=\"home-task-project-container\"\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <div\n                  className={\n                    upcomingTasklist.length < 5\n                      ? \"home-tasks-container--smaller\"\n                      : sideTaskForm || sideProjectForm || sideTaskDetails\n                      ? \"home-tasks-container--small\"\n                      : \"home-tasks-container\"\n                  }\n                >\n                  <div className=\"home-tasks-header\">\n                    <div>\n                      <h2\n                        style={{\n                          color: \"#151b26\",\n                          fontWeight: 500,\n                          fontSize: \"20px\",\n                        }}\n                      >\n                        Tasks Due Soon\n                      </h2>\n                    </div>\n                    <div>\n                      <Link\n                        to=\"/tasks\"\n                        style={{ textDecoration: \"none\", color: \"blue\" }}\n                      >\n                        <p style={{ fontSize: \"14px\" }}>See all my tasks</p>\n                      </Link>\n                    </div>\n                  </div>\n                  <div className=\"home-tasks--list\">\n                    {/* call get all tasks for specific user route */}\n                    {taskList}\n                    <div\n                      className=\"new-home-item-container\"\n                      onClick={showSideTaskForm}\n                    >\n                      <div className=\"new-home-icon-container\">\n                        <Add className=\"new-home-item-icon\" />\n                      </div>\n                      <div className=\"new-home-item-name\">Create Task</div>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  className={\n                    upcomingTasklist.length < 5\n                      ? \"home-tasks-container--smaller\"\n                      : sideTaskForm || sideProjectForm || sideTaskDetails\n                      ? \"home-projects-container--small\"\n                      : \"home-projects-container\"\n                  }\n                >\n                  <div className=\"home-projects-header\">\n                    <div>\n                      <h2\n                        style={{\n                          color: \"#151b26\",\n                          fontWeight: 500,\n                          fontSize: \"20px\",\n                        }}\n                      >\n                        Projects\n                      </h2>\n                    </div>\n                    {/* <div>\n                  <Link\n                    to=\"/projects\"\n                    style={{ textDecoration: \"none\", color: \"blue\" }}\n                  >\n                    <p style={{ fontSize: \"14px\" }}>See all my projects</p>\n                  </Link>\n                </div> */}\n                  </div>\n                  <div className=\"home-projects--list\">\n                    {/* call get all projects for specific user route */}\n                    {projectTiles}\n                    <div\n                      // className=\"new-home-item-container\"\n                      onClick={showSideProjectForm}\n                      style={{ height: \"60%\" }}\n                    >\n                      {/* <div className=\"new-home-icon-container\">\n                    <Add className=\"new-home-item-icon\" />\n                  </div>\n                  <div className=\"new-home-item-name\">Create Project</div> */}\n                      <NewProjectTile />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {sideTaskForm ? (\n              <AddTaskPopOutTaskPage\n                showSideTaskForm={showSideTaskForm}\n                title={\"Add a Task\"}\n              />\n            ) : null}\n            {sideProjectForm ? (\n              <AddProjectPopOut\n                showSideProjectForm={showSideProjectForm}\n                // setTeamProjects={setTeamProjects}\n                title={\"Add Project\"}\n              />\n            ) : null}\n            {sideTaskDetails && taskState.selectedTask ? (\n              <PopOutTaskDetailsHome\n                showSideTaskDetails={showSideTaskDetails}\n                sideTaskDetails={sideTaskDetails}\n              />\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default HomePage;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/RegisterPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/LeftNavBar.js",["336"],"import React, { useContext, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../../css/Navbar.css\";\nimport { RiMenuFoldLine, RiMenuFill } from \"react-icons/ri\";\nimport { ImLinkedin, ImGithub } from \"react-icons/im\";\nimport { Context as TeamContext } from \"../../context/store/TeamStore\";\nimport { Modal } from \"@material-ui/core\";\nimport TeamForm from \"../Forms/TeamForm\";\nimport Home from \"../../assets/Home\";\nimport Tasks from \"../../assets/tasks\";\nimport Project from \"../../assets/project\";\nimport Team from \"../../assets/team.svg\";\nimport Logo from \"../../assets/Logo\";\nconst LeftNavBar = ({ showSidebar, sidebar }) => {\n  // const [teams, setTeams] = useState([]);\n  const [teamState] = useContext(TeamContext);\n  const [open, setOpen] = useState(false);\n\n  //NOTE : Only other option that worked was setting state either in here or in App.js and call it for global state. ReducerContext does not work\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const orderedList = teamState.teams.sort(function (a, b) {\n    return new Date(a.createdAt) - new Date(b.createdAt);\n  });\n\n  const renderedList = orderedList.map((team, i) => {\n    return (\n      <NavLink\n        className=\"left-nav-bar-team-link\"\n        style={{ textDecoration: \"none\", color: \"white\" }}\n        to={`/team/${team.id}/${team.name}`}\n        activeClassName=\"navlink--active\"\n        key={i}\n      >\n        <div>\n          <p style={{ margin: \"0px\", paddingLeft: \"30px\" }}>{team.name}</p>\n        </div>\n      </NavLink>\n    );\n  });\n\n  const modalBody = (\n    <div className=\"modal-container\">\n      <TeamForm clickClose={closeModal} open={open}></TeamForm>\n    </div>\n  );\n  return (\n    <div>\n      <div className=\"left-nav-bar-container\">\n        <div className={sidebar ? \"nav-menu active\" : \"nav-menu collapsed\"}>\n          <div className=\"left-nav-menu-container\">\n            <div className=\"left-nav-menu-top\">\n              <div\n                className=\"logo\"\n                style={{\n                  color: \"white\",\n                  marginLeft: \"10px\",\n                  cursor: \"default\",\n                }}\n              >\n                <Logo style={{}} />\n              </div>\n              <div className=\"collapse-menu-icon-container\">\n                <RiMenuFoldLine\n                  style={{\n                    color: \"white\",\n                    fontSize: \"24px\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={showSidebar}\n                />\n              </div>\n            </div>\n\n            <div\n              className=\"main-menu-items-container\"\n              style={{ marginTop: \"10px\" }}\n            >\n              <NavLink\n                exact\n                to=\"/\"\n                className=\"left-nav-bar-main-link\"\n                activeClassName=\"navlink--active\"\n              >\n                <div className=\"left-nav-bar-link\">\n                  <Home />\n                  <div>\n                    <p className=\"left-nav-bar-link-title\">Home</p>\n                  </div>\n                </div>\n              </NavLink>\n              <NavLink\n                to=\"/tasks\"\n                className=\"left-nav-bar-main-link\"\n                activeClassName=\"navlink--active\"\n              >\n                <div className=\"left-nav-bar-link\">\n                  <Tasks />\n                  <div>\n                    <p\n                      className=\"left-nav-bar-link-title\"\n                      style={{ marginLeft: \"4px\" }}\n                    >\n                      My Tasks\n                    </p>\n                  </div>\n                </div>\n              </NavLink>\n\n              {/* <NavLink\n                to=\"/projects\"\n                className=\"left-nav-bar-main-link\"\n                activeClassName=\"navlink--active\"\n              >\n                <div className=\"left-nav-bar-link\">\n                  <Project />\n                  <div>\n                    <p className=\"left-nav-bar-link-title\">Projects</p>\n                  </div>\n                </div>\n              </NavLink> */}\n            </div>\n            <div className=\"teams-items-container\">\n              <div className=\"teams-items-header\" style={{ display: \"flex\" }}>\n                <img src={Team} alt=\"team-icon\" />\n                <div>\n                  <p className=\"left-nav-bar-link-title\">Teams</p>\n                </div>\n                <p\n                  style={{ marginLeft: \"114px\", cursor: \"pointer\" }}\n                  onClick={openModal}\n                >\n                  +\n                </p>\n              </div>\n              {teamState.teams ? renderedList : <div>Loading...</div>}\n            </div>\n            <div className=\"social-links\">\n              <div>\n                <a href=\"https://github.com/ctran01/Methodize\" target=\"__blank\">\n                  <ImGithub className=\"social-icon\" />\n                </a>\n              </div>\n              <div>\n                <a\n                  href=\"https://www.linkedin.com/in/chris-tran-\"\n                  target=\"__blank\"\n                >\n                  <ImLinkedin className=\"social-icon\" />\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {sidebar ? null : (\n          <div\n            className=\"menu-icon\"\n            style={{\n              paddingTop: \"25px\",\n              paddingLeft: \"20px\",\n              paddingBottom: \"22px\",\n              backgroundColor: \"white\",\n            }}\n          >\n            <RiMenuFill\n              style={{\n                fontSize: \"24px\",\n                cursor: \"pointer\",\n              }}\n              onClick={showSidebar}\n            />\n          </div>\n        )}\n      </div>\n      <Modal open={open} onClose={closeModal}>\n        {modalBody}\n      </Modal>\n    </div>\n  );\n};\n\nexport default LeftNavBar;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LoginPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/apiServer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingPage.js",["337","338","339","340","341","342"],"import React from \"react\";\nimport \"../../css/LandingPage.css\";\nimport logo from \"../../assets/logo3.png\";\nimport picture from \"../../assets/Methodize.jpg\";\nimport { BsCardChecklist } from \"react-icons/bs\";\nimport { AiOutlineTeam } from \"react-icons/ai\";\nimport { MdAssignment } from \"react-icons/md\";\n\nconst LandingPage = () => {\n  return (\n    <div>\n      <div className=\"landing-container\">\n        <div className=\"landing-nav-container\">\n          <div className=\"landing-nav-logo\">\n            <a href=\"/\">\n              <img\n                className=\"logo\"\n                style={{ width: \"180px\" }}\n                src={logo}\n                alt=\"logo\"\n              />\n            </a>\n          </div>\n          <div className=\"landing-nav-sessions\">\n            <a href=\"/login\">\n              <button className=\"landing-nav--button\">Login</button>\n            </a>\n            <a href=\"/register\">\n              <button className=\"landing-nav--button\">Register</button>\n            </a>\n          </div>\n        </div>\n        <div className=\"landing-main\">\n          <div className=\"landing-message\">\n            <h2\n              style={{\n                textAlign: \"center\",\n                fontSize: \"3em\",\n                fontWeight: \"200\",\n              }}\n            >\n              Keeping track of everything from as big as multiple teams to as\n              small as individual tasks has never been easier\n            </h2>\n            <div className=\"landing-message-button--div\">\n              <a href=\"/register\">\n                <button className=\"landing-message--button\">\n                  Try for free!\n                </button>\n              </a>\n            </div>\n          </div>\n          <div className=\"landing-main-picture\">\n            <img src={picture} alt=\"landing\" className=\"landing-picture\" />\n          </div>\n          <div className=\"landing-main-bottom\">\n            <div className=\"landing-main-bottom-icons-container\">\n              <div className=\"icon-container\">\n                <AiOutlineTeam\n                  style={{ fontSize: \"75px\", color: \"rgb(59, 182, 170)\" }}\n                />\n                <p>\n                  Establish Teams with other colleagues and work together to\n                  accomplish tasks.\n                </p>\n              </div>\n              <div className=\"icon-container\">\n                <MdAssignment\n                  style={{ fontSize: \"75px\", color: \"rgb(59, 182, 170)\" }}\n                />\n                <p>\n                  Create multiple projects within a team categorize tasks based\n                  on different types of projects.\n                </p>\n              </div>\n              <div className=\"icon-container\">\n                <BsCardChecklist\n                  style={{ fontSize: \"75px\", color: \"rgb(59, 182, 170)\" }}\n                />\n                <p>\n                  Keep track of tasks via tasklists in individual projects and\n                  check them off when they are completed.\n                </p>\n              </div>\n            </div>\n            <div className=\"guest-login-button\">\n              <a href=\"/login\">\n                <button className=\"landing-message--button\">\n                  Guest Login!\n                </button>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/Onboard.js",["343"],"import React, { useContext, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport apiServer from \"../../config/apiServer\";\nimport { useForm } from \"react-hook-form\";\nimport \"../../css/LoginPage.css\";\n\nconst Onboard = (props) => {\n  const { register, handleSubmit, errors } = useForm();\n  const { setAuth } = useContext(AuthContext);\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const onboard = async ({ teamName }) => {\n    const email = localStorage.getItem(\"email\");\n    if (teamName) {\n      try {\n        const res = await apiServer.put(\"/register/onboard\", {\n          email,\n          teamName,\n        });\n        //sets initial token\n        localStorage.setItem(\"token\", res.data.token);\n        setErrorMessage(\"\");\n        //for Refresh\n        setAuth(res.data.token);\n      } catch (err) {\n        console.log(err.status);\n        setErrorMessage(\"Something went wrong\");\n      }\n    }\n  };\n\n  const onSkip = () => {\n    //sets initial token\n    localStorage.setItem(\"token\", localStorage.getItem(\"onboard\"));\n    //for component to refresh to redirect webpage\n    setAuth(localStorage.getItem(\"onboard\"));\n    localStorage.removeItem(\"onboard\");\n  };\n  return (\n    <div className=\"onboard-page-container\">\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          marginTop: \"200px\",\n        }}\n      >\n        <div className=\"onboard-page-header\">\n          <h1\n            style={{\n              fontWeight: \"500\",\n              marginBottom: \"20px\",\n              marginTop: \"1px\",\n              fontSize: \"24px\",\n            }}\n          >\n            What team will you be working on?\n          </h1>\n        </div>\n        <form className=\"onboard-page--form\" onSubmit={handleSubmit(onboard)}>\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <label htmlFor=\"teamName\">Team Name</label>\n            <input name=\"teamName\" ref={register({ minLength: 2 })}></input>\n            {errors.teamName?.type === \"minLengh\" && (\n              <p style={{ color: \"red\", margin: \"1px\" }}>\n                Team name must be greater than 1 character\n              </p>\n            )}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            {/* <button\n              style={{\n                width: \"150px\",\n                border: \"1px solid #0093ff\",\n                backgroundColor: \"transparent\",\n                borderRadius: \"5px\",\n                color: \"black\",\n                outline: \"none\",\n                cursor: \"pointer\",\n              }}\n              onClick={onSkip}\n            >\n              Skip\n            </button> */}\n            <button\n              style={{\n                width: \"150px\",\n              }}\n              type=\"submit\"\n            >\n              Continue\n            </button>\n          </div>\n          {errorMessage ? (\n            <p style={{ color: \"red\", margin: \"1px\" }}>{errorMessage}</p>\n          ) : null}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Onboard;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Loader.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBar.js",["344","345","346","347","348","349","350","351","352","353","354","355"],"import React, { useContext, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport \"../../css/Navbar.css\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport UserAvatar from \"./UserAvatar\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport ProjectForm from \"../Forms/ProjectForm\";\nimport TaskForm from \"../Forms/AddTaskForm\";\nimport Search from \"../../assets/search\";\nimport messageIcon from \"../../assets/message.png\";\nimport Alert from \"../../assets/alert\";\nimport { Context as UserContext } from \"../../context/store/UserStore\";\n\nconst TopNavBar = ({ name, setTeamProjects, setTasklists, sidebar }) => {\n  const { logout } = useContext(AuthContext);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorEle, setAnchorEle] = useState(null);\n  const [openProject, setOpenProject] = useState(false);\n  const [openTask, setOpenTask] = useState(false);\n  const [userState, userdispatch] = useContext(UserContext);\n\n  const clickOpenTask = () => {\n    setOpenTask(true);\n    handleNewClose();\n  };\n\n  const clickCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const clickOpenProject = () => {\n    setOpenProject(true);\n    handleNewClose();\n  };\n  const clickCloseProject = () => {\n    setOpenProject(false);\n  };\n\n  const handleNewClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleNewClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfClick = (event) => {\n    setAnchorEle(event.currentTarget);\n  };\n  const handleProfClose = () => {\n    setAnchorEle(null);\n  };\n\n  return (\n    // <div\n    //   className={\n    //     sidebar ? \"top-nav-bar-container__short\" : \"top-nav-bar-container\"\n    //   }\n    // >\n    <div className=\"top-nav-bar-container\">\n      <div className=\"top-nav-bar-left\">\n        <h2>{name}</h2>\n      </div>\n      <div className=\"top-nav-bar-middle\"></div>\n      <div className=\"top-nav-bar-right\" style={{}}>\n        {/* <div style={{ display: \"flex\" }}>\n          <input className=\"searchbar\" placeholder={\"Search\"}></input>\n        </div> */}\n        {/* <div>\n          <GrAddCircle onClick={handleNewClick} className=\"top-nav-bar--icon\" />\n          <Menu\n            style={{ marginTop: \"40px\" }}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleNewClose}\n          >\n            <MenuItem onClick={clickOpenTask}>Add Task</MenuItem>\n            <TaskForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseTask}\n              open={openTask}\n              setTasklists={setTasklists}\n            ></TaskForm>\n            <MenuItem onClick={clickOpenProject}>Add Project</MenuItem>\n            <ProjectForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseProject}\n              open={openProject}\n              setTeamProjects={setTeamProjects}\n            />\n          </Menu>\n        </div> */}\n        <div\n          className=\"top-nav-icons\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <div>\n            <Alert />\n          </div>\n          <div>\n            <Search />\n          </div>\n\n          <div>\n            <img className=\"logo\" style={{}} src={messageIcon} alt=\"logo\" />\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div style={{ padding: \"0\" }}>\n            <UserAvatar id={localStorage.getItem(\"userId\")} />\n          </div>\n          <div>{userState.user.name}</div>\n          <div\n            onClick={handleProfClick}\n            style={{ padding: \"0\", cursor: \"pointer\" }}\n          >\n            <i className=\"arrow\"></i>\n          </div>\n        </div>\n\n        <Menu\n          style={{ marginTop: \"40px\" }}\n          anchorEl={anchorEle}\n          keepMounted\n          open={Boolean(anchorEle)}\n          onClose={handleProfClose}\n        >\n          <MenuItem onClick={logout}>Logout</MenuItem>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nexport default TopNavBar;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarHome.js",["356","357","358","359","360","361","362","363","364","365","366","367","368","369","370"],"import React, { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport \"../../css/Navbar.css\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport UserAvatar from \"./UserAvatar\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport Search from \"../../assets/search\";\nimport messageIcon from \"../../assets/message.png\";\nimport Alert from \"../../assets/alert\";\nimport ProjectForm from \"../Forms/ProjectForm\";\nimport TaskForm from \"../Forms/AddTaskForm\";\nimport apiServer from \"../../config/apiServer\";\nimport { Context as UserContext } from \"../../context/store/UserStore\";\n\nconst TopNavBarHome = () => {\n  const { logout } = useContext(AuthContext);\n  const [userState, userdispatch] = useContext(UserContext);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorEle, setAnchorEle] = useState(null);\n  const [openProject, setOpenProject] = useState(false);\n  const [openTask, setOpenTask] = useState(false);\n  const userId = localStorage.getItem(\"userId\");\n\n  // useEffect(()=>{\n  //   (async()=>{\n  //     const user = await apiServer.get(\"/user\")\n  //   })();\n  // },[])\n\n  const clickOpenTask = () => {\n    setOpenTask(true);\n    handleNewClose();\n  };\n\n  const clickCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const clickOpenProject = () => {\n    setOpenProject(true);\n    handleNewClose();\n  };\n  const clickCloseProject = () => {\n    setOpenProject(false);\n  };\n\n  const handleNewClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleNewClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfClick = (event) => {\n    setAnchorEle(event.currentTarget);\n  };\n  const handleProfClose = () => {\n    setAnchorEle(null);\n  };\n  return (\n    <div className=\"top-nav-bar-container\" style={{}}>\n      <div\n        className=\"top-nav-bar-left\"\n        style={{ display: \"flex\", flexDirection: \"column\" }}\n      ></div>\n      <div className=\"top-nav-bar-middle\"></div>\n      <div className=\"top-nav-bar-right\" style={{}}>\n        {/* <div style={{ display: \"flex\" }}>\n          <input className=\"searchbar\" placeholder={\"Search\"}></input>\n        </div> */}\n        {/* <div>\n          <GrAddCircle onClick={handleNewClick} className=\"top-nav-bar--icon\" />\n          <Menu\n            style={{ marginTop: \"40px\" }}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleNewClose}\n          >\n            <MenuItem onClick={clickOpenTask}>Add Task</MenuItem>\n            <TaskForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseTask}\n              open={openTask}\n            ></TaskForm>\n            <MenuItem onClick={clickOpenProject}>Add Project</MenuItem>\n            <ProjectForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseProject}\n              open={openProject}\n            />\n          </Menu>\n        </div> */}\n        <div\n          className=\"top-nav-icons\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <div>\n            <Alert />\n          </div>\n          <div>\n            <Search />\n          </div>\n\n          <div>\n            <img className=\"logo\" style={{}} src={messageIcon} alt=\"logo\" />\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div style={{ padding: \"0\" }}>\n            <UserAvatar id={localStorage.getItem(\"userId\")} />\n          </div>\n          <div>\n            <p style={{ fontWeight: 500 }}>{userState.user.name}</p>\n          </div>\n          <div\n            onClick={handleProfClick}\n            style={{ padding: \"0\", cursor: \"pointer\" }}\n          >\n            <i className=\"arrow\"></i>\n          </div>\n        </div>\n\n        <Menu\n          style={{ marginTop: \"40px\" }}\n          anchorEl={anchorEle}\n          keepMounted\n          open={Boolean(anchorEle)}\n          onClose={handleProfClose}\n        >\n          <MenuItem onClick={logout}>Logout</MenuItem>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nexport default TopNavBarHome;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarTask.js",["371","372","373","374","375","376","377","378","379","380","381","382","383"],"import React, { useContext, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport { Context as UserContext } from \"../../context/store/UserStore\";\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\nimport \"../../css/Navbar.css\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport UserAvatar from \"./UserAvatar\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport ProjectForm from \"../Forms/ProjectForm\";\nimport TaskForm from \"../Forms/AddTaskForm\";\nimport Search from \"../../assets/search\";\nimport messageIcon from \"../../assets/message.png\";\nimport Alert from \"../../assets/alert\";\n\nconst TopNavBarTask = () => {\n  const { logout } = useContext(AuthContext);\n  const [userState, userdispatch] = useContext(UserContext);\n  const { name } = userState.user;\n  const [taskState, taskdispatch] = useContext(TaskContext);\n  const numTask = taskState.tasks.filter((task) => task.completed === true);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorEle, setAnchorEle] = useState(null);\n  const [openProject, setOpenProject] = useState(false);\n  const [openTask, setOpenTask] = useState(false);\n\n  const clickOpenTask = () => {\n    setOpenTask(true);\n    handleNewClose();\n  };\n\n  const clickCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const clickOpenProject = () => {\n    setOpenProject(true);\n    handleNewClose();\n  };\n  const clickCloseProject = () => {\n    setOpenProject(false);\n  };\n\n  const handleNewClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleNewClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfClick = (event) => {\n    setAnchorEle(event.currentTarget);\n  };\n  const handleProfClose = () => {\n    setAnchorEle(null);\n  };\n\n  return (\n    <div className=\"top-nav-bar-container\" style={{}}>\n      <div\n        className=\"top-nav-bar-left\"\n        style={{ display: \"flex\", flexDirection: \"column\" }}\n      >\n        <div style={{ fontSize: \"20px\" }}>{name}'s Tasks</div>\n        <p style={{}}>{numTask.length} completed tasks</p>\n      </div>\n      <div className=\"top-nav-bar-middle\"></div>\n      <div className=\"top-nav-bar-right\" style={{}}>\n        {/* <div style={{ display: \"flex\" }}>\n          <input className=\"searchbar\" placeholder={\"Search\"}></input>\n        </div> */}\n        {/* <div>\n          <GrAddCircle onClick={handleNewClick} className=\"top-nav-bar--icon\" />\n          <Menu\n            style={{ marginTop: \"40px\" }}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleNewClose}\n          >\n            <MenuItem onClick={clickOpenTask}>Add Task</MenuItem>\n            <TaskForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseTask}\n              open={openTask}\n            ></TaskForm>\n            <MenuItem onClick={clickOpenProject}>Add Project</MenuItem>\n            <ProjectForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseProject}\n              open={openProject}\n            />\n            \n          </Menu>\n        </div> */}\n        <div\n          className=\"top-nav-icons\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <div>\n            <Alert />\n          </div>\n          <div>\n            <Search />\n          </div>\n\n          <div>\n            <img className=\"logo\" style={{}} src={messageIcon} alt=\"logo\" />\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div style={{ padding: \"0\" }}>\n            <UserAvatar id={localStorage.getItem(\"userId\")} />\n          </div>\n          <div>{userState.user.name}</div>\n          <div\n            onClick={handleProfClick}\n            style={{ padding: \"0\", cursor: \"pointer\" }}\n          >\n            <i className=\"arrow\"></i>\n          </div>\n        </div>\n\n        <Menu\n          style={{ marginTop: \"40px\" }}\n          anchorEl={anchorEle}\n          keepMounted\n          open={Boolean(anchorEle)}\n          onClose={handleProfClose}\n        >\n          <MenuItem onClick={logout}>Logout</MenuItem>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nexport default TopNavBarTask;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/index.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/NewProjectTile.js",["384","385","386","387"],"import React, { useState } from \"react\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport \"../../css/Project.css\";\r\nimport ProjectForm from \"../Forms/ProjectForm\";\r\nconst NewProjectTile = ({ showSideProjectForm }) => {\r\n  const [open, setOpen] = useState(false);\r\n  // const openModal = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  // const closeModal = () => {\r\n  //   setOpen(false);\r\n  // };\r\n  // const modalBody = (\r\n  //   <div className=\"modal-container\">\r\n  //     <ProjectForm clickClose={closeModal} open={open}></ProjectForm>\r\n  //   </div>\r\n  // );\r\n  return (\r\n    <div className=\"project-tile-container\" onClick={showSideProjectForm}>\r\n      <div className=\"project-tile-box\">\r\n        <div className=\"new-project-tile-icon-container\">\r\n          <FiPlus className=\"new-project-tile-icon\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"project-tile-name\">New Project</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewProjectTile;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectItemHome.js",["388","389"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/Project.css\";\r\nimport { AiOutlineEllipsis } from \"react-icons/ai\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nconst ProjectItemHome = ({ project }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const openModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMenuClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  //import component as body such as forms, details, etc\r\n  // const body = (\r\n  //   <div className=\"modal-container\">\r\n  //     {/* <h2 id=\"modal-title\">Task Detail</h2>\r\n  //     <p id=\"modal-description\">\r\n  //       Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n  //     </p> */}\r\n  //     <TaskDetailsForm task={task} closeModal={closeModal} />\r\n  //   </div>\r\n  // );\r\n\r\n  return (\r\n    <Link\r\n      className=\"project-tile--link\"\r\n      to={`/team/${project.team_id}/project/${project.id}/${project.name}`}\r\n    >\r\n      <div className=\"project-home-item\" onClick={openModal}>\r\n        <div className=\"project-home-item-inner-container\">\r\n          <div className=\"project-home-item-inner-left\">\r\n            <div className=\"project-home-item-icon-container\">\r\n              <span className={`dot-task-${project.id}`}></span>\r\n            </div>\r\n            <div className=\"project-home-item-name-container\">\r\n              <p style={{ fontSize: \"15px\", fontWeight: \"500\", margin: \"0px\" }}>\r\n                {project.name}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"project-home-item-more-menu\"\r\n            style={{ height: \"100%\" }}\r\n            onClick={handleMenuClick}\r\n          >\r\n            <AiOutlineEllipsis style={{ fontSize: \"24px\" }} />\r\n          </div>\r\n          <Menu\r\n            style={{}}\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleMenuClose}\r\n          >\r\n            <MenuItem onClick={handleMenuClose}>Delete</MenuItem>\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ProjectItemHome;\r\n",["390","391"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectTile.js",["392","393"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport apiServer from \"../../config/apiServer\";\nimport \"../../css/Project.css\";\nimport { AiOutlineProject } from \"react-icons/ai\";\nimport Loader from \"../Loader\";\n\nconst ProjectTile = ({ project, teamId, id }) => {\n  const [loading, setLoading] = useState(true);\n  const [team, setTeam] = useState();\n  const getTeam = async () => {\n    const res = await apiServer.get(`/project/${project.id}/team`);\n    setTeam(res.data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const res = await apiServer.get(`/project/${project.id}/team`);\n      setTeam(res.data);\n      setLoading(false);\n    })();\n  }, []);\n\n  if (loading) {\n    return <Loader />;\n  }\n  const team_id = teamId || team.id;\n  return (\n    <Link\n      className=\"project-tile--link\"\n      to={`/team/${team_id}/project/${project.id}/${project.name}`}\n    >\n      <div className={`project-tile-container`}>\n        <div className=\"project-tile-box\">\n          <div className={`project-tile-icon project-tile-icon-${id}`}>\n            <AiOutlineProject style={{ fontSize: \"30px\", color: \"white\" }} />\n          </div>\n        </div>\n        <div className=\"project-tile-name\">{project.name}</div>\n      </div>\n    </Link>\n  );\n};\n\nexport default ProjectTile;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskDetailsForm.js",["394"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"../../css/Task.css\";\nimport moment from \"moment\";\nimport UserAvatar from \"../NavigationBar/UserAvatar\";\nimport apiServer from \"../../config/apiServer\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\nconst TaskDetailsForm = ({\n  task,\n  closeModal,\n  open,\n  setTasks,\n  setTasklistTasks,\n}) => {\n  const { register, handleSubmit } = useForm();\n  const [taskState, taskdispatch] = useContext(TaskContext);\n  const createdDate = moment(\n    task.createdAt.substring(0, 10).replace(\"-\", \"\"),\n    \"YYYYMMDD\"\n  );\n  const updatedDate = moment(\n    task.updatedAt.substring(0, 10).replace(\"-\", \"\"),\n    \"YYYYMMDD\"\n  );\n\n  const date = moment(\n    task.due_date.substring(0, 10).replace(\"-\", \"\"),\n    \"YYYYMMDD\"\n  );\n  const dueDate = date.format(\"YYYY-MM-DD\");\n\n  const [user, setUser] = useState();\n  const [loading, setLoading] = useState(true);\n  // console.log(task.completed);\n  const getTaskUser = async () => {\n    const res = await apiServer.get(`/user/${task.assignee_id}`);\n    setUser(res.data);\n    setLoading(false);\n  };\n\n  const onSubmit = async ({ name, due_date, description, completed }) => {\n    // put route to update task\n    try {\n      await apiServer.put(`/task/${task.id}`, {\n        name,\n        due_date,\n        description,\n        completed,\n      });\n      //Updates new task list\n      const res = await apiServer.get(\n        `/task/user/${localStorage.getItem(\"userId\")}`\n      );\n      await taskdispatch({ type: \"update_task\", payload: res.data });\n      if (setTasklistTasks) {\n        const taskres = await apiServer.get(\n          `/tasklist/${task.tasklist_id}/tasks`\n        );\n        setTasklistTasks(taskres.data);\n      }\n      closeModal();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await apiServer.delete(`/task/${task.id}`);\n      //Updates new task list\n      const res = await apiServer.get(\n        `/task/user/${localStorage.getItem(\"userId\")}`\n      );\n      await taskdispatch({ type: \"update_task\", payload: res.data });\n      closeModal();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getTaskUser();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading) {\n    return <div></div>;\n  }\n  return (\n    <div>\n      <form className=\"task-details-form\" onSubmit={handleSubmit(onSubmit)}>\n        <div>\n          <textarea\n            name=\"name\"\n            type=\"text\"\n            placeholder={\"Task Name\"}\n            defaultValue={task.name}\n            ref={register}\n            className=\"edit-task-title textarea\"\n          ></textarea>\n        </div>\n        <div className=\"edit-task-info\">\n          <div\n            className=\"edit-task-info-left\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <div className=\"edit-task-user-avatar-container\">\n              <UserAvatar id={task.assignee_id} />\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                paddingLeft: \"10px\",\n              }}\n            >\n              <div style={{ fontWeight: \"500\" }}>Assignee</div>\n              <select\n                style={{ marginTop: \"10px\", border: \"none\" }}\n                name=\"assignee\"\n                defaultValue={user.name}\n              >\n                <option value={user.name}>{user.name}</option>\n              </select>\n              {/* <div>{user.name}</div> */}\n            </div>\n          </div>\n          <div className=\"edit-task-info-mid\">\n            <input\n              type=\"checkbox\"\n              name=\"completed\"\n              defaultChecked={task.completed}\n              ref={register}\n            ></input>\n            <label htmlFor=\"completed\" style={{ fontWeight: \"500\" }}>\n              Mark Complete\n            </label>\n          </div>\n          <div\n            className=\"edit-task-info-right\"\n            style={{ display: \"flex\", flexDirection: \"column\" }}\n          >\n            <div style={{ display: \"flex\" }}>\n              <div style={{ fontWeight: \"500\", marginRight: \"5px\" }}>\n                Created:{\" \"}\n              </div>\n              <div>{createdDate.format(\"MMM DD YYYY\")}</div>\n            </div>\n            <div style={{ display: \"flex\", marginTop: \"5px\" }}>\n              <div style={{ fontWeight: \"500\", marginRight: \"5px\" }}>\n                Last Updated:{\" \"}\n              </div>\n              <div>{updatedDate.format(\"MMM DD YYYY\")}</div>\n            </div>\n            <div style={{ marginTop: \"5px\", display: \"flex\" }}>\n              <div\n                style={{\n                  fontWeight: \"500\",\n                  marginRight: \"5px\",\n                  alignSelf: \"center\",\n                }}\n              >\n                Due:\n              </div>\n              <input\n                className=\"edit-task-form-input\"\n                style={{ border: \"1px solid black\" }}\n                type=\"date\"\n                name=\"due_date\"\n                defaultValue={dueDate}\n                ref={register}\n              ></input>\n            </div>\n          </div>\n        </div>\n        <div>\n          <textarea\n            name=\"description\"\n            type=\"text\"\n            placeholder={\"Task Description\"}\n            defaultValue={task.description}\n            ref={register}\n            className=\"edit-task-description textarea\"\n          ></textarea>\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <div>\n            <Button\n              style={{ color: \"red\" }}\n              onClick={handleDelete}\n              color=\"primary\"\n            >\n              Delete\n            </Button>\n          </div>\n          <div style={{ display: \"flex\", marginLeft: \"350px\" }}>\n            <Button\n              style={{ color: \"#0093ff\" }}\n              onClick={closeModal}\n              color=\"primary\"\n            >\n              Cancel\n            </Button>\n            <Button style={{ color: \"#0093ff\" }} type=\"submit\" color=\"primary\">\n              Save\n            </Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default TaskDetailsForm;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemHome.js",["395","396","397","398","399","400","401"],"import React, { useState, useContext } from \"react\";\nimport moment from \"moment\";\nimport { Modal } from \"@material-ui/core\";\nimport \"../../css/Modal.css\";\nimport TaskDetailsForm from \"./TaskDetailsForm\";\nimport {\n  RiCheckboxBlankCircleLine,\n  RiCheckboxCircleLine,\n} from \"react-icons/ri\";\nimport { AiOutlineEllipsis } from \"react-icons/ai\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\nimport apiServer from \"../../config/apiServer\";\n\n//Task item list for home and task page\n\nconst TaskItemHome = ({ task, showSideTaskDetails, sideTaskDetails }) => {\n  const date = moment(\n    task.due_date.substring(0, 10).replace(\"-\", \"\"),\n    \"YYYYMMDD\"\n  );\n\n  const [taskState, taskDispatch] = useContext(TaskContext);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [open, setOpen] = useState(false);\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const setTaskPopOut = async () => {\n    if (sideTaskDetails === false) {\n      showSideTaskDetails();\n      //---\n      taskDispatch({ type: \"get_selected_task\", payload: null });\n      const res = await apiServer.get(`/task/${task.id}`);\n      await taskDispatch({ type: \"get_selected_task\", payload: res.data });\n      // setInitialLoad(false);\n      console.log(\"if popout\");\n    } else {\n      console.log(\"else popout\");\n      taskDispatch({ type: \"get_selected_task\", payload: null });\n      const res = await apiServer.get(`/task/${task.id}`);\n      await taskDispatch({ type: \"get_selected_task\", payload: res.data });\n      // setInitialLoad(false);\n    }\n  };\n\n  const handleTaskDelete = async (e) => {\n    // console.log(task.id);\n    handleMenuClose();\n    await apiServer.delete(`/task/${task.id}`);\n    const id = localStorage.getItem(\"userId\");\n    const res = await apiServer.get(`/task/user/${id}`);\n    await taskDispatch({ type: \"get_user_tasks\", payload: res.data });\n  };\n  //import component as body such as forms, details, etc\n  const body = (\n    <div className=\"modal-container\">\n      {/* <h2 id=\"modal-title\">Task Detail</h2>\n      <p id=\"modal-description\">\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n      </p> */}\n      <TaskDetailsForm task={task} closeModal={closeModal} />\n    </div>\n  );\n  return (\n    <>\n      <div className=\"task-home-item\">\n        <div className=\"task-home-item-inner-container\">\n          <div className=\"task-home-item-inner-left\" onClick={setTaskPopOut}>\n            <div className=\"task-home-item-icon-container\">\n              {/* {task.completed ? (\n                <RiCheckboxCircleLine\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                />\n              ) : (\n                <RiCheckboxBlankCircleLine style={{ fontSize: \"16px\" }} />\n              )} */}\n              <span className={`dot-task-${task.id}`}></span>\n            </div>\n            <div className=\"task-home-item-name-container\">\n              <p\n                style={{\n                  fontSize: \"15px\",\n                  fontWeight: \"500\",\n                  margin: \"0px\",\n                }}\n              >\n                {task.name}\n              </p>\n              <p style={{ color: \"grey\", margin: \"0\" }}>\n                {date.format(\"MMM D\")}\n              </p>\n            </div>\n          </div>\n          <div\n            className=\"task-home-item-more-menu\"\n            style={{ height: \"100%\" }}\n            onClick={handleMenuClick}\n          >\n            <AiOutlineEllipsis style={{ fontSize: \"24px\" }} />\n          </div>\n          <Menu\n            style={{}}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n          >\n            <MenuItem onClick={handleTaskDelete}>Delete</MenuItem>\n          </Menu>\n        </div>\n      </div>\n      {/* <Modal open={open} onClose={closeModal}>\n        {body}\n      </Modal> */}\n      {/* <TaskDetailsForm task={task} closeModal={closeModal} open={open} /> */}\n    </>\n  );\n};\n\nexport default TaskItemHome;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemTask.js",["402","403","404","405","406"],"import React, { useState, useContext } from \"react\";\r\nimport moment from \"moment\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport \"../../css/Modal.css\";\r\nimport TaskDetailsForm from \"../tasks/TaskDetailsForm\";\r\nimport {\r\n  RiCheckboxBlankCircleLine,\r\n  RiCheckboxCircleLine,\r\n} from \"react-icons/ri\";\r\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\r\nimport apiServer from \"../../config/apiServer\";\r\n\r\n//Task item list for home and task page\r\n\r\nconst TaskItemTask = ({\r\n  task,\r\n  showSideTaskDetails,\r\n  sideTaskDetails,\r\n  setInitialLoad,\r\n}) => {\r\n  const [taskState, taskdispatch] = useContext(TaskContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const date = moment(\r\n    task.due_date.substring(0, 10).replace(\"-\", \"\"),\r\n    \"YYYYMMDD\"\r\n  );\r\n  const openModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const setTaskPopOut = async () => {\r\n    if (sideTaskDetails === false) {\r\n      showSideTaskDetails();\r\n      //---\r\n      taskdispatch({ type: \"get_selected_task\", payload: null });\r\n      const res = await apiServer.get(`/task/${task.id}`);\r\n      await taskdispatch({ type: \"get_selected_task\", payload: res.data });\r\n      setInitialLoad(false);\r\n      console.log(\"if popout\");\r\n    } else {\r\n      console.log(\"else popout\");\r\n      taskdispatch({ type: \"get_selected_task\", payload: null });\r\n      const res = await apiServer.get(`/task/${task.id}`);\r\n      await taskdispatch({ type: \"get_selected_task\", payload: res.data });\r\n      setInitialLoad(false);\r\n    }\r\n  };\r\n\r\n  //import component as body such as forms, details, etc\r\n  const body = (\r\n    <div className=\"modal-container\">\r\n      {/* <h2 id=\"modal-title\">Task Detail</h2>\r\n      <p id=\"modal-description\">\r\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n      </p> */}\r\n      <TaskDetailsForm task={task} closeModal={closeModal} />\r\n    </div>\r\n  );\r\n  return (\r\n    <>\r\n      <li className=\"task-task-item\" onClick={setTaskPopOut}>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          {task.completed ? (\r\n            <RiCheckboxCircleLine\r\n              style={{ color: \"green\", fontSize: \"16px\" }}\r\n            />\r\n          ) : (\r\n            <RiCheckboxBlankCircleLine style={{ fontSize: \"16px\" }} />\r\n          )}\r\n          <p\r\n            style={{\r\n              paddingLeft: \"5px\",\r\n              color: \"gray\",\r\n              WebkitUserSelect: \"none\",\r\n              MozUserSelect: \"none\",\r\n              msUserSelect: \"none\",\r\n            }}\r\n          >\r\n            {task.name}\r\n          </p>\r\n        </div>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <div\r\n            className={`task-project-home-name-container task-project-${task.Project.id}`}\r\n          >\r\n            <p\r\n              style={{\r\n                margin: \"0px\",\r\n                padding: \"5px\",\r\n                fontSize: \"12px\",\r\n                fontWeight: \"500\",\r\n                WebkitUserSelect: \"none\",\r\n                MozUserSelect: \"none\",\r\n                msUserSelect: \"none\",\r\n              }}\r\n            >\r\n              {task.Project.name}\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"73px\",\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                color: \"gray\",\r\n                WebkitUserSelect: \"none\",\r\n                MozUserSelect: \"none\",\r\n                msUserSelect: \"none\",\r\n              }}\r\n            >\r\n              {date.format(\"MMM D YYYY\")}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      {/* <Modal open={open} onClose={closeModal}>\r\n        {body}\r\n      </Modal> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskItemTask;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskForm.js",["407","408","409","410","411","412","413"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskSection.js",["414"],"import React, { useContext, useState } from \"react\";\r\nimport { BiRightArrow } from \"react-icons/bi\";\r\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\r\nimport \"../../css/Task.css\";\r\nimport TaskItemTask from \"./TaskItemTask\";\r\nconst TaskSection = ({ title, tasks }) => {\r\n  const [open, setOpen] = useState(true);\r\n  const [taskState] = useContext(TaskContext);\r\n\r\n  const toggle = () => {\r\n    setOpen(!open);\r\n    let arrow = document.getElementById(`task-collapse-${title}`);\r\n    arrow.classList.toggle(\"open-arrow-collapse\");\r\n    arrow.classList.toggle(\"open-arrow\");\r\n  };\r\n  const taskList = tasks.map((task, i) => {\r\n    return <TaskItemTask task={task} key={i} />;\r\n  });\r\n  return (\r\n    <div className=\"task-section\">\r\n      <div className=\"task-section-header\" onClick={toggle}>\r\n        <div id={`task-collapse-${title}`} className=\"open-arrow\">\r\n          <BiRightArrow />\r\n        </div>\r\n        <h3 className=\"task-section-title\">{title}</h3>\r\n      </div>\r\n      {open && <div className=\"task-section-list\"> {taskList}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskSection;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskListItem.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/NewTeamMemberIcon.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskProjectForm.js",["415","416"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/TeamMemberIcon.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TeamForm.js",["417"],"import React, { useContext } from \"react\";\nimport { Modal } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useForm } from \"react-hook-form\";\nimport apiServer from \"../../config/apiServer\";\nimport { Context as TeamContext } from \"../../context/store/TeamStore\";\nimport \"../../css/Forms.css\";\nconst TeamForm = ({ handleNewClose, clickClose, open }) => {\n  const { register, handleSubmit, errors } = useForm();\n  const [teamState, teamdispatch] = useContext(TeamContext);\n  const userId = localStorage.getItem(\"userId\");\n\n  const onSubmit = async ({ name, description }) => {\n    await apiServer.post(`/team/user/${userId}`, {\n      name,\n      description,\n    });\n\n    const res = await apiServer.get(`/team/user/${userId}`);\n    await teamdispatch({ type: \"update_user_teams\", payload: res.data });\n    clickClose();\n  };\n\n  return (\n    <div>\n      <Modal open={open} onClose={clickClose}>\n        <div className=\"modal-container\">\n          <form className=\"task-form\" onSubmit={handleSubmit(onSubmit)}>\n            <h2 className=\"form-header\">Create a Team</h2>\n            <div className=\"form-top-container\">\n              <div className=\"form-top-left\">\n                <label className=\"form-label\">\n                  Team Name\n                  <input\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder={\"Team Name\"}\n                    className=\"form-input\"\n                    ref={register({ required: true })}\n                  ></input>\n                  {errors.name?.type === \"required\" && (\n                    <p className=\"error-message\">Please enter a team name</p>\n                  )}\n                </label>\n              </div>\n              <div className=\"form-top-middle\"></div>\n              {/* <div\n                className=\"form-top-right\"\n                style={{ alignSelf: \"normal\" }}\n              ></div> */}\n            </div>\n            <div>\n              <textarea\n                name=\"description\"\n                type=\"text\"\n                placeholder={\"Team Description\"}\n                className=\"edit-task-description textarea\"\n                ref={register}\n              ></textarea>\n            </div>\n            <div style={{ display: \"flex\", marginLeft: \"400px\" }}>\n              <Button\n                style={{ color: \"#0093ff\" }}\n                onClick={clickClose}\n                color=\"primary\"\n              >\n                Cancel\n              </Button>\n              <Button\n                style={{ color: \"#0093ff\" }}\n                type=\"submit\"\n                color=\"primary\"\n              >\n                Add\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TeamForm;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TaskListForm.js",["418","419","420","421"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/LoginForm.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/ProjectForm.js",["422","423","424","425"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/UserAvatar.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemProject.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddMemberForm.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/NewProject.js",["426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Projects.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/NewTasks.js",["446","447","448","449","450"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport TopNavBarTask from \"../NavigationBar/TopNavBarTask\";\r\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\r\nimport apiServer from \"../../config/apiServer\";\r\nimport TaskSection from \"../tasks/TaskSection\";\r\nimport PopOutTaskDetails from \"../PopOutMenu/PopOutTaskDetails\";\r\nimport TaskItemTask from \"../tasks/TaskItemTask\";\r\nimport Add from \"../../assets/Add\";\r\nimport AddTaskPopOutTaskPage from \"../PopOutMenu/AddTaskPopOutTaskPage\";\r\n\r\nconst NewTasks = () => {\r\n  const [taskState, taskdispatch] = useContext(TaskContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [initialLoad, setInitialLoad] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [sideTaskForm, setSideTaskForm] = useState(false);\r\n\r\n  const [sideTaskDetails, setSideTaskDetails] = useState(false);\r\n\r\n  const showSideTaskForm = () => {\r\n    setSideTaskDetails(false);\r\n    setSideTaskForm(!sideTaskForm);\r\n  };\r\n  const showSideTaskDetails = () => {\r\n    setSideTaskForm(false);\r\n    setSideTaskDetails(!sideTaskDetails);\r\n  };\r\n\r\n  const getUserTasks = async () => {\r\n    const id = localStorage.getItem(\"userId\");\r\n    const res = await apiServer.get(`/task/user/${id}`);\r\n    await taskdispatch({ type: \"get_user_tasks\", payload: res.data });\r\n    // setTasks(res.data);\r\n    setLoading(false);\r\n  };\r\n\r\n  const sortedTasks = taskState.tasks.sort(function (a, b) {\r\n    return new Date(a.due_date) - new Date(b.due_date);\r\n  });\r\n\r\n  const renderedTasks = sortedTasks.map((task, i) => {\r\n    return (\r\n      <TaskItemTask\r\n        task={task}\r\n        key={i}\r\n        showSideTaskDetails={showSideTaskDetails}\r\n        sideTaskDetails={sideTaskDetails}\r\n        setInitialLoad={setInitialLoad}\r\n      />\r\n    );\r\n  });\r\n  const openModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserTasks();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TopNavBarTask />\r\n      <div className=\"tasks-container\">\r\n        {/* <div className=\"tasks-container-header\"></div> */}\r\n        <div className=\"tasks-main-content\">\r\n          <div\r\n            className={\r\n              taskState.selectedTask || initialLoad\r\n                ? \"tasks-inner-container\"\r\n                : \"tasks-inner-container hidden\"\r\n            }\r\n          >\r\n            <div\r\n              className=\"tasks-add-task-container\"\r\n              onClick={showSideTaskForm}\r\n            >\r\n              <div className=\"tasks-add-task-icon\">\r\n                <Add />\r\n              </div>\r\n              <div className=\"add-task-button\">\r\n                <p style={{ margin: \"2px 0px 0px 0px\", paddingLeft: \"5px\" }}>\r\n                  Add Task\r\n                </p>\r\n              </div>\r\n            </div>\r\n            {renderedTasks}\r\n            {/* <TaskSection title={\"Tasks\"} tasks={sortedTasks} /> */}\r\n          </div>\r\n          {sideTaskDetails && taskState.selectedTask ? (\r\n            <PopOutTaskDetails\r\n              showSideTaskDetails={showSideTaskDetails}\r\n              sideTaskDetails={sideTaskDetails}\r\n            />\r\n          ) : null}\r\n          {sideTaskForm ? (\r\n            <AddTaskPopOutTaskPage\r\n              showSideTaskForm={showSideTaskForm}\r\n              title={\"Add a Task\"}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewTasks;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTasklist.js",["451","452","453","454","455","456","457","458"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { Modal, responsiveFontSizes } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AddTaskProjectForm from \"../Forms/AddTaskProjectForm\";\r\nimport ColumnTaskItem from \"./ColumnTaskItem\";\r\nimport apiServer from \"../../config/apiServer\";\r\nimport { Context as TasklistContext } from \"../../context/store/TasklistStore\";\r\nimport { AiOutlineEllipsis } from \"react-icons/ai\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nconst ColumnTasklist = ({\r\n  tasklist,\r\n  index,\r\n  setTasklists,\r\n  showSideTaskDetails,\r\n  sideTaskDetails,\r\n  showSideTaskForm,\r\n}) => {\r\n  const { projectId } = useParams();\r\n  const [openTaskProjectForm, setOpenTaskProjectForm] = useState(false);\r\n  // const [tasklistTasks, setTasklistTasks] = useState();\r\n  const [columnTitle, setColumnTitle] = useState(tasklist.name);\r\n  const [titleSelect, setTitleSelect] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [tasklistState, tasklistdispatch] = useContext(TasklistContext);\r\n\r\n  const openTaskProjectFormModal = () => {\r\n    setOpenTaskProjectForm(true);\r\n  };\r\n\r\n  const closeTaskProjectFormModal = () => {\r\n    setOpenTaskProjectForm(false);\r\n  };\r\n\r\n  const handleAddTaskClick = async () => {\r\n    await tasklistdispatch({\r\n      type: \"get_selected_tasklist\",\r\n      payload: tasklist.id,\r\n    });\r\n    showSideTaskForm();\r\n  };\r\n  const handleMenuClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleTitleChange = (e) => {\r\n    setTitleSelect(true);\r\n  };\r\n\r\n  const handleTitleUpdate = (e) => {\r\n    setColumnTitle(e.target.value);\r\n  };\r\n\r\n  const handleTasklistDelete = async (e) => {\r\n    // console.log(tasklist.id);\r\n    handleMenuClose();\r\n    await apiServer.delete(`/tasklist/${tasklist.id}`);\r\n    const resp = await apiServer.get(`/project/${projectId}/tasklists`);\r\n    setTasklists(resp.data);\r\n  };\r\n\r\n  const updateAndCloseTitle = async (e) => {\r\n    await apiServer.put(`/tasklist/${tasklist.id}/title`, { columnTitle });\r\n    const resp = await apiServer.get(`/project/${projectId}/tasklists`);\r\n    setTasklists(resp.data);\r\n    setTitleSelect(false);\r\n  };\r\n\r\n  useEffect(() => {}, [setColumnTitle]);\r\n\r\n  return (\r\n    <div key={tasklist.id}>\r\n      <Draggable\r\n        type=\"tasklist\"\r\n        draggableId={`Column-${tasklist.column_index.toString()}`}\r\n        index={index}\r\n        key={`Column-${tasklist.id.toString()}`}\r\n      >\r\n        {(provided) => (\r\n          <div\r\n            className=\"tasklist-container\"\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n            {...provided.dragHandleProps}\r\n          >\r\n            <div className=\"tasklist-header\">\r\n              <div className=\"tasklist-title\" onClick={handleTitleChange}>\r\n                {titleSelect ? (\r\n                  <form>\r\n                    <textarea\r\n                      className=\"tasklist-title__textarea\"\r\n                      placeholder=\"Enter column name here..\"\r\n                      value={columnTitle}\r\n                      onChange={handleTitleUpdate}\r\n                      onBlur={updateAndCloseTitle}\r\n                      autoFocus\r\n                    ></textarea>\r\n                  </form>\r\n                ) : (\r\n                  tasklist.name\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"tasklist-more-menu\" onClick={handleMenuClick}>\r\n                <AiOutlineEllipsis style={{ fontSize: \"24px\" }} />\r\n              </div>\r\n              <Menu\r\n                style={{}}\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleMenuClose}\r\n              >\r\n                <MenuItem onClick={handleTasklistDelete}>Delete</MenuItem>\r\n              </Menu>\r\n            </div>\r\n\r\n            <Droppable\r\n              type=\"task\"\r\n              droppableId={`${tasklist.id.toString()}-${index.toString()}`}\r\n            >\r\n              {(provided) => (\r\n                <div\r\n                  className=\"tasklist-task--list\"\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                >\r\n                  {tasklist.Tasks.map((task, index) => {\r\n                    return (\r\n                      <ColumnTaskItem\r\n                        key={index}\r\n                        task={task}\r\n                        index={index}\r\n                        showSideTaskDetails={showSideTaskDetails}\r\n                        sideTaskDetails={sideTaskDetails}\r\n                      />\r\n                    );\r\n                  })}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n\r\n            <div\r\n              className=\"tasklist-new-task--button\"\r\n              // onClick={openTaskProjectFormModal}\r\n              onClick={handleAddTaskClick}\r\n            >\r\n              + Add task\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n      <div>\r\n        {/* <Modal\r\n          className=\"modal\"\r\n          style={{ backgroundColor: \"white\" }}\r\n          open={openTaskProjectForm}\r\n          onClose={closeTaskProjectFormModal}\r\n        >\r\n          <div className=\"modal-container\">\r\n            <AddTaskProjectForm\r\n              setTasklists={setTasklists}\r\n              // setTasklistTasks={setTasklistTasks}\r\n              tasklistId={tasklist.id}\r\n              projectId={tasklist.project_id}\r\n              clickClose={closeTaskProjectFormModal}\r\n              open={openTaskProjectForm}\r\n            ></AddTaskProjectForm>\r\n          </div>\r\n        </Modal> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColumnTasklist;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTasklistPopOut.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddProjectPopOut.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTaskPopOutTaskPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/PopOutTaskDetails.js",["459","460"],"import React, { useState, useContext } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { RiCloseLine } from \"react-icons/ri\";\r\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\r\nimport { Context as ProjectContext } from \"../../context/store/ProjectStore\";\r\nimport moment from \"moment\";\r\nimport UserAvatar from \"../NavigationBar/UserAvatar\";\r\nimport apiServer from \"../../config/apiServer\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { BiCheck } from \"react-icons/bi\";\r\n\r\nconst PopOutTaskDetails = ({ showSideTaskDetails, sideTaskDetails }) => {\r\n  const [taskState, taskdispatch] = useContext(TaskContext);\r\n  const { selectedTask: task } = taskState;\r\n  const [projectState, projectdispatch] = useContext(ProjectContext);\r\n  const [teamDescription, setTeamDescription] = useState(task.description);\r\n  const [projectUsers, setProjectUsers] = useState(task.Project.Users);\r\n  const [assigneeUser, setAssigneeUser] = useState(task.User);\r\n  const [taskComments, setTaskComments] = useState(task.Comments);\r\n  const [dueDate, setDueDate] = useState(new Date(task.due_date));\r\n  // const [completed, setCompleted] = useState(task.completed);\r\n  const [commentBox, setCommentBox] = useState(false);\r\n\r\n  var completed = task.completed;\r\n  const date = moment(\r\n    task.due_date.substring(0, 10).replace(\"-\", \"\"),\r\n    \"YYYYMMDD\"\r\n  );\r\n\r\n  console.log(task);\r\n  // console.log(task.due_date, \"task.due_date DB\");\r\n  // console.log(date, \"moment date convert from db\");\r\n  // console.log(dueDate, \"dueDate state new Date convert \");\r\n\r\n  const { register, handleSubmit, clearErrors } = useForm();\r\n\r\n  //This doesn't do anything for initial\r\n  const getProjectUsers = async (event) => {\r\n    var projectSelect = document.getElementById(\"project-select\");\r\n    // var assigneeSelect = document.getElementById(\"assignee-select\");\r\n    clearErrors(projectSelect.name);\r\n    // clearErrors(assigneeSelect.name);\r\n    const res = await apiServer.get(`/project/${projectSelect.value}/team`);\r\n    const userList = res.data.Users.filter((user) => {\r\n      return user.id !== task.User.id;\r\n    });\r\n    console.log(userList, \"userList\");\r\n    setProjectUsers(userList);\r\n    updateProject();\r\n  };\r\n\r\n  const updateProject = async (e) => {\r\n    var projectId = document.getElementById(\"project-select\").value;\r\n    const userId = localStorage.getItem(\"userId\");\r\n    console.log(projectId);\r\n    await apiServer.put(`/task/${task.id}/project/${projectId}`);\r\n    const res = await apiServer.get(`/task/user/${userId}`);\r\n    await taskdispatch({ type: \"get_user_tasks\", payload: res.data });\r\n  };\r\n\r\n  const updateAssignee = async (e) => {\r\n    var assigneeId = document.getElementById(\"assignee-select\").value;\r\n\r\n    await apiServer.put(`/task/${task.id}/assignee/${assigneeId}`);\r\n    const assignee = await apiServer.get(`/task/${task.id}`);\r\n    setAssigneeUser(assignee.data.User);\r\n    //updates tasks\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const res = await apiServer.get(`/task/user/${userId}`);\r\n    await taskdispatch({ type: \"get_user_tasks\", payload: res.data });\r\n  };\r\n\r\n  const updateDueDate = async (date) => {\r\n    setDueDate(date);\r\n    await apiServer.put(`/task/${task.id}/dueDate`, { date });\r\n    console.log(date);\r\n  };\r\n  const updateDescription = async (e) => {\r\n    const description = e.target.value;\r\n    await apiServer.put(`/task/${task.id}/description`, { description });\r\n\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const handleDescriptionUpdate = (e) => {\r\n    setTeamDescription(e.target.value);\r\n  };\r\n\r\n  const handleCommentSubmit = async ({ text }) => {\r\n    const user_id = localStorage.getItem(\"userId\");\r\n    await apiServer.post(`/task/${task.id}/comment`, {\r\n      text,\r\n      user_id,\r\n    });\r\n\r\n    const comments = await apiServer.get(`/task/${task.id}/comment`);\r\n    setTaskComments(comments.data);\r\n    updateScroll();\r\n  };\r\n\r\n  const handleMarkComplete = async () => {\r\n    await updateComplete();\r\n  };\r\n\r\n  const updateComplete = async () => {\r\n    // console.log(completed, \"before\");\r\n    completed = !completed;\r\n    const userId = localStorage.getItem(\"userId\");\r\n    // console.log(completed, \"after\");\r\n\r\n    const updatedTask = await apiServer.put(`/task/${task.id}/complete`, {\r\n      completed,\r\n    });\r\n    await taskdispatch({\r\n      type: \"get_selected_task\",\r\n      payload: updatedTask.data,\r\n    });\r\n\r\n    // console.log(task, \"after update\");\r\n\r\n    const res = await apiServer.get(`/task/user/${userId}`);\r\n    await taskdispatch({ type: \"get_user_tasks\", payload: res.data });\r\n  };\r\n  const expandCommentBox = () => {\r\n    setCommentBox(!commentBox);\r\n  };\r\n\r\n  function updateScroll() {\r\n    var element = document.getElementById(\"scrollable\");\r\n    element.scrollTop = element.scrollHeight;\r\n  }\r\n  const renderedProjects = projectState.projects\r\n    .filter((project) => {\r\n      return project.id !== task.Project.id;\r\n    })\r\n    .map((project, i) => {\r\n      return (\r\n        <option key={i} id={project.id} value={project.id}>\r\n          {project.name}\r\n        </option>\r\n      );\r\n    });\r\n\r\n  const renderedUsers = projectUsers\r\n    .filter((user) => {\r\n      return user.id !== task.User.id;\r\n    })\r\n    .map((user, i) => {\r\n      return (\r\n        <option key={i} value={user.id}>\r\n          {user.name}\r\n        </option>\r\n      );\r\n    });\r\n\r\n  const renderedComments = taskComments.map((comment, i) => {\r\n    const commentDate = moment(\r\n      comment.createdAt.substring(0, 10).replace(\"-\", \"\"),\r\n      \"YYYYMMDD\"\r\n    ).format(\"MMM D\");\r\n\r\n    return (\r\n      <div className=\"comment-container\">\r\n        <div className=\"comment-header\">\r\n          <div\r\n            className=\"user-avatar\"\r\n            style={{\r\n              width: \"25px\",\r\n              height: \"25px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            {(comment.User.name[0] + comment.User.name[1]).toUpperCase()}\r\n          </div>\r\n\r\n          <div>\r\n            <p\r\n              style={{ fontWeight: 500, marginRight: \"10px\", fontSize: \"15px\" }}\r\n            >\r\n              {comment.User.name}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <p style={{ color: \"gray\", fontSize: \"12px\" }}>{commentDate}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"comment-text\">\r\n          <p style={{ fontSize: \"15px\", margin: \"0px\" }}>{comment.text}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={\"task-detail-menu active\"}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flex: \"1 1 auto\",\r\n            flexDirection: \"column\",\r\n            minHeight: \"1px\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <div className=\"task-detail-menu-container\">\r\n            <div className=\"task-detail-menu-top\">\r\n              <div\r\n                className={\r\n                  completed\r\n                    ? \"mark-complete-container__completed\"\r\n                    : \"mark-complete-container__incompleted\"\r\n                }\r\n                onClick={handleMarkComplete}\r\n              >\r\n                <div\r\n                  className={\r\n                    completed\r\n                      ? \"complete-button__completed\"\r\n                      : \"complete-button__incompleted\"\r\n                  }\r\n                >\r\n                  <div\r\n                    className=\"check-mark-container\"\r\n                    style={{ margin: \"0px 5px\" }}\r\n                  >\r\n                    <BiCheck\r\n                      className={\r\n                        completed\r\n                          ? \"check-mark-icon__completed\"\r\n                          : \"check-mark-icon__incompleted\"\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      completed\r\n                        ? \"mark-complete__completed\"\r\n                        : \"mark-complete__incompleted\"\r\n                    }\r\n                  >\r\n                    Mark Complete\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"task-detail-close-icon\">\r\n                <RiCloseLine\r\n                  style={{\r\n                    color: \"black\",\r\n                    fontSize: \"24px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={showSideTaskDetails}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* <div style={{ height: \"80%\" }}> */}\r\n            <div\r\n              id=\"scrollable\"\r\n              style={{\r\n                display: \"flex\",\r\n                flex: \"1 1 auto\",\r\n                flexDirection: \"column\",\r\n                minHeight: \"1px\",\r\n                zIndex: \"100\",\r\n                padding: \"0 24px\",\r\n                overflowY: \"auto\",\r\n                borderBottom: \"1px solid lightgrey\",\r\n                marginBottom: \"5px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <form className=\"task-detail-menu-main-content\">\r\n                  <div className=\"task-detail-title\">\r\n                    <h2>{task.name}</h2>\r\n                  </div>\r\n                  <div className=\"task-details-container\">\r\n                    <div className=\"task-details-subtitles\">\r\n                      <p>Assignee</p>\r\n                      <p>Due Date</p>\r\n                      <p>Project</p>\r\n                      <p>Description</p>\r\n                    </div>\r\n                    <div className=\"task-details-data\">\r\n                      <div\r\n                        className=\"assignee-select-container\"\r\n                        style={{ display: \"flex\" }}\r\n                      >\r\n                        <div\r\n                          className=\"user-avatar\"\r\n                          style={{\r\n                            width: \"25px\",\r\n                            height: \"25px\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                        >\r\n                          {(\r\n                            assigneeUser.name[0] + assigneeUser.name[1]\r\n                          ).toUpperCase()}\r\n                        </div>\r\n                        <select\r\n                          id=\"assignee-select\"\r\n                          name=\"assigneeId\"\r\n                          className=\"form-input\"\r\n                          ref={register({ required: true })}\r\n                          onChange={updateAssignee}\r\n                          style={{ width: \"150px\" }}\r\n                        >\r\n                          <option\r\n                            value={task.User.id}\r\n                            id={task.User.id}\r\n                            selected\r\n                          >\r\n                            {task.User.name}\r\n                          </option>\r\n                          {renderedUsers}\r\n                        </select>\r\n                      </div>\r\n                      <div\r\n                        className=\"dueDate-container\"\r\n                        style={{ marginTop: \"20px\" }}\r\n                      >\r\n                        <DatePicker\r\n                          selected={dueDate}\r\n                          onChange={(date) => updateDueDate(date)}\r\n                          // customInput={<DateButton />}\r\n                        />\r\n                        {/* <p style={{ marginTop: \"20px\" }}> {date.format(\"MMM D\")}</p> */}\r\n                      </div>\r\n\r\n                      <div\r\n                        className=\"project-select-container\"\r\n                        style={{\r\n                          height: \"25px\",\r\n                          borderRadius: \"20px\",\r\n\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginTop: \"15px\",\r\n                        }}\r\n                      >\r\n                        <select\r\n                          id=\"project-select\"\r\n                          name=\"projectId\"\r\n                          className={`form-input `}\r\n                          onChange={getProjectUsers}\r\n                          defaultValue={task.Project.name}\r\n                          ref={register({ required: true })}\r\n                          onBlur={updateProject}\r\n                          style={{\r\n                            height: \"25px\",\r\n                            borderRadius: \"20px\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            background: \"transparent\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <option\r\n                            value={task.Project.id}\r\n                            id={task.Project.id}\r\n                            selected\r\n                          >\r\n                            {task.Project.name}\r\n                          </option>\r\n                          {renderedProjects}\r\n                        </select>\r\n                        {/* <p style={{ margin: 0 }}> {task.Project.name}</p> */}\r\n                      </div>\r\n\r\n                      {/* <p style={{ marginTop: \"17px\" }}> {task.description}</p> */}\r\n                      <div className=\"task-detail-description-container\">\r\n                        <textarea\r\n                          className=\"task-detail-edit-description\"\r\n                          placeholder=\"Click to add team description...\"\r\n                          value={teamDescription}\r\n                          onChange={handleDescriptionUpdate}\r\n                          onBlur={updateDescription}\r\n                        ></textarea>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <div className=\"task-detail-user-comments-container\">\r\n                  {taskComments.length !== 0 ? (\r\n                    renderedComments\r\n                  ) : (\r\n                    <div>No comments yet.. </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              // className={\r\n              //   commentBox\r\n              //     ? \"task-detail-comment-container active\"\r\n              //     : \"task-detail-comment-container\"\r\n              // }\r\n              className=\"task-detail-comment-container\"\r\n            >\r\n              <div\r\n                // className={\r\n                //   commentBox\r\n                //     ? \"task-detail-user-comment active\"\r\n                //     : \"task-detail-user-comment\"\r\n                // }\r\n                className=\"task-detail-user-comment\"\r\n              >\r\n                <div\r\n                  className=\"task-detail-comment-avatar\"\r\n                  style={{ width: \"25px\", height: \"25px\", fontSize: \"10px\" }}\r\n                >\r\n                  <UserAvatar id={localStorage.getItem(\"userId\")} />\r\n                </div>\r\n                <div className=\"task-detail-comment-box\">\r\n                  <form\r\n                    className=\"task-detail-comment-form\"\r\n                    onSubmit={handleSubmit(handleCommentSubmit)}\r\n                    onFocus={expandCommentBox}\r\n                    onBlur={expandCommentBox}\r\n                  >\r\n                    <div style={{ width: \"100%\", height: \"100%\" }}>\r\n                      <textarea\r\n                        name=\"text\"\r\n                        className=\"comment-textarea\"\r\n                        placeholder=\"Ask a question or post an update...\"\r\n                        ref={register({ required: true })}\r\n                      ></textarea>\r\n                    </div>\r\n\r\n                    {/* {commentBox ? ( */}\r\n                    <div style={{ alignSelf: \"flex-end\", marginTop: \"10px\" }}>\r\n                      <button\r\n                        className=\"comment-button\"\r\n                        style={{ height: \"30px\", width: \"80px\" }}\r\n                        type=\"submit\"\r\n                      >\r\n                        Comment\r\n                      </button>\r\n                    </div>\r\n                    {/* ) : null} */}\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PopOutTaskDetails;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTaskPopOutProjectPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Home.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Logo.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/project.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/tasks.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Add.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/search.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/alert.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTaskItem.js",["461","462","463","464","465","466","467","468"],"import React, { useState, useContext } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport TaskDetailsForm from \"../tasks/TaskDetailsForm\";\r\nimport { Modal, responsiveFontSizes } from \"@material-ui/core\";\r\nimport Pin from \"../../assets/pin\";\r\nimport Comments from \"../../assets/comments\";\r\nimport UserAvatar from \"../NavigationBar/UserAvatar\";\r\nimport moment from \"moment\";\r\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\r\nimport apiServer from \"../../config/apiServer\";\r\n\r\nconst ColumnTaskItem = ({\r\n  task,\r\n  index,\r\n  showSideTaskDetails,\r\n  sideTaskDetails,\r\n}) => {\r\n  const [taskState, taskdispatch] = useContext(TaskContext);\r\n\r\n  const date = moment(\r\n    task.due_date.substring(0, 10).replace(\"-\", \"\"),\r\n    \"YYYYMMDD\"\r\n  );\r\n\r\n  const setTaskPopOut = async () => {\r\n    if (sideTaskDetails === false) {\r\n      showSideTaskDetails();\r\n      //---\r\n      taskdispatch({ type: \"get_selected_task\", payload: null });\r\n      const res = await apiServer.get(`/task/${task.id}`);\r\n      await taskdispatch({ type: \"get_selected_task\", payload: res.data });\r\n    } else {\r\n      taskdispatch({ type: \"get_selected_task\", payload: null });\r\n      const res = await apiServer.get(`/task/${task.id}`);\r\n      await taskdispatch({ type: \"get_selected_task\", payload: res.data });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div key={task.id}>\r\n      <Draggable\r\n        draggableId={`${task.id.toString()}`}\r\n        type=\"task\"\r\n        key={`${task.id}`}\r\n        index={index}\r\n      >\r\n        {(provided, snapshot) => (\r\n          <div\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            className=\"task-project-item\"\r\n            // onClick={openTaskDetailFormModal}\r\n            onClick={setTaskPopOut}\r\n          >\r\n            <div className=\"task-project-container-left\">\r\n              <div className=\"task-project-name\">{task.name}</div>\r\n              <div className=\"task-project-icons\">\r\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <Pin />{\" \"}\r\n                  <p style={{ color: \"darkgray\", marginLeft: \"5px\" }}>8</p>\r\n                </div>\r\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <Comments />{\" \"}\r\n                  <p style={{ color: \"darkgray\", marginLeft: \"5px\" }}>9</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"task-project-container-right\">\r\n              <div className=\"task-project-assignee-avatar\">\r\n                <div className=\"user-avatar\">\r\n                  {(task.User.name[0] + task.User.name[1]).toUpperCase()}\r\n                </div>\r\n              </div>\r\n              <div className=\"task-project-due_date\">\r\n                <p style={{ color: \"darkgray\" }}>{date.format(\"MMM D\")}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColumnTaskItem;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/pin.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/comments.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/PopOutTaskDetailsHome.js",["469","470"],"import React, { useState, useContext } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { RiCloseLine } from \"react-icons/ri\";\r\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\r\nimport { Context as ProjectContext } from \"../../context/store/ProjectStore\";\r\nimport moment from \"moment\";\r\nimport UserAvatar from \"../NavigationBar/UserAvatar\";\r\nimport apiServer from \"../../config/apiServer\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { BiCheck } from \"react-icons/bi\";\r\n\r\nconst PopOutTaskDetailsHome = ({ showSideTaskDetails, sideTaskDetails }) => {\r\n  const [taskState, taskdispatch] = useContext(TaskContext);\r\n  const { selectedTask: task } = taskState;\r\n  const [projectState, projectdispatch] = useContext(ProjectContext);\r\n  const [teamDescription, setTeamDescription] = useState(task.description);\r\n  const [projectUsers, setProjectUsers] = useState(task.Project.Users);\r\n  const [assigneeUser, setAssigneeUser] = useState(task.User);\r\n  const [taskComments, setTaskComments] = useState(task.Comments);\r\n  const [dueDate, setDueDate] = useState(new Date(task.due_date));\r\n  // const [completed, setCompleted] = useState(task.completed);\r\n  const [commentBox, setCommentBox] = useState(false);\r\n\r\n  var completed = task.completed;\r\n  const date = moment(\r\n    task.due_date.substring(0, 10).replace(\"-\", \"\"),\r\n    \"YYYYMMDD\"\r\n  );\r\n\r\n  console.log(task);\r\n  // console.log(task.due_date, \"task.due_date DB\");\r\n  // console.log(date, \"moment date convert from db\");\r\n  // console.log(dueDate, \"dueDate state new Date convert \");\r\n\r\n  const { register, handleSubmit, clearErrors } = useForm();\r\n\r\n  //This doesn't do anything for initial\r\n  const getProjectUsers = async (event) => {\r\n    var projectSelect = document.getElementById(\"project-select\");\r\n    // var assigneeSelect = document.getElementById(\"assignee-select\");\r\n    clearErrors(projectSelect.name);\r\n    // clearErrors(assigneeSelect.name);\r\n    const res = await apiServer.get(`/project/${projectSelect.value}/team`);\r\n    const userList = res.data.Users.filter((user) => {\r\n      return user.id !== task.User.id;\r\n    });\r\n    console.log(userList, \"userList\");\r\n    setProjectUsers(userList);\r\n    updateProject();\r\n  };\r\n\r\n  const updateProject = async (e) => {\r\n    var projectId = document.getElementById(\"project-select\").value;\r\n    const userId = localStorage.getItem(\"userId\");\r\n    console.log(projectId);\r\n    await apiServer.put(`/task/${task.id}/project/${projectId}`);\r\n    const res = await apiServer.get(`/task/user/${userId}`);\r\n    await taskdispatch({ type: \"get_user_tasks\", payload: res.data });\r\n  };\r\n\r\n  const updateAssignee = async (e) => {\r\n    var assigneeId = document.getElementById(\"assignee-select\").value;\r\n\r\n    await apiServer.put(`/task/${task.id}/assignee/${assigneeId}`);\r\n    const assignee = await apiServer.get(`/task/${task.id}`);\r\n    setAssigneeUser(assignee.data.User);\r\n    //updates tasks\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const res = await apiServer.get(`/task/user/${userId}`);\r\n    await taskdispatch({ type: \"get_user_tasks\", payload: res.data });\r\n  };\r\n\r\n  const updateDueDate = async (date) => {\r\n    setDueDate(date);\r\n    await apiServer.put(`/task/${task.id}/dueDate`, { date });\r\n    console.log(date);\r\n  };\r\n  const updateDescription = async (e) => {\r\n    const description = e.target.value;\r\n    await apiServer.put(`/task/${task.id}/description`, { description });\r\n\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const handleDescriptionUpdate = (e) => {\r\n    setTeamDescription(e.target.value);\r\n  };\r\n\r\n  const handleCommentSubmit = async ({ text }) => {\r\n    const user_id = localStorage.getItem(\"userId\");\r\n    await apiServer.post(`/task/${task.id}/comment`, {\r\n      text,\r\n      user_id,\r\n    });\r\n\r\n    const comments = await apiServer.get(`/task/${task.id}/comment`);\r\n    setTaskComments(comments.data);\r\n    updateScroll();\r\n  };\r\n\r\n  const handleMarkComplete = async () => {\r\n    await updateComplete();\r\n  };\r\n\r\n  const updateComplete = async () => {\r\n    // console.log(completed, \"before\");\r\n    completed = !completed;\r\n    const userId = localStorage.getItem(\"userId\");\r\n    // console.log(completed, \"after\");\r\n\r\n    const updatedTask = await apiServer.put(`/task/${task.id}/complete`, {\r\n      completed,\r\n    });\r\n    await taskdispatch({\r\n      type: \"get_selected_task\",\r\n      payload: updatedTask.data,\r\n    });\r\n\r\n    // console.log(task, \"after update\");\r\n\r\n    const res = await apiServer.get(`/task/user/${userId}`);\r\n    await taskdispatch({ type: \"get_user_tasks\", payload: res.data });\r\n  };\r\n  const expandCommentBox = () => {\r\n    setCommentBox(!commentBox);\r\n  };\r\n\r\n  function updateScroll() {\r\n    var element = document.getElementById(\"scrollable\");\r\n    element.scrollTop = element.scrollHeight;\r\n  }\r\n  const renderedProjects = projectState.projects\r\n    .filter((project) => {\r\n      return project.id !== task.Project.id;\r\n    })\r\n    .map((project, i) => {\r\n      return (\r\n        <option key={i} id={project.id} value={project.id}>\r\n          {project.name}\r\n        </option>\r\n      );\r\n    });\r\n\r\n  const renderedUsers = projectUsers\r\n    .filter((user) => {\r\n      return user.id !== task.User.id;\r\n    })\r\n    .map((user, i) => {\r\n      return (\r\n        <option key={i} value={user.id}>\r\n          {user.name}\r\n        </option>\r\n      );\r\n    });\r\n\r\n  const renderedComments = taskComments.map((comment, i) => {\r\n    const commentDate = moment(\r\n      comment.createdAt.substring(0, 10).replace(\"-\", \"\"),\r\n      \"YYYYMMDD\"\r\n    ).format(\"MMM D\");\r\n\r\n    return (\r\n      <div className=\"comment-container\">\r\n        <div className=\"comment-header\">\r\n          <div\r\n            className=\"user-avatar\"\r\n            style={{\r\n              width: \"25px\",\r\n              height: \"25px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            {(comment.User.name[0] + comment.User.name[1]).toUpperCase()}\r\n          </div>\r\n\r\n          <div>\r\n            <p\r\n              style={{ fontWeight: 500, marginRight: \"10px\", fontSize: \"15px\" }}\r\n            >\r\n              {comment.User.name}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <p style={{ color: \"gray\", fontSize: \"12px\" }}>{commentDate}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"comment-text\">\r\n          <p style={{ fontSize: \"15px\", margin: \"0px\" }}>{comment.text}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\"task-detail-menu active\"}\r\n        style={{ width: \"50%\", height: \"96%\" }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flex: \"1 1 auto\",\r\n            flexDirection: \"column\",\r\n            minHeight: \"1px\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <div className=\"task-detail-menu-container\">\r\n            <div className=\"task-detail-menu-top\">\r\n              <div\r\n                className={\r\n                  completed\r\n                    ? \"mark-complete-container__completed\"\r\n                    : \"mark-complete-container__incompleted\"\r\n                }\r\n                onClick={handleMarkComplete}\r\n              >\r\n                <div\r\n                  className={\r\n                    completed\r\n                      ? \"complete-button__completed\"\r\n                      : \"complete-button__incompleted\"\r\n                  }\r\n                >\r\n                  <div\r\n                    className=\"check-mark-container\"\r\n                    style={{ margin: \"0px 5px\" }}\r\n                  >\r\n                    <BiCheck\r\n                      className={\r\n                        completed\r\n                          ? \"check-mark-icon__completed\"\r\n                          : \"check-mark-icon__incompleted\"\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      completed\r\n                        ? \"mark-complete__completed\"\r\n                        : \"mark-complete__incompleted\"\r\n                    }\r\n                  >\r\n                    Mark Complete\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"task-detail-close-icon\">\r\n                <RiCloseLine\r\n                  style={{\r\n                    color: \"black\",\r\n                    fontSize: \"24px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={showSideTaskDetails}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* <div style={{ height: \"80%\" }}> */}\r\n            <div\r\n              id=\"scrollable\"\r\n              style={{\r\n                display: \"flex\",\r\n                flex: \"1 1 auto\",\r\n                flexDirection: \"column\",\r\n                minHeight: \"1px\",\r\n                zIndex: \"100\",\r\n                padding: \"0 24px\",\r\n                overflowY: \"auto\",\r\n                borderBottom: \"1px solid lightgrey\",\r\n                marginBottom: \"5px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <form className=\"task-detail-menu-main-content\">\r\n                  <div className=\"task-detail-title\">\r\n                    <h2>{task.name}</h2>\r\n                  </div>\r\n                  <div className=\"task-details-container\">\r\n                    <div className=\"task-details-subtitles\">\r\n                      <p>Assignee</p>\r\n                      <p>Due Date</p>\r\n                      <p>Project</p>\r\n                      <p>Description</p>\r\n                    </div>\r\n                    <div className=\"task-details-data\">\r\n                      <div\r\n                        className=\"assignee-select-container\"\r\n                        style={{ display: \"flex\" }}\r\n                      >\r\n                        <div\r\n                          className=\"user-avatar\"\r\n                          style={{\r\n                            width: \"25px\",\r\n                            height: \"25px\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                        >\r\n                          {(\r\n                            assigneeUser.name[0] + assigneeUser.name[1]\r\n                          ).toUpperCase()}\r\n                        </div>\r\n                        <select\r\n                          id=\"assignee-select\"\r\n                          name=\"assigneeId\"\r\n                          className=\"form-input\"\r\n                          ref={register({ required: true })}\r\n                          onChange={updateAssignee}\r\n                          style={{ width: \"150px\" }}\r\n                        >\r\n                          <option\r\n                            value={task.User.id}\r\n                            id={task.User.id}\r\n                            selected\r\n                          >\r\n                            {task.User.name}\r\n                          </option>\r\n                          {renderedUsers}\r\n                        </select>\r\n                      </div>\r\n                      <div\r\n                        className=\"dueDate-container\"\r\n                        style={{ marginTop: \"20px\" }}\r\n                      >\r\n                        <DatePicker\r\n                          selected={dueDate}\r\n                          onChange={(date) => updateDueDate(date)}\r\n                          // customInput={<DateButton />}\r\n                        />\r\n                        {/* <p style={{ marginTop: \"20px\" }}> {date.format(\"MMM D\")}</p> */}\r\n                      </div>\r\n\r\n                      <div\r\n                        className=\"project-select-container\"\r\n                        style={{\r\n                          height: \"25px\",\r\n                          borderRadius: \"20px\",\r\n\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginTop: \"15px\",\r\n                        }}\r\n                      >\r\n                        <select\r\n                          id=\"project-select\"\r\n                          name=\"projectId\"\r\n                          className={`form-input `}\r\n                          onChange={getProjectUsers}\r\n                          defaultValue={task.Project.name}\r\n                          ref={register({ required: true })}\r\n                          onBlur={updateProject}\r\n                          style={{\r\n                            height: \"25px\",\r\n                            borderRadius: \"20px\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            background: \"transparent\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <option\r\n                            value={task.Project.id}\r\n                            id={task.Project.id}\r\n                            selected\r\n                          >\r\n                            {task.Project.name}\r\n                          </option>\r\n                          {renderedProjects}\r\n                        </select>\r\n                        {/* <p style={{ margin: 0 }}> {task.Project.name}</p> */}\r\n                      </div>\r\n\r\n                      {/* <p style={{ marginTop: \"17px\" }}> {task.description}</p> */}\r\n                      <div className=\"task-detail-description-container\">\r\n                        <textarea\r\n                          className=\"task-detail-edit-description\"\r\n                          placeholder=\"Click to add team description...\"\r\n                          value={teamDescription}\r\n                          onChange={handleDescriptionUpdate}\r\n                          onBlur={updateDescription}\r\n                        ></textarea>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <div className=\"task-detail-user-comments-container\">\r\n                  {taskComments.length !== 0 ? (\r\n                    renderedComments\r\n                  ) : (\r\n                    <div>No comments yet.. </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              // className={\r\n              //   commentBox\r\n              //     ? \"task-detail-comment-container active\"\r\n              //     : \"task-detail-comment-container\"\r\n              // }\r\n              className=\"task-detail-comment-container\"\r\n            >\r\n              <div\r\n                // className={\r\n                //   commentBox\r\n                //     ? \"task-detail-user-comment active\"\r\n                //     : \"task-detail-user-comment\"\r\n                // }\r\n                className=\"task-detail-user-comment\"\r\n              >\r\n                <div\r\n                  className=\"task-detail-comment-avatar\"\r\n                  style={{ width: \"25px\", height: \"25px\", fontSize: \"10px\" }}\r\n                >\r\n                  <UserAvatar id={localStorage.getItem(\"userId\")} />\r\n                </div>\r\n                <div className=\"task-detail-comment-box\">\r\n                  <form\r\n                    className=\"task-detail-comment-form\"\r\n                    onSubmit={handleSubmit(handleCommentSubmit)}\r\n                    onFocus={expandCommentBox}\r\n                    onBlur={expandCommentBox}\r\n                  >\r\n                    <div style={{ width: \"100%\", height: \"100%\" }}>\r\n                      <textarea\r\n                        name=\"text\"\r\n                        className=\"comment-textarea\"\r\n                        placeholder=\"Ask a question or post an update...\"\r\n                        ref={register({ required: true })}\r\n                      ></textarea>\r\n                    </div>\r\n\r\n                    {/* {commentBox ? ( */}\r\n                    <div style={{ alignSelf: \"flex-end\", marginTop: \"10px\" }}>\r\n                      <button\r\n                        className=\"comment-button\"\r\n                        style={{ height: \"30px\", width: \"80px\" }}\r\n                        type=\"submit\"\r\n                      >\r\n                        Comment\r\n                      </button>\r\n                    </div>\r\n                    {/* ) : null} */}\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PopOutTaskDetailsHome;\r\n",{"ruleId":"471","replacedBy":"472"},{"ruleId":"473","replacedBy":"474"},{"ruleId":"475","severity":1,"message":"476","line":4,"column":8,"nodeType":"477","messageId":"478","endLine":4,"endColumn":17},{"ruleId":"475","severity":1,"message":"479","line":7,"column":8,"nodeType":"477","messageId":"478","endLine":7,"endColumn":22},{"ruleId":"475","severity":1,"message":"480","line":23,"column":10,"nodeType":"477","messageId":"478","endLine":23,"endColumn":19},{"ruleId":"475","severity":1,"message":"481","line":24,"column":10,"nodeType":"477","messageId":"478","endLine":24,"endColumn":19},{"ruleId":"475","severity":1,"message":"482","line":25,"column":10,"nodeType":"477","messageId":"478","endLine":25,"endColumn":22},{"ruleId":"475","severity":1,"message":"483","line":26,"column":10,"nodeType":"477","messageId":"478","endLine":26,"endColumn":19},{"ruleId":"475","severity":1,"message":"484","line":15,"column":10,"nodeType":"477","messageId":"478","endLine":15,"endColumn":14},{"ruleId":"475","severity":1,"message":"485","line":3,"column":10,"nodeType":"477","messageId":"478","endLine":3,"endColumn":15},{"ruleId":"475","severity":1,"message":"486","line":3,"column":17,"nodeType":"477","messageId":"478","endLine":3,"endColumn":36},{"ruleId":"475","severity":1,"message":"487","line":8,"column":38,"nodeType":"477","messageId":"478","endLine":8,"endColumn":47},{"ruleId":"475","severity":1,"message":"488","line":20,"column":22,"nodeType":"477","messageId":"478","endLine":20,"endColumn":33},{"ruleId":"475","severity":1,"message":"489","line":20,"column":35,"nodeType":"477","messageId":"478","endLine":20,"endColumn":41},{"ruleId":"475","severity":1,"message":"490","line":23,"column":10,"nodeType":"477","messageId":"478","endLine":23,"endColumn":15},{"ruleId":"475","severity":1,"message":"491","line":53,"column":9,"nodeType":"477","messageId":"478","endLine":53,"endColumn":30},{"ruleId":"475","severity":1,"message":"492","line":92,"column":13,"nodeType":"477","messageId":"478","endLine":92,"endColumn":34},{"ruleId":"475","severity":1,"message":"493","line":94,"column":13,"nodeType":"477","messageId":"478","endLine":94,"endColumn":29},{"ruleId":"475","severity":1,"message":"494","line":96,"column":13,"nodeType":"477","messageId":"478","endLine":96,"endColumn":33},{"ruleId":"475","severity":1,"message":"495","line":97,"column":13,"nodeType":"477","messageId":"478","endLine":97,"endColumn":28},{"ruleId":"475","severity":1,"message":"496","line":178,"column":11,"nodeType":"477","messageId":"478","endLine":178,"endColumn":25},{"ruleId":"475","severity":1,"message":"497","line":180,"column":11,"nodeType":"477","messageId":"478","endLine":180,"endColumn":29},{"ruleId":"475","severity":1,"message":"493","line":181,"column":11,"nodeType":"477","messageId":"478","endLine":181,"endColumn":27},{"ruleId":"475","severity":1,"message":"498","line":182,"column":11,"nodeType":"477","messageId":"478","endLine":182,"endColumn":24},{"ruleId":"475","severity":1,"message":"499","line":184,"column":11,"nodeType":"477","messageId":"478","endLine":184,"endColumn":26},{"ruleId":"475","severity":1,"message":"500","line":194,"column":11,"nodeType":"477","messageId":"478","endLine":194,"endColumn":27},{"ruleId":"475","severity":1,"message":"501","line":216,"column":9,"nodeType":"477","messageId":"478","endLine":216,"endColumn":21},{"ruleId":"475","severity":1,"message":"502","line":249,"column":9,"nodeType":"477","messageId":"478","endLine":249,"endColumn":26},{"ruleId":"475","severity":1,"message":"503","line":10,"column":8,"nodeType":"477","messageId":"478","endLine":10,"endColumn":17},{"ruleId":"475","severity":1,"message":"504","line":12,"column":10,"nodeType":"477","messageId":"478","endLine":12,"endColumn":29},{"ruleId":"475","severity":1,"message":"505","line":11,"column":8,"nodeType":"477","messageId":"478","endLine":11,"endColumn":15},{"ruleId":"475","severity":1,"message":"506","line":3,"column":8,"nodeType":"477","messageId":"478","endLine":3,"endColumn":12},{"ruleId":"475","severity":1,"message":"507","line":5,"column":8,"nodeType":"477","messageId":"478","endLine":5,"endColumn":10},{"ruleId":"475","severity":1,"message":"508","line":7,"column":10,"nodeType":"477","messageId":"478","endLine":7,"endColumn":25},{"ruleId":"475","severity":1,"message":"509","line":8,"column":10,"nodeType":"477","messageId":"478","endLine":8,"endColumn":23},{"ruleId":"475","severity":1,"message":"510","line":9,"column":10,"nodeType":"477","messageId":"478","endLine":9,"endColumn":22},{"ruleId":"475","severity":1,"message":"511","line":10,"column":10,"nodeType":"477","messageId":"478","endLine":10,"endColumn":16},{"ruleId":"475","severity":1,"message":"512","line":32,"column":9,"nodeType":"477","messageId":"478","endLine":32,"endColumn":15},{"ruleId":"475","severity":1,"message":"513","line":4,"column":10,"nodeType":"477","messageId":"478","endLine":4,"endColumn":21},{"ruleId":"475","severity":1,"message":"514","line":7,"column":8,"nodeType":"477","messageId":"478","endLine":7,"endColumn":19},{"ruleId":"475","severity":1,"message":"515","line":8,"column":8,"nodeType":"477","messageId":"478","endLine":8,"endColumn":16},{"ruleId":"475","severity":1,"message":"516","line":17,"column":10,"nodeType":"477","messageId":"478","endLine":17,"endColumn":18},{"ruleId":"475","severity":1,"message":"517","line":19,"column":10,"nodeType":"477","messageId":"478","endLine":19,"endColumn":21},{"ruleId":"475","severity":1,"message":"518","line":20,"column":10,"nodeType":"477","messageId":"478","endLine":20,"endColumn":18},{"ruleId":"475","severity":1,"message":"519","line":21,"column":21,"nodeType":"477","messageId":"478","endLine":21,"endColumn":33},{"ruleId":"475","severity":1,"message":"520","line":23,"column":9,"nodeType":"477","messageId":"478","endLine":23,"endColumn":22},{"ruleId":"475","severity":1,"message":"521","line":28,"column":9,"nodeType":"477","messageId":"478","endLine":28,"endColumn":23},{"ruleId":"475","severity":1,"message":"522","line":32,"column":9,"nodeType":"477","messageId":"478","endLine":32,"endColumn":25},{"ruleId":"475","severity":1,"message":"523","line":36,"column":9,"nodeType":"477","messageId":"478","endLine":36,"endColumn":26},{"ruleId":"475","severity":1,"message":"524","line":40,"column":9,"nodeType":"477","messageId":"478","endLine":40,"endColumn":23},{"ruleId":"475","severity":1,"message":"525","line":1,"column":29,"nodeType":"477","messageId":"478","endLine":1,"endColumn":38},{"ruleId":"475","severity":1,"message":"513","line":4,"column":10,"nodeType":"477","messageId":"478","endLine":4,"endColumn":21},{"ruleId":"475","severity":1,"message":"514","line":10,"column":8,"nodeType":"477","messageId":"478","endLine":10,"endColumn":19},{"ruleId":"475","severity":1,"message":"515","line":11,"column":8,"nodeType":"477","messageId":"478","endLine":11,"endColumn":16},{"ruleId":"475","severity":1,"message":"526","line":12,"column":8,"nodeType":"477","messageId":"478","endLine":12,"endColumn":17},{"ruleId":"475","severity":1,"message":"519","line":17,"column":21,"nodeType":"477","messageId":"478","endLine":17,"endColumn":33},{"ruleId":"475","severity":1,"message":"516","line":19,"column":10,"nodeType":"477","messageId":"478","endLine":19,"endColumn":18},{"ruleId":"475","severity":1,"message":"517","line":21,"column":10,"nodeType":"477","messageId":"478","endLine":21,"endColumn":21},{"ruleId":"475","severity":1,"message":"518","line":22,"column":10,"nodeType":"477","messageId":"478","endLine":22,"endColumn":18},{"ruleId":"475","severity":1,"message":"527","line":23,"column":9,"nodeType":"477","messageId":"478","endLine":23,"endColumn":15},{"ruleId":"475","severity":1,"message":"520","line":31,"column":9,"nodeType":"477","messageId":"478","endLine":31,"endColumn":22},{"ruleId":"475","severity":1,"message":"521","line":36,"column":9,"nodeType":"477","messageId":"478","endLine":36,"endColumn":23},{"ruleId":"475","severity":1,"message":"522","line":40,"column":9,"nodeType":"477","messageId":"478","endLine":40,"endColumn":25},{"ruleId":"475","severity":1,"message":"523","line":44,"column":9,"nodeType":"477","messageId":"478","endLine":44,"endColumn":26},{"ruleId":"475","severity":1,"message":"524","line":48,"column":9,"nodeType":"477","messageId":"478","endLine":48,"endColumn":23},{"ruleId":"475","severity":1,"message":"513","line":6,"column":10,"nodeType":"477","messageId":"478","endLine":6,"endColumn":21},{"ruleId":"475","severity":1,"message":"514","line":9,"column":8,"nodeType":"477","messageId":"478","endLine":9,"endColumn":19},{"ruleId":"475","severity":1,"message":"515","line":10,"column":8,"nodeType":"477","messageId":"478","endLine":10,"endColumn":16},{"ruleId":"475","severity":1,"message":"519","line":17,"column":21,"nodeType":"477","messageId":"478","endLine":17,"endColumn":33},{"ruleId":"475","severity":1,"message":"528","line":19,"column":21,"nodeType":"477","messageId":"478","endLine":19,"endColumn":33},{"ruleId":"475","severity":1,"message":"516","line":22,"column":10,"nodeType":"477","messageId":"478","endLine":22,"endColumn":18},{"ruleId":"475","severity":1,"message":"517","line":24,"column":10,"nodeType":"477","messageId":"478","endLine":24,"endColumn":21},{"ruleId":"475","severity":1,"message":"518","line":25,"column":10,"nodeType":"477","messageId":"478","endLine":25,"endColumn":18},{"ruleId":"475","severity":1,"message":"520","line":27,"column":9,"nodeType":"477","messageId":"478","endLine":27,"endColumn":22},{"ruleId":"475","severity":1,"message":"521","line":32,"column":9,"nodeType":"477","messageId":"478","endLine":32,"endColumn":23},{"ruleId":"475","severity":1,"message":"522","line":36,"column":9,"nodeType":"477","messageId":"478","endLine":36,"endColumn":25},{"ruleId":"475","severity":1,"message":"523","line":40,"column":9,"nodeType":"477","messageId":"478","endLine":40,"endColumn":26},{"ruleId":"475","severity":1,"message":"524","line":44,"column":9,"nodeType":"477","messageId":"478","endLine":44,"endColumn":23},{"ruleId":"475","severity":1,"message":"485","line":2,"column":10,"nodeType":"477","messageId":"478","endLine":2,"endColumn":15},{"ruleId":"475","severity":1,"message":"514","line":5,"column":8,"nodeType":"477","messageId":"478","endLine":5,"endColumn":19},{"ruleId":"475","severity":1,"message":"529","line":7,"column":10,"nodeType":"477","messageId":"478","endLine":7,"endColumn":14},{"ruleId":"475","severity":1,"message":"530","line":7,"column":16,"nodeType":"477","messageId":"478","endLine":7,"endColumn":23},{"ruleId":"475","severity":1,"message":"529","line":8,"column":10,"nodeType":"477","messageId":"478","endLine":8,"endColumn":14},{"ruleId":"475","severity":1,"message":"531","line":14,"column":9,"nodeType":"477","messageId":"478","endLine":14,"endColumn":19},{"ruleId":"471","replacedBy":"532"},{"ruleId":"473","replacedBy":"533"},{"ruleId":"475","severity":1,"message":"534","line":11,"column":9,"nodeType":"477","messageId":"478","endLine":11,"endColumn":16},{"ruleId":"535","severity":1,"message":"536","line":23,"column":6,"nodeType":"537","endLine":23,"endColumn":8,"suggestions":"538"},{"ruleId":"475","severity":1,"message":"480","line":18,"column":10,"nodeType":"477","messageId":"478","endLine":18,"endColumn":19},{"ruleId":"475","severity":1,"message":"485","line":3,"column":10,"nodeType":"477","messageId":"478","endLine":3,"endColumn":15},{"ruleId":"475","severity":1,"message":"539","line":7,"column":3,"nodeType":"477","messageId":"478","endLine":7,"endColumn":28},{"ruleId":"475","severity":1,"message":"540","line":8,"column":3,"nodeType":"477","messageId":"478","endLine":8,"endColumn":23},{"ruleId":"475","severity":1,"message":"480","line":23,"column":10,"nodeType":"477","messageId":"478","endLine":23,"endColumn":19},{"ruleId":"475","severity":1,"message":"529","line":25,"column":10,"nodeType":"477","messageId":"478","endLine":25,"endColumn":14},{"ruleId":"475","severity":1,"message":"541","line":26,"column":9,"nodeType":"477","messageId":"478","endLine":26,"endColumn":18},{"ruleId":"475","severity":1,"message":"542","line":68,"column":9,"nodeType":"477","messageId":"478","endLine":68,"endColumn":13},{"ruleId":"475","severity":1,"message":"485","line":3,"column":10,"nodeType":"477","messageId":"478","endLine":3,"endColumn":15},{"ruleId":"475","severity":1,"message":"480","line":21,"column":10,"nodeType":"477","messageId":"478","endLine":21,"endColumn":19},{"ruleId":"475","severity":1,"message":"529","line":22,"column":10,"nodeType":"477","messageId":"478","endLine":22,"endColumn":14},{"ruleId":"475","severity":1,"message":"541","line":28,"column":9,"nodeType":"477","messageId":"478","endLine":28,"endColumn":18},{"ruleId":"475","severity":1,"message":"542","line":55,"column":9,"nodeType":"477","messageId":"478","endLine":55,"endColumn":13},{"ruleId":"475","severity":1,"message":"511","line":3,"column":8,"nodeType":"477","messageId":"478","endLine":3,"endColumn":14},{"ruleId":"475","severity":1,"message":"485","line":4,"column":10,"nodeType":"477","messageId":"478","endLine":4,"endColumn":15},{"ruleId":"475","severity":1,"message":"543","line":8,"column":21,"nodeType":"477","messageId":"478","endLine":8,"endColumn":36},{"ruleId":"475","severity":1,"message":"544","line":20,"column":24,"nodeType":"477","messageId":"478","endLine":20,"endColumn":39},{"ruleId":"475","severity":1,"message":"545","line":21,"column":25,"nodeType":"477","messageId":"478","endLine":21,"endColumn":41},{"ruleId":"475","severity":1,"message":"546","line":25,"column":24,"nodeType":"477","messageId":"478","endLine":25,"endColumn":39},{"ruleId":"475","severity":1,"message":"480","line":26,"column":10,"nodeType":"477","messageId":"478","endLine":26,"endColumn":19},{"ruleId":"475","severity":1,"message":"480","line":8,"column":10,"nodeType":"477","messageId":"478","endLine":8,"endColumn":19},{"ruleId":"475","severity":1,"message":"485","line":4,"column":10,"nodeType":"477","messageId":"478","endLine":4,"endColumn":15},{"ruleId":"475","severity":1,"message":"547","line":25,"column":25,"nodeType":"477","messageId":"478","endLine":25,"endColumn":41},{"ruleId":"475","severity":1,"message":"483","line":10,"column":10,"nodeType":"477","messageId":"478","endLine":10,"endColumn":19},{"ruleId":"475","severity":1,"message":"548","line":1,"column":17,"nodeType":"477","messageId":"478","endLine":1,"endColumn":27},{"ruleId":"475","severity":1,"message":"511","line":3,"column":8,"nodeType":"477","messageId":"478","endLine":3,"endColumn":14},{"ruleId":"475","severity":1,"message":"485","line":4,"column":10,"nodeType":"477","messageId":"478","endLine":4,"endColumn":15},{"ruleId":"475","severity":1,"message":"543","line":7,"column":21,"nodeType":"477","messageId":"478","endLine":7,"endColumn":36},{"ruleId":"475","severity":1,"message":"485","line":2,"column":10,"nodeType":"477","messageId":"478","endLine":2,"endColumn":15},{"ruleId":"475","severity":1,"message":"511","line":3,"column":8,"nodeType":"477","messageId":"478","endLine":3,"endColumn":14},{"ruleId":"475","severity":1,"message":"482","line":19,"column":10,"nodeType":"477","messageId":"478","endLine":19,"endColumn":22},{"ruleId":"475","severity":1,"message":"549","line":59,"column":9,"nodeType":"477","messageId":"478","endLine":59,"endColumn":19},{"ruleId":"475","severity":1,"message":"548","line":1,"column":38,"nodeType":"477","messageId":"478","endLine":1,"endColumn":48},{"ruleId":"475","severity":1,"message":"486","line":3,"column":17,"nodeType":"477","messageId":"478","endLine":3,"endColumn":36},{"ruleId":"475","severity":1,"message":"550","line":7,"column":8,"nodeType":"477","messageId":"478","endLine":7,"endColumn":20},{"ruleId":"475","severity":1,"message":"488","line":17,"column":22,"nodeType":"477","messageId":"478","endLine":17,"endColumn":33},{"ruleId":"475","severity":1,"message":"489","line":17,"column":35,"nodeType":"477","messageId":"478","endLine":17,"endColumn":41},{"ruleId":"475","severity":1,"message":"490","line":19,"column":10,"nodeType":"477","messageId":"478","endLine":19,"endColumn":15},{"ruleId":"475","severity":1,"message":"551","line":22,"column":10,"nodeType":"477","messageId":"478","endLine":22,"endColumn":19},{"ruleId":"475","severity":1,"message":"552","line":22,"column":21,"nodeType":"477","messageId":"478","endLine":22,"endColumn":33},{"ruleId":"475","severity":1,"message":"553","line":25,"column":10,"nodeType":"477","messageId":"478","endLine":25,"endColumn":23},{"ruleId":"475","severity":1,"message":"492","line":78,"column":13,"nodeType":"477","messageId":"478","endLine":78,"endColumn":34},{"ruleId":"475","severity":1,"message":"493","line":80,"column":13,"nodeType":"477","messageId":"478","endLine":80,"endColumn":29},{"ruleId":"475","severity":1,"message":"494","line":82,"column":13,"nodeType":"477","messageId":"478","endLine":82,"endColumn":33},{"ruleId":"475","severity":1,"message":"495","line":83,"column":13,"nodeType":"477","messageId":"478","endLine":83,"endColumn":28},{"ruleId":"475","severity":1,"message":"496","line":164,"column":11,"nodeType":"477","messageId":"478","endLine":164,"endColumn":25},{"ruleId":"475","severity":1,"message":"497","line":166,"column":11,"nodeType":"477","messageId":"478","endLine":166,"endColumn":29},{"ruleId":"475","severity":1,"message":"493","line":167,"column":11,"nodeType":"477","messageId":"478","endLine":167,"endColumn":27},{"ruleId":"475","severity":1,"message":"498","line":168,"column":11,"nodeType":"477","messageId":"478","endLine":168,"endColumn":24},{"ruleId":"475","severity":1,"message":"499","line":170,"column":11,"nodeType":"477","messageId":"478","endLine":170,"endColumn":26},{"ruleId":"475","severity":1,"message":"500","line":180,"column":11,"nodeType":"477","messageId":"478","endLine":180,"endColumn":27},{"ruleId":"475","severity":1,"message":"501","line":202,"column":9,"nodeType":"477","messageId":"478","endLine":202,"endColumn":21},{"ruleId":"475","severity":1,"message":"554","line":5,"column":8,"nodeType":"477","messageId":"478","endLine":5,"endColumn":19},{"ruleId":"475","severity":1,"message":"555","line":13,"column":10,"nodeType":"477","messageId":"478","endLine":13,"endColumn":17},{"ruleId":"475","severity":1,"message":"529","line":15,"column":10,"nodeType":"477","messageId":"478","endLine":15,"endColumn":14},{"ruleId":"475","severity":1,"message":"541","line":52,"column":9,"nodeType":"477","messageId":"478","endLine":52,"endColumn":18},{"ruleId":"475","severity":1,"message":"531","line":56,"column":9,"nodeType":"477","messageId":"478","endLine":56,"endColumn":19},{"ruleId":"475","severity":1,"message":"556","line":2,"column":10,"nodeType":"477","messageId":"478","endLine":2,"endColumn":25},{"ruleId":"475","severity":1,"message":"485","line":3,"column":10,"nodeType":"477","messageId":"478","endLine":3,"endColumn":15},{"ruleId":"475","severity":1,"message":"486","line":3,"column":17,"nodeType":"477","messageId":"478","endLine":3,"endColumn":36},{"ruleId":"475","severity":1,"message":"557","line":5,"column":8,"nodeType":"477","messageId":"478","endLine":5,"endColumn":26},{"ruleId":"475","severity":1,"message":"558","line":21,"column":10,"nodeType":"477","messageId":"478","endLine":21,"endColumn":29},{"ruleId":"475","severity":1,"message":"559","line":26,"column":10,"nodeType":"477","messageId":"478","endLine":26,"endColumn":23},{"ruleId":"475","severity":1,"message":"560","line":28,"column":9,"nodeType":"477","messageId":"478","endLine":28,"endColumn":33},{"ruleId":"475","severity":1,"message":"561","line":32,"column":9,"nodeType":"477","messageId":"478","endLine":32,"endColumn":34},{"ruleId":"475","severity":1,"message":"546","line":16,"column":24,"nodeType":"477","messageId":"478","endLine":16,"endColumn":39},{"ruleId":"475","severity":1,"message":"562","line":26,"column":9,"nodeType":"477","messageId":"478","endLine":26,"endColumn":13},{"ruleId":"475","severity":1,"message":"563","line":1,"column":17,"nodeType":"477","messageId":"478","endLine":1,"endColumn":25},{"ruleId":"475","severity":1,"message":"556","line":2,"column":10,"nodeType":"477","messageId":"478","endLine":2,"endColumn":25},{"ruleId":"475","severity":1,"message":"564","line":2,"column":27,"nodeType":"477","messageId":"478","endLine":2,"endColumn":36},{"ruleId":"475","severity":1,"message":"565","line":3,"column":8,"nodeType":"477","messageId":"478","endLine":3,"endColumn":23},{"ruleId":"475","severity":1,"message":"485","line":4,"column":10,"nodeType":"477","messageId":"478","endLine":4,"endColumn":15},{"ruleId":"475","severity":1,"message":"486","line":4,"column":17,"nodeType":"477","messageId":"478","endLine":4,"endColumn":36},{"ruleId":"475","severity":1,"message":"566","line":7,"column":8,"nodeType":"477","messageId":"478","endLine":7,"endColumn":18},{"ruleId":"475","severity":1,"message":"480","line":18,"column":10,"nodeType":"477","messageId":"478","endLine":18,"endColumn":19},{"ruleId":"475","severity":1,"message":"546","line":16,"column":24,"nodeType":"477","messageId":"478","endLine":16,"endColumn":39},{"ruleId":"475","severity":1,"message":"562","line":26,"column":9,"nodeType":"477","messageId":"478","endLine":26,"endColumn":13},"no-native-reassign",["567"],"no-negated-in-lhs",["568"],"no-unused-vars","'TasksPage' is defined but never used.","Identifier","unusedVar","'NewProjectPage' is defined but never used.","'taskState' is assigned a value but never used.","'userState' is assigned a value but never used.","'projectState' is assigned a value but never used.","'teamState' is assigned a value but never used.","'team' is assigned a value but never used.","'Modal' is defined but never used.","'responsiveFontSizes' is defined but never used.","'Draggable' is defined but never used.","'projectName' is assigned a value but never used.","'teamId' is assigned a value but never used.","'tasks' is assigned a value but never used.","'openTasklistFormModal' is assigned a value but never used.","'destinationTasklistId' is assigned a value but never used.","'sourceTasklistId' is assigned a value but never used.","'destinationTaskIndex' is assigned a value but never used.","'sourceTaskIndex' is assigned a value but never used.","'sourceColumnId' is assigned a value but never used.","'destinationIndexId' is assigned a value but never used.","'sourceIndexId' is assigned a value but never used.","'updatedTasklist' is assigned a value but never used.","'updatedTaskIndex' is assigned a value but never used.","'getTasklists' is assigned a value but never used.","'tasklistFormModal' is assigned a value but never used.","'homeImage' is defined but never used.","'AiOutlinePlusCircle' is defined but never used.","'Project' is defined but never used.","'logo' is defined but never used.","'bg' is defined but never used.","'BsCardChecklist' is defined but never used.","'AiOutlineTeam' is defined but never used.","'MdAssignment' is defined but never used.","'Button' is defined but never used.","'onSkip' is assigned a value but never used.","'GrAddCircle' is defined but never used.","'ProjectForm' is defined but never used.","'TaskForm' is defined but never used.","'anchorEl' is assigned a value but never used.","'openProject' is assigned a value but never used.","'openTask' is assigned a value but never used.","'userdispatch' is assigned a value but never used.","'clickOpenTask' is assigned a value but never used.","'clickCloseTask' is assigned a value but never used.","'clickOpenProject' is assigned a value but never used.","'clickCloseProject' is assigned a value but never used.","'handleNewClick' is assigned a value but never used.","'useEffect' is defined but never used.","'apiServer' is defined but never used.","'userId' is assigned a value but never used.","'taskdispatch' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'closeModal' is assigned a value but never used.",["567"],["568"],"'getTeam' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'project.id'. Either include it or remove the dependency array.","ArrayExpression",["569"],"'RiCheckboxBlankCircleLine' is defined but never used.","'RiCheckboxCircleLine' is defined but never used.","'openModal' is assigned a value but never used.","'body' is assigned a value but never used.","'TasklistContext' is defined but never used.","'setProjectError' is assigned a value but never used.","'setAssigneeError' is assigned a value but never used.","'projectdispatch' is assigned a value but never used.","'tasklistdispatch' is assigned a value but never used.","'useContext' is defined but never used.","'clearError' is assigned a value but never used.","'TaskListItem' is defined but never used.","'taskArray' is assigned a value but never used.","'setTaskArray' is assigned a value but never used.","'tasklistTasks' is assigned a value but never used.","'TaskSection' is defined but never used.","'loading' is assigned a value but never used.","'DragDropContext' is defined but never used.","'AddTaskProjectForm' is defined but never used.","'openTaskProjectForm' is assigned a value but never used.","'tasklistState' is assigned a value but never used.","'openTaskProjectFormModal' is assigned a value but never used.","'closeTaskProjectFormModal' is assigned a value but never used.","'date' is assigned a value but never used.","'useState' is defined but never used.","'Droppable' is defined but never used.","'TaskDetailsForm' is defined but never used.","'UserAvatar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"570","fix":"571"},"Update the dependencies array to be: [project.id]",{"range":"572","text":"573"},[720,722],"[project.id]"]