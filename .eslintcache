[{"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/index.js":"1","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/App.js":"2","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/AuthContext.js":"3","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Routes.js":"4","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/UserStore.js":"5","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TasklistStore.js":"6","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TaskStore.js":"7","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/ProjectStore.js":"8","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TeamStore.js":"9","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/AuthRoutes.js":"10","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingRoutes.js":"11","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TaskReducer.js":"12","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/UserReducer.js":"13","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/ProjectReducer.js":"14","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TasklistReducer.js":"15","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TeamReducer.js":"16","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Team.js":"17","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Project.js":"18","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Tasks.js":"19","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Home.js":"20","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/RegisterPage.js":"21","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/LeftNavBar.js":"22","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LoginPage.js":"23","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/apiServer.js":"24","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingPage.js":"25","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/Onboard.js":"26","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Loader.js":"27","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBar.js":"28","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarHome.js":"29","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarTask.js":"30","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/index.js":"31","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/NewProjectTile.js":"32","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectItemHome.js":"33","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectTile.js":"34","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskDetailsForm.js":"35","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemHome.js":"36","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemTask.js":"37","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskForm.js":"38","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskSection.js":"39","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskListItem.js":"40","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/NewTeamMemberIcon.js":"41","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskProjectForm.js":"42","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/TeamMemberIcon.js":"43","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TeamForm.js":"44","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TaskListForm.js":"45","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/LoginForm.js":"46","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/ProjectForm.js":"47","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/UserAvatar.js":"48","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemProject.js":"49","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddMemberForm.js":"50","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/NewProject.js":"51","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Projects.js":"52","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/NewTasks.js":"53","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTasklist.js":"54","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTasklistPopOut.js":"55","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddProjectPopOut.js":"56","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTaskPopOutTaskPage.js":"57","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/PopOutTaskDetails.js":"58","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTaskPopOutProjectPage.js":"59","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Home.js":"60","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Logo.js":"61","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/project.js":"62","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/tasks.js":"63","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Add.js":"64","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/search.js":"65","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/alert.js":"66","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTaskItem.js":"67","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/pin.js":"68","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/comments.js":"69","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/PopOutTaskDetailsHome.js":"70"},{"size":387,"mtime":1609962889663,"results":"71","hashOfConfig":"72"},{"size":1851,"mtime":1607982896422,"results":"73","hashOfConfig":"72"},{"size":104,"mtime":1607369643885,"results":"74","hashOfConfig":"72"},{"size":508,"mtime":1606848376103,"results":"75","hashOfConfig":"72"},{"size":449,"mtime":1607369643914,"results":"76","hashOfConfig":"72"},{"size":500,"mtime":1607369643909,"results":"77","hashOfConfig":"72"},{"size":450,"mtime":1608238733157,"results":"78","hashOfConfig":"72"},{"size":474,"mtime":1607369643906,"results":"79","hashOfConfig":"72"},{"size":450,"mtime":1607369643912,"results":"80","hashOfConfig":"72"},{"size":3520,"mtime":1609988820578,"results":"81","hashOfConfig":"72"},{"size":779,"mtime":1607369511845,"results":"82","hashOfConfig":"72"},{"size":365,"mtime":1609958921573,"results":"83","hashOfConfig":"72"},{"size":193,"mtime":1607369643903,"results":"84","hashOfConfig":"72"},{"size":460,"mtime":1607369643894,"results":"85","hashOfConfig":"72"},{"size":415,"mtime":1609958921583,"results":"86","hashOfConfig":"72"},{"size":308,"mtime":1607369643901,"results":"87","hashOfConfig":"72"},{"size":4166,"mtime":1609990777871,"results":"88","hashOfConfig":"72"},{"size":11924,"mtime":1609990810300,"results":"89","hashOfConfig":"72"},{"size":3562,"mtime":1609990816531,"results":"90","hashOfConfig":"72"},{"size":8183,"mtime":1609995721993,"results":"91","hashOfConfig":"72"},{"size":3540,"mtime":1607369511865,"results":"92","hashOfConfig":"72"},{"size":5945,"mtime":1609988895090,"results":"93","hashOfConfig":"72"},{"size":841,"mtime":1607369511852,"results":"94","hashOfConfig":"72"},{"size":467,"mtime":1609990393462,"results":"95","hashOfConfig":"72"},{"size":4534,"mtime":1609958921337,"results":"96","hashOfConfig":"72"},{"size":3243,"mtime":1607978384299,"results":"97","hashOfConfig":"72"},{"size":126,"mtime":1609978804232,"results":"98","hashOfConfig":"72"},{"size":4105,"mtime":1609958921353,"results":"99","hashOfConfig":"72"},{"size":4182,"mtime":1609988213276,"results":"100","hashOfConfig":"72"},{"size":4287,"mtime":1609958921370,"results":"101","hashOfConfig":"72"},{"size":251,"mtime":1606848381423,"results":"102","hashOfConfig":"72"},{"size":998,"mtime":1609988250264,"results":"103","hashOfConfig":"72"},{"size":2349,"mtime":1609958921498,"results":"104","hashOfConfig":"72"},{"size":1339,"mtime":1609990742970,"results":"105","hashOfConfig":"72"},{"size":6431,"mtime":1609990798053,"results":"106","hashOfConfig":"72"},{"size":4279,"mtime":1609976458264,"results":"107","hashOfConfig":"72"},{"size":3888,"mtime":1609976457208,"results":"108","hashOfConfig":"72"},{"size":9345,"mtime":1609958921290,"results":"109","hashOfConfig":"72"},{"size":1121,"mtime":1607982655510,"results":"110","hashOfConfig":"72"},{"size":3473,"mtime":1609990803867,"results":"111","hashOfConfig":"72"},{"size":1305,"mtime":1607369592304,"results":"112","hashOfConfig":"72"},{"size":6480,"mtime":1609990764301,"results":"113","hashOfConfig":"72"},{"size":521,"mtime":1607369592311,"results":"114","hashOfConfig":"72"},{"size":2808,"mtime":1609958921330,"results":"115","hashOfConfig":"72"},{"size":2418,"mtime":1609958921322,"results":"116","hashOfConfig":"72"},{"size":3311,"mtime":1609990841947,"results":"117","hashOfConfig":"72"},{"size":4410,"mtime":1609958921312,"results":"118","hashOfConfig":"72"},{"size":722,"mtime":1609990731400,"results":"119","hashOfConfig":"72"},{"size":1574,"mtime":1609958921552,"results":"120","hashOfConfig":"72"},{"size":3307,"mtime":1609990707108,"results":"121","hashOfConfig":"72"},{"size":14093,"mtime":1609990752144,"results":"122","hashOfConfig":"72"},{"size":222,"mtime":1609958921429,"results":"123","hashOfConfig":"72"},{"size":3527,"mtime":1609990771183,"results":"124","hashOfConfig":"72"},{"size":5950,"mtime":1609990790239,"results":"125","hashOfConfig":"72"},{"size":1367,"mtime":1609958921462,"results":"126","hashOfConfig":"72"},{"size":1466,"mtime":1609958921442,"results":"127","hashOfConfig":"72"},{"size":1271,"mtime":1609958921456,"results":"128","hashOfConfig":"72"},{"size":16563,"mtime":1609977897644,"results":"129","hashOfConfig":"72"},{"size":1394,"mtime":1609958921450,"results":"130","hashOfConfig":"72"},{"size":1221,"mtime":1609958921166,"results":"131","hashOfConfig":"72"},{"size":1659,"mtime":1609958921175,"results":"132","hashOfConfig":"72"},{"size":2932,"mtime":1609958921251,"results":"133","hashOfConfig":"72"},{"size":2211,"mtime":1609958921264,"results":"134","hashOfConfig":"72"},{"size":1176,"mtime":1609958921158,"results":"135","hashOfConfig":"72"},{"size":1796,"mtime":1609958921257,"results":"136","hashOfConfig":"72"},{"size":2081,"mtime":1609958921227,"results":"137","hashOfConfig":"72"},{"size":3077,"mtime":1609985698118,"results":"138","hashOfConfig":"72"},{"size":2069,"mtime":1609958921244,"results":"139","hashOfConfig":"72"},{"size":1474,"mtime":1609958921234,"results":"140","hashOfConfig":"72"},{"size":16637,"mtime":1609994253216,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"1sdex4x",{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"144"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"144"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"144"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"144"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"144"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"144"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"144"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"144"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"144"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"144"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"144"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"144"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"144"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"144"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"144"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"144"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"144"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/index.js",[],["302","303"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/App.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/AuthContext.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Routes.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/UserStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TasklistStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TaskStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/ProjectStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TeamStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/AuthRoutes.js",["304","305","306","307","308","309"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport HomePage from \"./Pages/Home\";\nimport TasksPage from \"./Pages/Tasks\";\nimport ProjectPage from \"./Pages/Project\";\nimport ProjectsPage from \"./Pages/Projects\";\nimport NewProjectPage from \"./Pages/NewProject\";\nimport TeamPage from \"./Pages/Team\";\nimport NewTasksPage from \"./Pages/NewTasks\";\nimport \"../css/Navbar.css\";\nimport LeftNavBar from \"./NavigationBar/LeftNavBar\";\n\nimport { Context as UserContext } from \"../context/store/UserStore\";\nimport { Context as TaskContext } from \"../context/store/TaskStore\";\nimport { Context as ProjectContext } from \"../context/store/ProjectStore\";\nimport { Context as TeamContext } from \"../context/store/TeamStore\";\n\nimport apiServer from \"../config/apiServer\";\n\nconst AuthRoutes = () => {\n  const [sidebar, setSidebar] = useState(true);\n  const showSidebar = () => setSidebar(!sidebar);\n  const [taskState, taskdispatch] = useContext(TaskContext);\n  const [userState, userdispatch] = useContext(UserContext);\n  const [projectState, projectdispatch] = useContext(ProjectContext);\n  const [teamState, teamdispatch] = useContext(TeamContext);\n\n  //Maybe grab all information here and state goes down to child components?\n  const getUserInfo = async () => {\n    const id = localStorage.getItem(\"userId\");\n    const res = await apiServer.get(`/user/${id}`);\n    await userdispatch({ type: \"get_user_info\", payload: res.data });\n  };\n\n  const getUserTasks = async () => {\n    const id = localStorage.getItem(\"userId\");\n    const res = await apiServer.get(`/task/user/${id}`);\n    await taskdispatch({ type: \"get_user_tasks\", payload: res.data });\n  };\n\n  const getUserTeams = async () => {\n    const id = localStorage.getItem(\"userId\");\n    const res = await apiServer.get(`/team/user/${id}`);\n    await teamdispatch({ type: \"get_user_teams\", payload: res.data });\n  };\n\n  const getUserProjects = async () => {\n    const id = localStorage.getItem(\"userId\");\n    const res = await apiServer.get(`/project/user/${id}`);\n    await projectdispatch({\n      type: \"get_user_projects\",\n      payload: res.data,\n    });\n  };\n\n  useEffect(() => {\n    getUserInfo();\n    getUserTasks();\n    getUserTeams();\n    getUserProjects();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"overlay\">\n      <BrowserRouter>\n        <LeftNavBar showSidebar={showSidebar} sidebar={sidebar} />\n        <div\n          className={\n            sidebar\n              ? \"overlay-right-container\"\n              : \"overlay-right-container__short\"\n          }\n        >\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/tasks\" component={NewTasksPage} />\n            <Route exact path=\"/projects\" component={ProjectsPage} />\n\n            {/* <Route\n              path=\"/team/:teamId/project/:projectId/:projectName\"\n              component={ProjectPage}\n            /> */}\n            <Route\n              path=\"/team/:teamId/project/:projectId/:projectName\"\n              render={() => <ProjectPage sidebar={sidebar} />}\n            />\n            <Route path=\"/team/:teamId/:teamName\" component={TeamPage} />\n            <Route\n              path=\"/*\"\n              render={() => {\n                return <Redirect to=\"/\" />;\n              }}\n            />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default AuthRoutes;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingRoutes.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TaskReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/UserReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/ProjectReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TasklistReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TeamReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Team.js",["310"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Project.js",["311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Tasks.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Home.js",["330","331"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/RegisterPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/LeftNavBar.js",["332"],"import React, { useContext, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../../css/Navbar.css\";\nimport { RiMenuFoldLine, RiMenuFill } from \"react-icons/ri\";\nimport { ImLinkedin, ImGithub } from \"react-icons/im\";\nimport { Context as TeamContext } from \"../../context/store/TeamStore\";\nimport { Modal } from \"@material-ui/core\";\nimport TeamForm from \"../Forms/TeamForm\";\nimport Home from \"../../assets/Home\";\nimport Tasks from \"../../assets/tasks\";\nimport Project from \"../../assets/project\";\nimport Team from \"../../assets/team.svg\";\nimport Logo from \"../../assets/Logo\";\nconst LeftNavBar = ({ showSidebar, sidebar }) => {\n  // const [teams, setTeams] = useState([]);\n  const [teamState] = useContext(TeamContext);\n  const [open, setOpen] = useState(false);\n\n  //NOTE : Only other option that worked was setting state either in here or in App.js and call it for global state. ReducerContext does not work\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const orderedList = teamState.teams.sort(function (a, b) {\n    return new Date(a.createdAt) - new Date(b.createdAt);\n  });\n\n  const renderedList = orderedList.map((team, i) => {\n    return (\n      <NavLink\n        className=\"left-nav-bar-team-link\"\n        style={{ textDecoration: \"none\", color: \"white\" }}\n        to={`/team/${team.id}/${team.name}`}\n        activeClassName=\"navlink--active\"\n        key={i}\n      >\n        <div>\n          <p style={{ margin: \"0px\", paddingLeft: \"30px\" }}>{team.name}</p>\n        </div>\n      </NavLink>\n    );\n  });\n\n  const modalBody = (\n    <div className=\"modal-container\">\n      <TeamForm clickClose={closeModal} open={open}></TeamForm>\n    </div>\n  );\n  return (\n    <div>\n      <div className=\"left-nav-bar-container\">\n        <div className={sidebar ? \"nav-menu active\" : \"nav-menu collapsed\"}>\n          <div className=\"left-nav-menu-container\">\n            <div className=\"left-nav-menu-top\">\n              <div\n                className=\"logo\"\n                style={{\n                  color: \"white\",\n                  marginLeft: \"10px\",\n                  cursor: \"default\",\n                }}\n              >\n                <Logo style={{}} />\n              </div>\n              <div className=\"collapse-menu-icon-container\">\n                <RiMenuFoldLine\n                  style={{\n                    color: \"white\",\n                    fontSize: \"24px\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={showSidebar}\n                />\n              </div>\n            </div>\n\n            <div\n              className=\"main-menu-items-container\"\n              style={{ marginTop: \"10px\" }}\n            >\n              <NavLink\n                exact\n                to=\"/\"\n                className=\"left-nav-bar-main-link\"\n                activeClassName=\"navlink--active\"\n              >\n                <div className=\"left-nav-bar-link\">\n                  <Home />\n                  <div>\n                    <p className=\"left-nav-bar-link-title\">Home</p>\n                  </div>\n                </div>\n              </NavLink>\n              <NavLink\n                to=\"/tasks\"\n                className=\"left-nav-bar-main-link\"\n                activeClassName=\"navlink--active\"\n              >\n                <div className=\"left-nav-bar-link\">\n                  <Tasks />\n                  <div>\n                    <p\n                      className=\"left-nav-bar-link-title\"\n                      style={{ marginLeft: \"4px\" }}\n                    >\n                      My Tasks\n                    </p>\n                  </div>\n                </div>\n              </NavLink>\n\n              {/* <NavLink\n                to=\"/projects\"\n                className=\"left-nav-bar-main-link\"\n                activeClassName=\"navlink--active\"\n              >\n                <div className=\"left-nav-bar-link\">\n                  <Project />\n                  <div>\n                    <p className=\"left-nav-bar-link-title\">Projects</p>\n                  </div>\n                </div>\n              </NavLink> */}\n            </div>\n            <div className=\"teams-items-container\">\n              <div className=\"teams-items-header\" style={{ display: \"flex\" }}>\n                <img src={Team} alt=\"team-icon\" />\n                <div>\n                  <p className=\"left-nav-bar-link-title\">Teams</p>\n                </div>\n                <p\n                  style={{ marginLeft: \"114px\", cursor: \"pointer\" }}\n                  onClick={openModal}\n                >\n                  +\n                </p>\n              </div>\n              {teamState.teams ? renderedList : <div>Loading...</div>}\n            </div>\n            <div className=\"social-links\">\n              <div>\n                <a href=\"https://github.com/ctran01/Methodize\" target=\"__blank\">\n                  <ImGithub className=\"social-icon\" />\n                </a>\n              </div>\n              <div>\n                <a\n                  href=\"https://www.linkedin.com/in/chris-tran-\"\n                  target=\"__blank\"\n                >\n                  <ImLinkedin className=\"social-icon\" />\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {sidebar ? null : (\n          <div\n            className=\"menu-icon\"\n            style={{\n              paddingTop: \"25px\",\n              paddingLeft: \"20px\",\n              paddingBottom: \"22px\",\n              backgroundColor: \"white\",\n            }}\n          >\n            <RiMenuFill\n              style={{\n                fontSize: \"24px\",\n                cursor: \"pointer\",\n              }}\n              onClick={showSidebar}\n            />\n          </div>\n        )}\n      </div>\n      <Modal open={open} onClose={closeModal}>\n        {modalBody}\n      </Modal>\n    </div>\n  );\n};\n\nexport default LeftNavBar;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LoginPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/apiServer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingPage.js",["333","334","335","336","337","338"],"import React from \"react\";\nimport \"../../css/LandingPage.css\";\nimport logo from \"../../assets/logo3.png\";\nimport picture from \"../../assets/Methodize.jpg\";\nimport { BsCardChecklist } from \"react-icons/bs\";\nimport { AiOutlineTeam } from \"react-icons/ai\";\nimport { MdAssignment } from \"react-icons/md\";\n\nconst LandingPage = () => {\n  return (\n    <div>\n      <div className=\"landing-container\">\n        <div className=\"landing-nav-container\">\n          <div className=\"landing-nav-logo\">\n            <a href=\"/\">\n              <img\n                className=\"logo\"\n                style={{ width: \"180px\" }}\n                src={logo}\n                alt=\"logo\"\n              />\n            </a>\n          </div>\n          <div className=\"landing-nav-sessions\">\n            <a href=\"/login\">\n              <button className=\"landing-nav--button\">Login</button>\n            </a>\n            <a href=\"/register\">\n              <button className=\"landing-nav--button\">Register</button>\n            </a>\n          </div>\n        </div>\n        <div className=\"landing-main\">\n          <div className=\"landing-message\">\n            <h2\n              style={{\n                textAlign: \"center\",\n                fontSize: \"3em\",\n                fontWeight: \"200\",\n              }}\n            >\n              Keeping track of everything from as big as multiple teams to as\n              small as individual tasks has never been easier\n            </h2>\n            <div className=\"landing-message-button--div\">\n              <a href=\"/register\">\n                <button className=\"landing-message--button\">\n                  Try for free!\n                </button>\n              </a>\n            </div>\n          </div>\n          <div className=\"landing-main-picture\">\n            <img src={picture} alt=\"landing\" className=\"landing-picture\" />\n          </div>\n          <div className=\"landing-main-bottom\">\n            <div className=\"landing-main-bottom-icons-container\">\n              <div className=\"icon-container\">\n                <AiOutlineTeam\n                  style={{ fontSize: \"75px\", color: \"rgb(59, 182, 170)\" }}\n                />\n                <p>\n                  Establish Teams with other colleagues and work together to\n                  accomplish tasks.\n                </p>\n              </div>\n              <div className=\"icon-container\">\n                <MdAssignment\n                  style={{ fontSize: \"75px\", color: \"rgb(59, 182, 170)\" }}\n                />\n                <p>\n                  Create multiple projects within a team categorize tasks based\n                  on different types of projects.\n                </p>\n              </div>\n              <div className=\"icon-container\">\n                <BsCardChecklist\n                  style={{ fontSize: \"75px\", color: \"rgb(59, 182, 170)\" }}\n                />\n                <p>\n                  Keep track of tasks via tasklists in individual projects and\n                  check them off when they are completed.\n                </p>\n              </div>\n            </div>\n            <div className=\"guest-login-button\">\n              <a href=\"/login\">\n                <button className=\"landing-message--button\">\n                  Guest Login!\n                </button>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/Onboard.js",["339"],"import React, { useContext, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport apiServer from \"../../config/apiServer\";\nimport { useForm } from \"react-hook-form\";\nimport \"../../css/LoginPage.css\";\n\nconst Onboard = (props) => {\n  const { register, handleSubmit, errors } = useForm();\n  const { setAuth } = useContext(AuthContext);\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const onboard = async ({ teamName }) => {\n    const email = localStorage.getItem(\"email\");\n    if (teamName) {\n      try {\n        const res = await apiServer.put(\"/register/onboard\", {\n          email,\n          teamName,\n        });\n        //sets initial token\n        localStorage.setItem(\"token\", res.data.token);\n        setErrorMessage(\"\");\n        //for Refresh\n        setAuth(res.data.token);\n      } catch (err) {\n        console.log(err.status);\n        setErrorMessage(\"Something went wrong\");\n      }\n    }\n  };\n\n  const onSkip = () => {\n    //sets initial token\n    localStorage.setItem(\"token\", localStorage.getItem(\"onboard\"));\n    //for component to refresh to redirect webpage\n    setAuth(localStorage.getItem(\"onboard\"));\n    localStorage.removeItem(\"onboard\");\n  };\n  return (\n    <div className=\"onboard-page-container\">\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          marginTop: \"200px\",\n        }}\n      >\n        <div className=\"onboard-page-header\">\n          <h1\n            style={{\n              fontWeight: \"500\",\n              marginBottom: \"20px\",\n              marginTop: \"1px\",\n              fontSize: \"24px\",\n            }}\n          >\n            What team will you be working on?\n          </h1>\n        </div>\n        <form className=\"onboard-page--form\" onSubmit={handleSubmit(onboard)}>\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <label htmlFor=\"teamName\">Team Name</label>\n            <input name=\"teamName\" ref={register({ minLength: 2 })}></input>\n            {errors.teamName?.type === \"minLengh\" && (\n              <p style={{ color: \"red\", margin: \"1px\" }}>\n                Team name must be greater than 1 character\n              </p>\n            )}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            {/* <button\n              style={{\n                width: \"150px\",\n                border: \"1px solid #0093ff\",\n                backgroundColor: \"transparent\",\n                borderRadius: \"5px\",\n                color: \"black\",\n                outline: \"none\",\n                cursor: \"pointer\",\n              }}\n              onClick={onSkip}\n            >\n              Skip\n            </button> */}\n            <button\n              style={{\n                width: \"150px\",\n              }}\n              type=\"submit\"\n            >\n              Continue\n            </button>\n          </div>\n          {errorMessage ? (\n            <p style={{ color: \"red\", margin: \"1px\" }}>{errorMessage}</p>\n          ) : null}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Onboard;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Loader.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBar.js",["340","341","342","343","344","345","346","347","348","349","350","351"],"import React, { useContext, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport \"../../css/Navbar.css\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport UserAvatar from \"./UserAvatar\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport ProjectForm from \"../Forms/ProjectForm\";\nimport TaskForm from \"../Forms/AddTaskForm\";\nimport Search from \"../../assets/search\";\nimport messageIcon from \"../../assets/message.png\";\nimport Alert from \"../../assets/alert\";\nimport { Context as UserContext } from \"../../context/store/UserStore\";\n\nconst TopNavBar = ({ name, setTeamProjects, setTasklists, sidebar }) => {\n  const { logout } = useContext(AuthContext);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorEle, setAnchorEle] = useState(null);\n  const [openProject, setOpenProject] = useState(false);\n  const [openTask, setOpenTask] = useState(false);\n  const [userState, userdispatch] = useContext(UserContext);\n\n  const clickOpenTask = () => {\n    setOpenTask(true);\n    handleNewClose();\n  };\n\n  const clickCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const clickOpenProject = () => {\n    setOpenProject(true);\n    handleNewClose();\n  };\n  const clickCloseProject = () => {\n    setOpenProject(false);\n  };\n\n  const handleNewClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleNewClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfClick = (event) => {\n    setAnchorEle(event.currentTarget);\n  };\n  const handleProfClose = () => {\n    setAnchorEle(null);\n  };\n\n  return (\n    // <div\n    //   className={\n    //     sidebar ? \"top-nav-bar-container__short\" : \"top-nav-bar-container\"\n    //   }\n    // >\n    <div className=\"top-nav-bar-container\">\n      <div className=\"top-nav-bar-left\">\n        <h2>{name}</h2>\n      </div>\n      <div className=\"top-nav-bar-middle\"></div>\n      <div className=\"top-nav-bar-right\" style={{}}>\n        {/* <div style={{ display: \"flex\" }}>\n          <input className=\"searchbar\" placeholder={\"Search\"}></input>\n        </div> */}\n        {/* <div>\n          <GrAddCircle onClick={handleNewClick} className=\"top-nav-bar--icon\" />\n          <Menu\n            style={{ marginTop: \"40px\" }}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleNewClose}\n          >\n            <MenuItem onClick={clickOpenTask}>Add Task</MenuItem>\n            <TaskForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseTask}\n              open={openTask}\n              setTasklists={setTasklists}\n            ></TaskForm>\n            <MenuItem onClick={clickOpenProject}>Add Project</MenuItem>\n            <ProjectForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseProject}\n              open={openProject}\n              setTeamProjects={setTeamProjects}\n            />\n          </Menu>\n        </div> */}\n        <div\n          className=\"top-nav-icons\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <div>\n            <Alert />\n          </div>\n          <div>\n            <Search />\n          </div>\n\n          <div>\n            <img className=\"logo\" style={{}} src={messageIcon} alt=\"logo\" />\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div style={{ padding: \"0\" }}>\n            <UserAvatar id={localStorage.getItem(\"userId\")} />\n          </div>\n          <div>{userState.user.name}</div>\n          <div\n            onClick={handleProfClick}\n            style={{ padding: \"0\", cursor: \"pointer\" }}\n          >\n            <i className=\"arrow\"></i>\n          </div>\n        </div>\n\n        <Menu\n          style={{ marginTop: \"40px\" }}\n          anchorEl={anchorEle}\n          keepMounted\n          open={Boolean(anchorEle)}\n          onClose={handleProfClose}\n        >\n          <MenuItem onClick={logout}>Logout</MenuItem>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nexport default TopNavBar;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarHome.js",["352","353","354","355","356","357","358","359","360","361","362","363","364","365","366"],"import React, { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport \"../../css/Navbar.css\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport UserAvatar from \"./UserAvatar\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport Search from \"../../assets/search\";\nimport messageIcon from \"../../assets/message.png\";\nimport Alert from \"../../assets/alert\";\nimport ProjectForm from \"../Forms/ProjectForm\";\nimport TaskForm from \"../Forms/AddTaskForm\";\nimport apiServer from \"../../config/apiServer\";\nimport { Context as UserContext } from \"../../context/store/UserStore\";\n\nconst TopNavBarHome = () => {\n  const { logout } = useContext(AuthContext);\n  const [userState, userdispatch] = useContext(UserContext);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorEle, setAnchorEle] = useState(null);\n  const [openProject, setOpenProject] = useState(false);\n  const [openTask, setOpenTask] = useState(false);\n  const userId = localStorage.getItem(\"userId\");\n\n  // useEffect(()=>{\n  //   (async()=>{\n  //     const user = await apiServer.get(\"/user\")\n  //   })();\n  // },[])\n\n  const clickOpenTask = () => {\n    setOpenTask(true);\n    handleNewClose();\n  };\n\n  const clickCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const clickOpenProject = () => {\n    setOpenProject(true);\n    handleNewClose();\n  };\n  const clickCloseProject = () => {\n    setOpenProject(false);\n  };\n\n  const handleNewClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleNewClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfClick = (event) => {\n    setAnchorEle(event.currentTarget);\n  };\n  const handleProfClose = () => {\n    setAnchorEle(null);\n  };\n  return (\n    <div className=\"top-nav-bar-container\" style={{}}>\n      <div\n        className=\"top-nav-bar-left\"\n        style={{ display: \"flex\", flexDirection: \"column\" }}\n      ></div>\n      <div className=\"top-nav-bar-middle\"></div>\n      <div className=\"top-nav-bar-right\" style={{}}>\n        {/* <div style={{ display: \"flex\" }}>\n          <input className=\"searchbar\" placeholder={\"Search\"}></input>\n        </div> */}\n        {/* <div>\n          <GrAddCircle onClick={handleNewClick} className=\"top-nav-bar--icon\" />\n          <Menu\n            style={{ marginTop: \"40px\" }}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleNewClose}\n          >\n            <MenuItem onClick={clickOpenTask}>Add Task</MenuItem>\n            <TaskForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseTask}\n              open={openTask}\n            ></TaskForm>\n            <MenuItem onClick={clickOpenProject}>Add Project</MenuItem>\n            <ProjectForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseProject}\n              open={openProject}\n            />\n          </Menu>\n        </div> */}\n        <div\n          className=\"top-nav-icons\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <div>\n            <Alert />\n          </div>\n          <div>\n            <Search />\n          </div>\n\n          <div>\n            <img className=\"logo\" style={{}} src={messageIcon} alt=\"logo\" />\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div style={{ padding: \"0\" }}>\n            <UserAvatar id={localStorage.getItem(\"userId\")} />\n          </div>\n          <div>\n            <p style={{ fontWeight: 500 }}>{userState.user.name}</p>\n          </div>\n          <div\n            onClick={handleProfClick}\n            style={{ padding: \"0\", cursor: \"pointer\" }}\n          >\n            <i className=\"arrow\"></i>\n          </div>\n        </div>\n\n        <Menu\n          style={{ marginTop: \"40px\" }}\n          anchorEl={anchorEle}\n          keepMounted\n          open={Boolean(anchorEle)}\n          onClose={handleProfClose}\n        >\n          <MenuItem onClick={logout}>Logout</MenuItem>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nexport default TopNavBarHome;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarTask.js",["367","368","369","370","371","372","373","374","375","376","377","378","379"],"import React, { useContext, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport { Context as UserContext } from \"../../context/store/UserStore\";\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\nimport \"../../css/Navbar.css\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport UserAvatar from \"./UserAvatar\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport ProjectForm from \"../Forms/ProjectForm\";\nimport TaskForm from \"../Forms/AddTaskForm\";\nimport Search from \"../../assets/search\";\nimport messageIcon from \"../../assets/message.png\";\nimport Alert from \"../../assets/alert\";\n\nconst TopNavBarTask = () => {\n  const { logout } = useContext(AuthContext);\n  const [userState, userdispatch] = useContext(UserContext);\n  const { name } = userState.user;\n  const [taskState, taskdispatch] = useContext(TaskContext);\n  const numTask = taskState.tasks.filter((task) => task.completed === true);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorEle, setAnchorEle] = useState(null);\n  const [openProject, setOpenProject] = useState(false);\n  const [openTask, setOpenTask] = useState(false);\n\n  const clickOpenTask = () => {\n    setOpenTask(true);\n    handleNewClose();\n  };\n\n  const clickCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const clickOpenProject = () => {\n    setOpenProject(true);\n    handleNewClose();\n  };\n  const clickCloseProject = () => {\n    setOpenProject(false);\n  };\n\n  const handleNewClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleNewClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfClick = (event) => {\n    setAnchorEle(event.currentTarget);\n  };\n  const handleProfClose = () => {\n    setAnchorEle(null);\n  };\n\n  return (\n    <div className=\"top-nav-bar-container\" style={{}}>\n      <div\n        className=\"top-nav-bar-left\"\n        style={{ display: \"flex\", flexDirection: \"column\" }}\n      >\n        <div style={{ fontSize: \"20px\" }}>{name}'s Tasks</div>\n        <p style={{}}>{numTask.length} completed tasks</p>\n      </div>\n      <div className=\"top-nav-bar-middle\"></div>\n      <div className=\"top-nav-bar-right\" style={{}}>\n        {/* <div style={{ display: \"flex\" }}>\n          <input className=\"searchbar\" placeholder={\"Search\"}></input>\n        </div> */}\n        {/* <div>\n          <GrAddCircle onClick={handleNewClick} className=\"top-nav-bar--icon\" />\n          <Menu\n            style={{ marginTop: \"40px\" }}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleNewClose}\n          >\n            <MenuItem onClick={clickOpenTask}>Add Task</MenuItem>\n            <TaskForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseTask}\n              open={openTask}\n            ></TaskForm>\n            <MenuItem onClick={clickOpenProject}>Add Project</MenuItem>\n            <ProjectForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseProject}\n              open={openProject}\n            />\n            \n          </Menu>\n        </div> */}\n        <div\n          className=\"top-nav-icons\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <div>\n            <Alert />\n          </div>\n          <div>\n            <Search />\n          </div>\n\n          <div>\n            <img className=\"logo\" style={{}} src={messageIcon} alt=\"logo\" />\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div style={{ padding: \"0\" }}>\n            <UserAvatar id={localStorage.getItem(\"userId\")} />\n          </div>\n          <div>{userState.user.name}</div>\n          <div\n            onClick={handleProfClick}\n            style={{ padding: \"0\", cursor: \"pointer\" }}\n          >\n            <i className=\"arrow\"></i>\n          </div>\n        </div>\n\n        <Menu\n          style={{ marginTop: \"40px\" }}\n          anchorEl={anchorEle}\n          keepMounted\n          open={Boolean(anchorEle)}\n          onClose={handleProfClose}\n        >\n          <MenuItem onClick={logout}>Logout</MenuItem>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nexport default TopNavBarTask;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/index.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/NewProjectTile.js",["380","381","382","383"],"import React, { useState } from \"react\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport \"../../css/Project.css\";\r\nimport ProjectForm from \"../Forms/ProjectForm\";\r\nconst NewProjectTile = ({ showSideProjectForm }) => {\r\n  const [open, setOpen] = useState(false);\r\n  // const openModal = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  // const closeModal = () => {\r\n  //   setOpen(false);\r\n  // };\r\n  // const modalBody = (\r\n  //   <div className=\"modal-container\">\r\n  //     <ProjectForm clickClose={closeModal} open={open}></ProjectForm>\r\n  //   </div>\r\n  // );\r\n  return (\r\n    <div className=\"project-tile-container\" onClick={showSideProjectForm}>\r\n      <div className=\"project-tile-box\">\r\n        <div className=\"new-project-tile-icon-container\">\r\n          <FiPlus className=\"new-project-tile-icon\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"project-tile-name\">New Project</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewProjectTile;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectItemHome.js",["384","385"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/Project.css\";\r\nimport { AiOutlineEllipsis } from \"react-icons/ai\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nconst ProjectItemHome = ({ project }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const openModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMenuClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  //import component as body such as forms, details, etc\r\n  // const body = (\r\n  //   <div className=\"modal-container\">\r\n  //     {/* <h2 id=\"modal-title\">Task Detail</h2>\r\n  //     <p id=\"modal-description\">\r\n  //       Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n  //     </p> */}\r\n  //     <TaskDetailsForm task={task} closeModal={closeModal} />\r\n  //   </div>\r\n  // );\r\n\r\n  return (\r\n    <Link\r\n      className=\"project-tile--link\"\r\n      to={`/team/${project.team_id}/project/${project.id}/${project.name}`}\r\n    >\r\n      <div className=\"project-home-item\" onClick={openModal}>\r\n        <div className=\"project-home-item-inner-container\">\r\n          <div className=\"project-home-item-inner-left\">\r\n            <div className=\"project-home-item-icon-container\">\r\n              <span className={`dot-task-${project.id}`}></span>\r\n            </div>\r\n            <div className=\"project-home-item-name-container\">\r\n              <p style={{ fontSize: \"15px\", fontWeight: \"500\", margin: \"0px\" }}>\r\n                {project.name}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"project-home-item-more-menu\"\r\n            style={{ height: \"100%\" }}\r\n            onClick={handleMenuClick}\r\n          >\r\n            <AiOutlineEllipsis style={{ fontSize: \"24px\" }} />\r\n          </div>\r\n          <Menu\r\n            style={{}}\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleMenuClose}\r\n          >\r\n            <MenuItem onClick={handleMenuClose}>Delete</MenuItem>\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ProjectItemHome;\r\n",["386","387"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectTile.js",["388","389"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskDetailsForm.js",["390"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemHome.js",["391","392","393","394","395","396","397"],"import React, { useState, useContext } from \"react\";\nimport moment from \"moment\";\nimport { Modal } from \"@material-ui/core\";\nimport \"../../css/Modal.css\";\nimport TaskDetailsForm from \"./TaskDetailsForm\";\nimport {\n  RiCheckboxBlankCircleLine,\n  RiCheckboxCircleLine,\n} from \"react-icons/ri\";\nimport { AiOutlineEllipsis } from \"react-icons/ai\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\nimport apiServer from \"../../config/apiServer\";\n\n//Task item list for home and task page\n\nconst TaskItemHome = ({ task, showSideTaskDetails, sideTaskDetails }) => {\n  const date = moment(\n    task.due_date.substring(0, 10).replace(\"-\", \"\"),\n    \"YYYYMMDD\"\n  );\n\n  const [taskState, taskDispatch] = useContext(TaskContext);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [open, setOpen] = useState(false);\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const setTaskPopOut = async () => {\n    if (sideTaskDetails === false) {\n      showSideTaskDetails();\n      //---\n      taskDispatch({ type: \"get_selected_task\", payload: null });\n      const res = await apiServer.get(`/task/${task.id}`);\n      await taskDispatch({ type: \"get_selected_task\", payload: res.data });\n      // setInitialLoad(false);\n      console.log(\"if popout\");\n    } else {\n      console.log(\"else popout\");\n      taskDispatch({ type: \"get_selected_task\", payload: null });\n      const res = await apiServer.get(`/task/${task.id}`);\n      await taskDispatch({ type: \"get_selected_task\", payload: res.data });\n      // setInitialLoad(false);\n    }\n  };\n\n  const handleTaskDelete = async (e) => {\n    // console.log(task.id);\n    handleMenuClose();\n    await apiServer.delete(`/task/${task.id}`);\n    const id = localStorage.getItem(\"userId\");\n    const res = await apiServer.get(`/task/user/${id}`);\n    await taskDispatch({ type: \"get_user_tasks\", payload: res.data });\n  };\n  //import component as body such as forms, details, etc\n  const body = (\n    <div className=\"modal-container\">\n      {/* <h2 id=\"modal-title\">Task Detail</h2>\n      <p id=\"modal-description\">\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n      </p> */}\n      <TaskDetailsForm task={task} closeModal={closeModal} />\n    </div>\n  );\n  return (\n    <>\n      <div className=\"task-home-item\">\n        <div className=\"task-home-item-inner-container\">\n          <div className=\"task-home-item-inner-left\" onClick={setTaskPopOut}>\n            <div className=\"task-home-item-icon-container\">\n              {/* {task.completed ? (\n                <RiCheckboxCircleLine\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                />\n              ) : (\n                <RiCheckboxBlankCircleLine style={{ fontSize: \"16px\" }} />\n              )} */}\n              <span className={`dot-task-${task.id}`}></span>\n            </div>\n            <div className=\"task-home-item-name-container\">\n              <p\n                style={{\n                  fontSize: \"15px\",\n                  fontWeight: \"500\",\n                  margin: \"0px\",\n                }}\n              >\n                {task.name}\n              </p>\n              <p style={{ color: \"grey\", margin: \"0\" }}>\n                {date.format(\"MMM D\")}\n              </p>\n            </div>\n          </div>\n          <div\n            className=\"task-home-item-more-menu\"\n            style={{ height: \"100%\" }}\n            onClick={handleMenuClick}\n          >\n            <AiOutlineEllipsis style={{ fontSize: \"24px\" }} />\n          </div>\n          <Menu\n            style={{}}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n          >\n            <MenuItem onClick={handleTaskDelete}>Delete</MenuItem>\n          </Menu>\n        </div>\n      </div>\n      {/* <Modal open={open} onClose={closeModal}>\n        {body}\n      </Modal> */}\n      {/* <TaskDetailsForm task={task} closeModal={closeModal} open={open} /> */}\n    </>\n  );\n};\n\nexport default TaskItemHome;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemTask.js",["398","399","400","401","402"],"import React, { useState, useContext } from \"react\";\r\nimport moment from \"moment\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport \"../../css/Modal.css\";\r\nimport TaskDetailsForm from \"../tasks/TaskDetailsForm\";\r\nimport {\r\n  RiCheckboxBlankCircleLine,\r\n  RiCheckboxCircleLine,\r\n} from \"react-icons/ri\";\r\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\r\nimport apiServer from \"../../config/apiServer\";\r\n\r\n//Task item list for home and task page\r\n\r\nconst TaskItemTask = ({\r\n  task,\r\n  showSideTaskDetails,\r\n  sideTaskDetails,\r\n  setInitialLoad,\r\n}) => {\r\n  const [taskState, taskdispatch] = useContext(TaskContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const date = moment(\r\n    task.due_date.substring(0, 10).replace(\"-\", \"\"),\r\n    \"YYYYMMDD\"\r\n  );\r\n  const openModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const setTaskPopOut = async () => {\r\n    if (sideTaskDetails === false) {\r\n      showSideTaskDetails();\r\n      //---\r\n      taskdispatch({ type: \"get_selected_task\", payload: null });\r\n      const res = await apiServer.get(`/task/${task.id}`);\r\n      await taskdispatch({ type: \"get_selected_task\", payload: res.data });\r\n      setInitialLoad(false);\r\n      console.log(\"if popout\");\r\n    } else {\r\n      console.log(\"else popout\");\r\n      taskdispatch({ type: \"get_selected_task\", payload: null });\r\n      const res = await apiServer.get(`/task/${task.id}`);\r\n      await taskdispatch({ type: \"get_selected_task\", payload: res.data });\r\n      setInitialLoad(false);\r\n    }\r\n  };\r\n\r\n  //import component as body such as forms, details, etc\r\n  const body = (\r\n    <div className=\"modal-container\">\r\n      {/* <h2 id=\"modal-title\">Task Detail</h2>\r\n      <p id=\"modal-description\">\r\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n      </p> */}\r\n      <TaskDetailsForm task={task} closeModal={closeModal} />\r\n    </div>\r\n  );\r\n  return (\r\n    <>\r\n      <li className=\"task-task-item\" onClick={setTaskPopOut}>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          {task.completed ? (\r\n            <RiCheckboxCircleLine\r\n              style={{ color: \"green\", fontSize: \"16px\" }}\r\n            />\r\n          ) : (\r\n            <RiCheckboxBlankCircleLine style={{ fontSize: \"16px\" }} />\r\n          )}\r\n          <p\r\n            style={{\r\n              paddingLeft: \"5px\",\r\n              color: \"gray\",\r\n              WebkitUserSelect: \"none\",\r\n              MozUserSelect: \"none\",\r\n              msUserSelect: \"none\",\r\n            }}\r\n          >\r\n            {task.name}\r\n          </p>\r\n        </div>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <div\r\n            className={`task-project-home-name-container task-project-${task.Project.id}`}\r\n          >\r\n            <p\r\n              style={{\r\n                margin: \"0px\",\r\n                padding: \"5px\",\r\n                fontSize: \"12px\",\r\n                fontWeight: \"500\",\r\n                WebkitUserSelect: \"none\",\r\n                MozUserSelect: \"none\",\r\n                msUserSelect: \"none\",\r\n              }}\r\n            >\r\n              {task.Project.name}\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"73px\",\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                color: \"gray\",\r\n                WebkitUserSelect: \"none\",\r\n                MozUserSelect: \"none\",\r\n                msUserSelect: \"none\",\r\n              }}\r\n            >\r\n              {date.format(\"MMM D YYYY\")}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      {/* <Modal open={open} onClose={closeModal}>\r\n        {body}\r\n      </Modal> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskItemTask;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskForm.js",["403","404","405","406","407","408","409"],"import React, { useState, useContext } from \"react\";\nimport \"../../css/Task.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { Modal } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport apiServer from \"../../config/apiServer\";\nimport { Context as ProjectContext } from \"../../context/store/ProjectStore\";\nimport { Context as TasklistContext } from \"../../context/store/TasklistStore\";\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\n\n//Form to add task from anywhere\nconst TaskForm = ({\n  handleNewClose,\n  clickClose,\n  open,\n  setTasklists,\n  showSideTaskForm,\n}) => {\n  const { register, handleSubmit, errors, clearErrors } = useForm();\n  const [projectError, setProjectError] = useState();\n  const [assigneeError, setAssigneeError] = useState();\n  const [taskName, setTaskName] = useState();\n  const [dueDate, setDueDate] = useState();\n\n  const [projectState, projectdispatch] = useContext(ProjectContext);\n  const [taskState, taskdispatch] = useContext(TaskContext);\n  const [projectUsers, setProjectUsers] = useState([\n    {\n      id: \"0\",\n      name: \"Choose a Project First\",\n    },\n  ]);\n  const [projectTaskLists, setProjectTaskLists] = useState([\n    {\n      id: \"0\",\n      name: \"Choose a Project First\",\n    },\n  ]);\n\n  // const getUserProjects = async () => {\n  //   const userId = localStorage.getItem(\"userId\");\n  //   const res = await apiServer.get(`/project/user/${userId}`);\n  //   setProjects(res.data);\n  //   setLoading(false);\n  // };\n\n  const handleNameChange = (e) => {\n    setTaskName(e.target.value);\n  };\n  const handleDateChange = (e) => {\n    setDueDate(e.target.value);\n  };\n  const getProjectUsers = async (event) => {\n    var projectSelect = document.getElementById(\"project-select\");\n    var assigneeSelect = document.getElementById(\"assignee-select\");\n    var tasklistSelect = document.getElementById(\"tasklist-select\");\n    clearErrors(projectSelect.name);\n    clearErrors(assigneeSelect.name);\n    clearErrors(tasklistSelect.name);\n    const res = await apiServer.get(`/project/${projectSelect.value}/team`);\n    setProjectUsers(res.data.Users);\n    getProjectTasklists();\n  };\n\n  const getProjectTasklists = async (event) => {\n    const select = document.getElementById(\"project-select\");\n    const res = await apiServer.get(`/project/${select.value}/tasklists`);\n    setProjectTaskLists(res.data);\n  };\n\n  // useEffect(() => {\n  //   getUserProjects();\n  // }, []);\n  //Probably need dispatch here to update the task page when task is created.\n  const onSubmit = async ({\n    name,\n    projectId,\n    assigneeId,\n    due_date,\n    tasklistId,\n    completed,\n    description,\n  }) => {\n    await apiServer.post(`/tasklist/${tasklistId}/task`, {\n      name,\n      projectId,\n      assigneeId,\n      due_date,\n      completed,\n      description,\n    });\n\n    // const res = await apiServer.get(\n    //   `/project/user/${localStorage.getItem(\"userId\")}`\n    // );\n\n    const userId = localStorage.getItem(\"userId\");\n    const res = await apiServer.get(`/task/user/${userId}`);\n    await taskdispatch({ type: \"get_user_tasks\", payload: res.data });\n\n    if (setTasklists) {\n      const taskResponse = await apiServer.get(\n        `/project/${projectId}/tasklists`\n      );\n\n      setTasklists(taskResponse.data);\n    }\n\n    showSideTaskForm();\n  };\n\n  const renderedProjects = projectState.projects.map((project, i) => {\n    return (\n      <option key={i} id={project.id} value={project.id}>\n        {project.name}\n      </option>\n    );\n  });\n\n  const renderedUsers = projectUsers.map((user, i) => {\n    return (\n      <option key={i} value={user.id}>\n        {user.name}\n      </option>\n    );\n  });\n\n  const renderedTasklists = projectTaskLists.map((tasklist, i) => {\n    return (\n      <option key={i} value={tasklist.id}>\n        {tasklist.name}\n      </option>\n    );\n  });\n\n  return (\n    <>\n      {/* <Modal open={open} onClose={clickClose}>\n        <div className=\"modal-container\"> */}\n      <form className=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\n        {/* <h2 className=\"form-header\">Add a Task</h2> */}\n        <div className=\"form-top-container\">\n          <div className=\"form-section\">\n            <div className=\"label-container\">\n              <label className=\"form-label\">Task Name</label>\n            </div>\n            <div className=\"input-container\">\n              <input\n                name=\"name\"\n                type=\"text\"\n                placeholder={\"Task Name\"}\n                className=\"form-input\"\n                ref={register({ required: true })}\n                onChange={handleNameChange}\n              ></input>\n              {errors.name?.type === \"required\" && (\n                <p className=\"error-message\">Please enter a task name</p>\n              )}\n            </div>\n\n            <div className=\"label-container\">\n              <label className=\"form-label\">Project</label>\n            </div>\n            <div className=\"input-container\">\n              <select\n                id=\"project-select\"\n                name=\"projectId\"\n                className=\"form-input\"\n                onChange={getProjectUsers}\n                ref={register({ required: true })}\n              >\n                <option value={0}>{\"<---Choose Project--->\"}</option>\n                {renderedProjects}\n              </select>\n              <p className=\"error-message\">{projectError}</p>\n              {errors.projectId?.type === \"required\" && (\n                <p className=\"error-message\">Please choose a project</p>\n              )}\n            </div>\n          </div>\n          <div className=\"form-section\">\n            <div className=\"label-container\">\n              <label className=\"form-label\">Due date</label>\n            </div>\n            <div className=\"input-container\">\n              <input\n                className=\"form-input\"\n                type=\"date\"\n                name=\"due_date\"\n                ref={register({ required: true })}\n                onChange={handleDateChange}\n              ></input>\n              {errors.due_date?.type === \"required\" && (\n                <p className=\"error-message\">Please choose a Due Date</p>\n              )}\n            </div>\n            <div className=\"label-container\">\n              <label className=\"form-label\">Assignee</label>\n            </div>\n            <div className=\"input-container\">\n              <select\n                id=\"assignee-select\"\n                name=\"assigneeId\"\n                className=\"form-input\"\n                ref={register({ required: true })}\n              >\n                {renderedUsers}\n              </select>\n              <p className=\"error-message\">{assigneeError}</p>\n              {errors.assigneeId?.type === \"required\" && (\n                <p className=\"error-message\">Please choose an assignee</p>\n              )}\n            </div>\n          </div>\n          <div className=\"form-section\">\n            <div className=\"label-container\">\n              <label className=\"form-label\">Mark Complete</label>\n            </div>\n            <div className=\"input-container\">\n              <input\n                style={{\n                  margin: \"9px 0px 18px 40px\",\n                  width: \"16px\",\n                  height: \"16px\",\n                }}\n                type=\"checkbox\"\n                name=\"completed\"\n                defaultChecked={false}\n                ref={register}\n              ></input>\n            </div>\n\n            <div className=\"label-container\">\n              <label className=\"form-label\">Tasklist</label>\n            </div>\n            <div className=\"input-container\">\n              <select\n                id=\"tasklist-select\"\n                name=\"tasklistId\"\n                className=\"form-input\"\n                ref={register({\n                  required: true,\n                })}\n              >\n                {/* <option value={0}>Choose a project first</option> */}\n                {renderedTasklists}\n              </select>\n              {/* <p className=\"error-message\">{taskListError}</p> */}\n              {errors.tasklistId?.type === \"required\" && (\n                <p className=\"error-message\">\n                  Please choose a tasklist. You may need to make a tasklist\n                  first before adding a task.\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"form-description-container\">\n          <textarea\n            name=\"description\"\n            type=\"text\"\n            placeholder={\"Task Description\"}\n            className=\"edit-task-description textarea\"\n            ref={register}\n          ></textarea>\n        </div>\n\n        <div className=\"form-button-container\">\n          <button\n            className=\"cancel-button\"\n            onClick={showSideTaskForm}\n            color=\"primary\"\n          >\n            Cancel\n          </button>\n          <button\n            className={\n              taskName && dueDate\n                ? \"submit-button enabled\"\n                : \"submit-button disabled\"\n            }\n            disabled={taskName && dueDate ? false : true}\n            type=\"submit\"\n          >\n            Create Task\n          </button>\n        </div>\n      </form>\n    </>\n    //   </Modal>\n    // </div>\n  );\n};\n\nexport default TaskForm;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskSection.js",["410"],"import React, { useContext, useState } from \"react\";\r\nimport { BiRightArrow } from \"react-icons/bi\";\r\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\r\nimport \"../../css/Task.css\";\r\nimport TaskItemTask from \"./TaskItemTask\";\r\nconst TaskSection = ({ title, tasks }) => {\r\n  const [open, setOpen] = useState(true);\r\n  const [taskState] = useContext(TaskContext);\r\n\r\n  const toggle = () => {\r\n    setOpen(!open);\r\n    let arrow = document.getElementById(`task-collapse-${title}`);\r\n    arrow.classList.toggle(\"open-arrow-collapse\");\r\n    arrow.classList.toggle(\"open-arrow\");\r\n  };\r\n  const taskList = tasks.map((task, i) => {\r\n    return <TaskItemTask task={task} key={i} />;\r\n  });\r\n  return (\r\n    <div className=\"task-section\">\r\n      <div className=\"task-section-header\" onClick={toggle}>\r\n        <div id={`task-collapse-${title}`} className=\"open-arrow\">\r\n          <BiRightArrow />\r\n        </div>\r\n        <h3 className=\"task-section-title\">{title}</h3>\r\n      </div>\r\n      {open && <div className=\"task-section-list\"> {taskList}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskSection;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskListItem.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/NewTeamMemberIcon.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskProjectForm.js",["411","412"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/TeamMemberIcon.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TeamForm.js",["413"],"import React, { useContext } from \"react\";\nimport { Modal } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useForm } from \"react-hook-form\";\nimport apiServer from \"../../config/apiServer\";\nimport { Context as TeamContext } from \"../../context/store/TeamStore\";\nimport \"../../css/Forms.css\";\nconst TeamForm = ({ handleNewClose, clickClose, open }) => {\n  const { register, handleSubmit, errors } = useForm();\n  const [teamState, teamdispatch] = useContext(TeamContext);\n  const userId = localStorage.getItem(\"userId\");\n\n  const onSubmit = async ({ name, description }) => {\n    await apiServer.post(`/team/user/${userId}`, {\n      name,\n      description,\n    });\n\n    const res = await apiServer.get(`/team/user/${userId}`);\n    await teamdispatch({ type: \"update_user_teams\", payload: res.data });\n    clickClose();\n  };\n\n  return (\n    <div>\n      <Modal open={open} onClose={clickClose}>\n        <div className=\"modal-container\">\n          <form className=\"task-form\" onSubmit={handleSubmit(onSubmit)}>\n            <h2 className=\"form-header\">Create a Team</h2>\n            <div className=\"form-top-container\">\n              <div className=\"form-top-left\">\n                <label className=\"form-label\">\n                  Team Name\n                  <input\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder={\"Team Name\"}\n                    className=\"form-input\"\n                    ref={register({ required: true })}\n                  ></input>\n                  {errors.name?.type === \"required\" && (\n                    <p className=\"error-message\">Please enter a team name</p>\n                  )}\n                </label>\n              </div>\n              <div className=\"form-top-middle\"></div>\n              {/* <div\n                className=\"form-top-right\"\n                style={{ alignSelf: \"normal\" }}\n              ></div> */}\n            </div>\n            <div>\n              <textarea\n                name=\"description\"\n                type=\"text\"\n                placeholder={\"Team Description\"}\n                className=\"edit-task-description textarea\"\n                ref={register}\n              ></textarea>\n            </div>\n            <div style={{ display: \"flex\", marginLeft: \"400px\" }}>\n              <Button\n                style={{ color: \"#0093ff\" }}\n                onClick={clickClose}\n                color=\"primary\"\n              >\n                Cancel\n              </Button>\n              <Button\n                style={{ color: \"#0093ff\" }}\n                type=\"submit\"\n                color=\"primary\"\n              >\n                Add\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TeamForm;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TaskListForm.js",["414","415","416","417"],"import React, { useContext, useState } from \"react\";\nimport \"../../css/Task.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { Modal } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport apiServer from \"../../config/apiServer\";\nimport { Context as TasklistContext } from \"../../context/store/TasklistStore\";\nimport { useParams } from \"react-router-dom\";\n\nconst TaskListForm = ({ setTasklists, showSideTasklistForm }) => {\n  const { register, handleSubmit, errors } = useForm();\n  const [tasklistName, setTasklistName] = useState();\n  const { projectId } = useParams();\n  const handleNameChange = (e) => {\n    setTasklistName(e.target.value);\n  };\n\n  const onSubmit = async ({ name }) => {\n    const userId = localStorage.getItem(\"userId\");\n    await apiServer.post(`/project/${projectId}/tasklist`, { name, userId });\n\n    const res = await apiServer.get(`/project/${projectId}/tasklists`);\n    setTasklists(res.data);\n    // tasklistdispatch({ type: \"update_project_tasklists\", payload: res.data });\n    showSideTasklistForm();\n  };\n\n  return (\n    <form\n      className=\"form-container\"\n      style={{}}\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      {/* <h2 className=\"form-header\">Add a Tasklist</h2> */}\n      <div className=\"form-top-container\">\n        <div className=\"form-section\">\n          <div className=\"label-container\">\n            <label className=\"form-label\">Column Name</label>\n          </div>\n          <div className=\"input-container\">\n            <input\n              name=\"name\"\n              type=\"text\"\n              placeholder={\"Column Name\"}\n              className=\"form-input\"\n              ref={register({ required: true })}\n              onChange={handleNameChange}\n            ></input>\n            {errors.name?.type === \"required\" && (\n              <p className=\"error-message\">Please enter a column name</p>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"form-button-container\">\n        <button className=\"cancel-button\" onClick={showSideTasklistForm}>\n          Cancel\n        </button>\n        <button\n          className={\n            tasklistName ? \"submit-button enabled\" : \"submit-button disabled\"\n          }\n          disabled={tasklistName ? false : true}\n          type=\"submit\"\n        >\n          Create Column\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default TaskListForm;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/LoginForm.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/ProjectForm.js",["418","419","420","421"],"import React, { useContext, useState } from \"react\";\nimport { Modal } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useForm } from \"react-hook-form\";\nimport apiServer from \"../../config/apiServer\";\nimport { Context as TeamContext } from \"../../context/store/TeamStore\";\nimport { Context as ProjectContext } from \"../../context/store/ProjectStore\";\nimport \"../../css/Forms.css\";\nconst ProjectForm = ({\n  handleNewClose,\n  clickClose,\n  open,\n  setTeamProjects,\n  showSideProjectForm,\n}) => {\n  const { register, handleSubmit, errors, clearErrors } = useForm();\n  const [projectName, setProjectName] = useState();\n  const [teamState, teamdispatch] = useContext(TeamContext);\n  const [projectState, projectdispatch] = useContext(ProjectContext);\n\n  const userId = localStorage.getItem(\"userId\");\n\n  const handleNameChange = (e) => {\n    setProjectName(e.target.value);\n  };\n  const onSubmit = async ({ name, teamId }) => {\n    await apiServer.post(`/team/${teamId}/project/`, {\n      name,\n      userId,\n    });\n\n    //REFER TO THIS WHEN CHECKING FOR RERENDERING\n    const res = await apiServer.get(`/project/user/${userId}`);\n    await projectdispatch({ type: \"get_user_projects\", payload: res.data });\n    const projectResponse = await apiServer.get(`/team/${teamId}`);\n    // NOTE: One way this could work is if we recreate form for just team page add project form button\n    // Will not work with top nav bar form\n    // setTeamProjects(projectResponse.data.Projects);\n    await teamdispatch({\n      type: `get_team_projects${teamId}`,\n      payload: projectResponse.data,\n    });\n    if (setTeamProjects) {\n      const teamResponse = await apiServer.get(`/team/${teamId}`);\n      setTeamProjects(teamResponse.data.Projects);\n    }\n    // window.location.reload();\n\n    // clickClose();\n    showSideProjectForm();\n  };\n\n  const clearError = () => {\n    var teamSelect = document.getElementById(\"team-select\");\n    clearErrors(teamSelect.name);\n  };\n  const renderedTeams = teamState.teams.map((team, i) => {\n    return (\n      <option key={i} id={team.id} value={team.id}>\n        {team.name}\n      </option>\n    );\n  });\n\n  return (\n    <>\n      {/* <Modal open={open} onClose={clickClose}>\n        <div className=\"modal-container\"> */}\n      <form className=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\n        {/* <h2 className=\"form-header\">Add a Project</h2> */}\n        <div className=\"form-top-container\">\n          <div className=\"form-section\">\n            <div className=\"label-container\">\n              <label className=\"form-label\">Project Name</label>\n            </div>\n            <div className=\"input-container\">\n              <input\n                name=\"name\"\n                type=\"text\"\n                placeholder={\"Project Name\"}\n                className=\"form-input\"\n                // onChange={clearError}\n                onChange={handleNameChange}\n                ref={register({ required: true })}\n              ></input>\n              {errors.name?.type === \"required\" && (\n                <p className=\"error-message\">Please fill out project name</p>\n              )}\n            </div>\n            <div className=\"label-container\">\n              <label className=\"form-label\">Team</label>\n            </div>\n            <div className=\"input-container\">\n              <select\n                id=\"team-select\"\n                name=\"teamId\"\n                className=\"form-input\"\n                ref={register({ required: true })}\n              >\n                {renderedTeams}\n              </select>\n              {errors.teamId?.type === \"required\" && (\n                <p className=\"error-message\">Please choose a team</p>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"form-button-container\">\n          {/* marginLeft: \"400px\" */}\n          <button\n            className=\"cancel-button\"\n            onClick={showSideProjectForm}\n            color=\"primary\"\n          >\n            Cancel\n          </button>\n          <button\n            className={\n              projectName ? \"submit-button enabled\" : \"submit-button disabled\"\n            }\n            disabled={projectName ? false : true}\n            type=\"submit\"\n          >\n            Create Project\n          </button>\n        </div>\n      </form>\n    </>\n    //   </Modal>\n    // </div>\n  );\n};\n\nexport default ProjectForm;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/UserAvatar.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemProject.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddMemberForm.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/NewProject.js",["422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Projects.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/NewTasks.js",["442","443","444","445","446"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTasklist.js",["447","448","449","450","451","452","453","454"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTasklistPopOut.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddProjectPopOut.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTaskPopOutTaskPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/PopOutTaskDetails.js",["455","456"],"import React, { useState, useContext } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { RiCloseLine } from \"react-icons/ri\";\r\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\r\nimport { Context as ProjectContext } from \"../../context/store/ProjectStore\";\r\nimport moment from \"moment\";\r\nimport UserAvatar from \"../NavigationBar/UserAvatar\";\r\nimport apiServer from \"../../config/apiServer\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { BiCheck } from \"react-icons/bi\";\r\n\r\nconst PopOutTaskDetails = ({ showSideTaskDetails, sideTaskDetails }) => {\r\n  const [taskState, taskdispatch] = useContext(TaskContext);\r\n  const { selectedTask: task } = taskState;\r\n  const [projectState, projectdispatch] = useContext(ProjectContext);\r\n  const [teamDescription, setTeamDescription] = useState(task.description);\r\n  const [projectUsers, setProjectUsers] = useState(task.Project.Users);\r\n  const [assigneeUser, setAssigneeUser] = useState(task.User);\r\n  const [taskComments, setTaskComments] = useState(task.Comments);\r\n  const [dueDate, setDueDate] = useState(new Date(task.due_date));\r\n  // const [completed, setCompleted] = useState(task.completed);\r\n  const [commentBox, setCommentBox] = useState(false);\r\n\r\n  var completed = task.completed;\r\n  const date = moment(\r\n    task.due_date.substring(0, 10).replace(\"-\", \"\"),\r\n    \"YYYYMMDD\"\r\n  );\r\n\r\n  console.log(task);\r\n  // console.log(task.due_date, \"task.due_date DB\");\r\n  // console.log(date, \"moment date convert from db\");\r\n  // console.log(dueDate, \"dueDate state new Date convert \");\r\n\r\n  const { register, handleSubmit, clearErrors } = useForm();\r\n\r\n  //This doesn't do anything for initial\r\n  const getProjectUsers = async (event) => {\r\n    var projectSelect = document.getElementById(\"project-select\");\r\n    // var assigneeSelect = document.getElementById(\"assignee-select\");\r\n    clearErrors(projectSelect.name);\r\n    // clearErrors(assigneeSelect.name);\r\n    const res = await apiServer.get(`/project/${projectSelect.value}/team`);\r\n    const userList = res.data.Users.filter((user) => {\r\n      return user.id !== task.User.id;\r\n    });\r\n    console.log(userList, \"userList\");\r\n    setProjectUsers(userList);\r\n    updateProject();\r\n  };\r\n\r\n  const updateProject = async (e) => {\r\n    var projectId = document.getElementById(\"project-select\").value;\r\n    const userId = localStorage.getItem(\"userId\");\r\n    console.log(projectId);\r\n    await apiServer.put(`/task/${task.id}/project/${projectId}`);\r\n    const res = await apiServer.get(`/task/user/${userId}`);\r\n    await taskdispatch({ type: \"get_user_tasks\", payload: res.data });\r\n  };\r\n\r\n  const updateAssignee = async (e) => {\r\n    var assigneeId = document.getElementById(\"assignee-select\").value;\r\n\r\n    await apiServer.put(`/task/${task.id}/assignee/${assigneeId}`);\r\n    const assignee = await apiServer.get(`/task/${task.id}`);\r\n    setAssigneeUser(assignee.data.User);\r\n    //updates tasks\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const res = await apiServer.get(`/task/user/${userId}`);\r\n    await taskdispatch({ type: \"get_user_tasks\", payload: res.data });\r\n  };\r\n\r\n  const updateDueDate = async (date) => {\r\n    setDueDate(date);\r\n    await apiServer.put(`/task/${task.id}/dueDate`, { date });\r\n    console.log(date);\r\n  };\r\n  const updateDescription = async (e) => {\r\n    const description = e.target.value;\r\n    await apiServer.put(`/task/${task.id}/description`, { description });\r\n\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const handleDescriptionUpdate = (e) => {\r\n    setTeamDescription(e.target.value);\r\n  };\r\n\r\n  const handleCommentSubmit = async ({ text }) => {\r\n    const user_id = localStorage.getItem(\"userId\");\r\n    await apiServer.post(`/task/${task.id}/comment`, {\r\n      text,\r\n      user_id,\r\n    });\r\n\r\n    const comments = await apiServer.get(`/task/${task.id}/comment`);\r\n    setTaskComments(comments.data);\r\n    updateScroll();\r\n  };\r\n\r\n  const handleMarkComplete = async () => {\r\n    await updateComplete();\r\n  };\r\n\r\n  const updateComplete = async () => {\r\n    // console.log(completed, \"before\");\r\n    completed = !completed;\r\n    const userId = localStorage.getItem(\"userId\");\r\n    // console.log(completed, \"after\");\r\n\r\n    const updatedTask = await apiServer.put(`/task/${task.id}/complete`, {\r\n      completed,\r\n    });\r\n    await taskdispatch({\r\n      type: \"get_selected_task\",\r\n      payload: updatedTask.data,\r\n    });\r\n\r\n    // console.log(task, \"after update\");\r\n\r\n    const res = await apiServer.get(`/task/user/${userId}`);\r\n    await taskdispatch({ type: \"get_user_tasks\", payload: res.data });\r\n  };\r\n  const expandCommentBox = () => {\r\n    setCommentBox(!commentBox);\r\n  };\r\n\r\n  function updateScroll() {\r\n    var element = document.getElementById(\"scrollable\");\r\n    element.scrollTop = element.scrollHeight;\r\n  }\r\n  const renderedProjects = projectState.projects\r\n    .filter((project) => {\r\n      return project.id !== task.Project.id;\r\n    })\r\n    .map((project, i) => {\r\n      return (\r\n        <option key={i} id={project.id} value={project.id}>\r\n          {project.name}\r\n        </option>\r\n      );\r\n    });\r\n\r\n  const renderedUsers = projectUsers\r\n    .filter((user) => {\r\n      return user.id !== task.User.id;\r\n    })\r\n    .map((user, i) => {\r\n      return (\r\n        <option key={i} value={user.id}>\r\n          {user.name}\r\n        </option>\r\n      );\r\n    });\r\n\r\n  const renderedComments = taskComments.map((comment, i) => {\r\n    const commentDate = moment(\r\n      comment.createdAt.substring(0, 10).replace(\"-\", \"\"),\r\n      \"YYYYMMDD\"\r\n    ).format(\"MMM D\");\r\n\r\n    return (\r\n      <div className=\"comment-container\">\r\n        <div className=\"comment-header\">\r\n          <div\r\n            className=\"user-avatar\"\r\n            style={{\r\n              width: \"25px\",\r\n              height: \"25px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            {(comment.User.name[0] + comment.User.name[1]).toUpperCase()}\r\n          </div>\r\n\r\n          <div>\r\n            <p\r\n              style={{ fontWeight: 500, marginRight: \"10px\", fontSize: \"15px\" }}\r\n            >\r\n              {comment.User.name}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <p style={{ color: \"gray\", fontSize: \"12px\" }}>{commentDate}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"comment-text\">\r\n          <p style={{ fontSize: \"15px\", margin: \"0px\" }}>{comment.text}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={\"task-detail-menu active\"}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flex: \"1 1 auto\",\r\n            flexDirection: \"column\",\r\n            minHeight: \"1px\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <div className=\"task-detail-menu-container\">\r\n            <div className=\"task-detail-menu-top\">\r\n              <div\r\n                className={\r\n                  completed\r\n                    ? \"mark-complete-container__completed\"\r\n                    : \"mark-complete-container__incompleted\"\r\n                }\r\n                onClick={handleMarkComplete}\r\n              >\r\n                <div\r\n                  className={\r\n                    completed\r\n                      ? \"complete-button__completed\"\r\n                      : \"complete-button__incompleted\"\r\n                  }\r\n                >\r\n                  <div\r\n                    className=\"check-mark-container\"\r\n                    style={{ margin: \"0px 5px\" }}\r\n                  >\r\n                    <BiCheck\r\n                      className={\r\n                        completed\r\n                          ? \"check-mark-icon__completed\"\r\n                          : \"check-mark-icon__incompleted\"\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      completed\r\n                        ? \"mark-complete__completed\"\r\n                        : \"mark-complete__incompleted\"\r\n                    }\r\n                  >\r\n                    Mark Complete\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"task-detail-close-icon\">\r\n                <RiCloseLine\r\n                  style={{\r\n                    color: \"black\",\r\n                    fontSize: \"24px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={showSideTaskDetails}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* <div style={{ height: \"80%\" }}> */}\r\n            <div\r\n              id=\"scrollable\"\r\n              style={{\r\n                display: \"flex\",\r\n                flex: \"1 1 auto\",\r\n                flexDirection: \"column\",\r\n                minHeight: \"1px\",\r\n                zIndex: \"100\",\r\n                padding: \"0 24px\",\r\n                overflowY: \"auto\",\r\n                borderBottom: \"1px solid lightgrey\",\r\n                marginBottom: \"5px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <form className=\"task-detail-menu-main-content\">\r\n                  <div className=\"task-detail-title\">\r\n                    <h2>{task.name}</h2>\r\n                  </div>\r\n                  <div className=\"task-details-container\">\r\n                    <div className=\"task-details-subtitles\">\r\n                      <p>Assignee</p>\r\n                      <p>Due Date</p>\r\n                      <p>Project</p>\r\n                      <p>Description</p>\r\n                    </div>\r\n                    <div className=\"task-details-data\">\r\n                      <div\r\n                        className=\"assignee-select-container\"\r\n                        style={{ display: \"flex\" }}\r\n                      >\r\n                        <div\r\n                          className=\"user-avatar\"\r\n                          style={{\r\n                            width: \"25px\",\r\n                            height: \"25px\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                        >\r\n                          {(\r\n                            assigneeUser.name[0] + assigneeUser.name[1]\r\n                          ).toUpperCase()}\r\n                        </div>\r\n                        <select\r\n                          id=\"assignee-select\"\r\n                          name=\"assigneeId\"\r\n                          className=\"form-input\"\r\n                          ref={register({ required: true })}\r\n                          onChange={updateAssignee}\r\n                          style={{ width: \"150px\" }}\r\n                        >\r\n                          <option\r\n                            value={task.User.id}\r\n                            id={task.User.id}\r\n                            selected\r\n                          >\r\n                            {task.User.name}\r\n                          </option>\r\n                          {renderedUsers}\r\n                        </select>\r\n                      </div>\r\n                      <div\r\n                        className=\"dueDate-container\"\r\n                        style={{ marginTop: \"20px\" }}\r\n                      >\r\n                        <DatePicker\r\n                          selected={dueDate}\r\n                          onChange={(date) => updateDueDate(date)}\r\n                          // customInput={<DateButton />}\r\n                        />\r\n                        {/* <p style={{ marginTop: \"20px\" }}> {date.format(\"MMM D\")}</p> */}\r\n                      </div>\r\n\r\n                      <div\r\n                        className=\"project-select-container\"\r\n                        style={{\r\n                          height: \"25px\",\r\n                          borderRadius: \"20px\",\r\n\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginTop: \"15px\",\r\n                        }}\r\n                      >\r\n                        <select\r\n                          id=\"project-select\"\r\n                          name=\"projectId\"\r\n                          className={`form-input `}\r\n                          onChange={getProjectUsers}\r\n                          defaultValue={task.Project.name}\r\n                          ref={register({ required: true })}\r\n                          onBlur={updateProject}\r\n                          style={{\r\n                            height: \"25px\",\r\n                            borderRadius: \"20px\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            background: \"transparent\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <option\r\n                            value={task.Project.id}\r\n                            id={task.Project.id}\r\n                            selected\r\n                          >\r\n                            {task.Project.name}\r\n                          </option>\r\n                          {renderedProjects}\r\n                        </select>\r\n                        {/* <p style={{ margin: 0 }}> {task.Project.name}</p> */}\r\n                      </div>\r\n\r\n                      {/* <p style={{ marginTop: \"17px\" }}> {task.description}</p> */}\r\n                      <div className=\"task-detail-description-container\">\r\n                        <textarea\r\n                          className=\"task-detail-edit-description\"\r\n                          placeholder=\"Click to add team description...\"\r\n                          value={teamDescription}\r\n                          onChange={handleDescriptionUpdate}\r\n                          onBlur={updateDescription}\r\n                        ></textarea>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <div className=\"task-detail-user-comments-container\">\r\n                  {taskComments.length !== 0 ? (\r\n                    renderedComments\r\n                  ) : (\r\n                    <div>No comments yet.. </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              // className={\r\n              //   commentBox\r\n              //     ? \"task-detail-comment-container active\"\r\n              //     : \"task-detail-comment-container\"\r\n              // }\r\n              className=\"task-detail-comment-container\"\r\n            >\r\n              <div\r\n                // className={\r\n                //   commentBox\r\n                //     ? \"task-detail-user-comment active\"\r\n                //     : \"task-detail-user-comment\"\r\n                // }\r\n                className=\"task-detail-user-comment\"\r\n              >\r\n                <div\r\n                  className=\"task-detail-comment-avatar\"\r\n                  style={{ width: \"25px\", height: \"25px\", fontSize: \"10px\" }}\r\n                >\r\n                  <UserAvatar id={localStorage.getItem(\"userId\")} />\r\n                </div>\r\n                <div className=\"task-detail-comment-box\">\r\n                  <form\r\n                    className=\"task-detail-comment-form\"\r\n                    onSubmit={handleSubmit(handleCommentSubmit)}\r\n                    onFocus={expandCommentBox}\r\n                    onBlur={expandCommentBox}\r\n                  >\r\n                    <div style={{ width: \"100%\", height: \"100%\" }}>\r\n                      <textarea\r\n                        name=\"text\"\r\n                        className=\"comment-textarea\"\r\n                        placeholder=\"Ask a question or post an update...\"\r\n                        ref={register({ required: true })}\r\n                      ></textarea>\r\n                    </div>\r\n\r\n                    {/* {commentBox ? ( */}\r\n                    <div style={{ alignSelf: \"flex-end\", marginTop: \"10px\" }}>\r\n                      <button\r\n                        className=\"comment-button\"\r\n                        style={{ height: \"30px\", width: \"80px\" }}\r\n                        type=\"submit\"\r\n                      >\r\n                        Comment\r\n                      </button>\r\n                    </div>\r\n                    {/* ) : null} */}\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PopOutTaskDetails;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTaskPopOutProjectPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Home.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Logo.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/project.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/tasks.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Add.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/search.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/alert.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTaskItem.js",["457","458","459","460","461","462","463","464"],"import React, { useState, useContext } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport TaskDetailsForm from \"../tasks/TaskDetailsForm\";\r\nimport { Modal, responsiveFontSizes } from \"@material-ui/core\";\r\nimport Pin from \"../../assets/pin\";\r\nimport Comments from \"../../assets/comments\";\r\nimport UserAvatar from \"../NavigationBar/UserAvatar\";\r\nimport moment from \"moment\";\r\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\r\nimport apiServer from \"../../config/apiServer\";\r\n\r\nconst ColumnTaskItem = ({\r\n  task,\r\n  index,\r\n  showSideTaskDetails,\r\n  sideTaskDetails,\r\n}) => {\r\n  const [taskState, taskdispatch] = useContext(TaskContext);\r\n\r\n  const date = moment(\r\n    task.due_date.substring(0, 10).replace(\"-\", \"\"),\r\n    \"YYYYMMDD\"\r\n  );\r\n\r\n  const setTaskPopOut = async () => {\r\n    if (sideTaskDetails === false) {\r\n      showSideTaskDetails();\r\n      //---\r\n      taskdispatch({ type: \"get_selected_task\", payload: null });\r\n      const res = await apiServer.get(`/task/${task.id}`);\r\n      await taskdispatch({ type: \"get_selected_task\", payload: res.data });\r\n    } else {\r\n      taskdispatch({ type: \"get_selected_task\", payload: null });\r\n      const res = await apiServer.get(`/task/${task.id}`);\r\n      await taskdispatch({ type: \"get_selected_task\", payload: res.data });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div key={task.id}>\r\n      <Draggable\r\n        draggableId={`${task.id.toString()}`}\r\n        type=\"task\"\r\n        key={`${task.id}`}\r\n        index={index}\r\n      >\r\n        {(provided, snapshot) => (\r\n          <div\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            className=\"task-project-item\"\r\n            // onClick={openTaskDetailFormModal}\r\n            onClick={setTaskPopOut}\r\n          >\r\n            <div className=\"task-project-container-left\">\r\n              <div className=\"task-project-name\">{task.name}</div>\r\n              <div className=\"task-project-icons\">\r\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <Pin />{\" \"}\r\n                  <p style={{ color: \"darkgray\", marginLeft: \"5px\" }}>8</p>\r\n                </div>\r\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <Comments />{\" \"}\r\n                  <p style={{ color: \"darkgray\", marginLeft: \"5px\" }}>9</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"task-project-container-right\">\r\n              <div className=\"task-project-assignee-avatar\">\r\n                <div className=\"user-avatar\">\r\n                  {(task.User.name[0] + task.User.name[1]).toUpperCase()}\r\n                </div>\r\n              </div>\r\n              <div className=\"task-project-due_date\">\r\n                <p style={{ color: \"darkgray\" }}>{date.format(\"MMM D\")}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColumnTaskItem;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/pin.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/comments.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/PopOutTaskDetailsHome.js",["465","466"],{"ruleId":"467","replacedBy":"468"},{"ruleId":"469","replacedBy":"470"},{"ruleId":"471","severity":1,"message":"472","line":4,"column":8,"nodeType":"473","messageId":"474","endLine":4,"endColumn":17},{"ruleId":"471","severity":1,"message":"475","line":7,"column":8,"nodeType":"473","messageId":"474","endLine":7,"endColumn":22},{"ruleId":"471","severity":1,"message":"476","line":23,"column":10,"nodeType":"473","messageId":"474","endLine":23,"endColumn":19},{"ruleId":"471","severity":1,"message":"477","line":24,"column":10,"nodeType":"473","messageId":"474","endLine":24,"endColumn":19},{"ruleId":"471","severity":1,"message":"478","line":25,"column":10,"nodeType":"473","messageId":"474","endLine":25,"endColumn":22},{"ruleId":"471","severity":1,"message":"479","line":26,"column":10,"nodeType":"473","messageId":"474","endLine":26,"endColumn":19},{"ruleId":"471","severity":1,"message":"480","line":15,"column":10,"nodeType":"473","messageId":"474","endLine":15,"endColumn":14},{"ruleId":"471","severity":1,"message":"481","line":3,"column":10,"nodeType":"473","messageId":"474","endLine":3,"endColumn":15},{"ruleId":"471","severity":1,"message":"482","line":3,"column":17,"nodeType":"473","messageId":"474","endLine":3,"endColumn":36},{"ruleId":"471","severity":1,"message":"483","line":8,"column":38,"nodeType":"473","messageId":"474","endLine":8,"endColumn":47},{"ruleId":"471","severity":1,"message":"484","line":20,"column":22,"nodeType":"473","messageId":"474","endLine":20,"endColumn":33},{"ruleId":"471","severity":1,"message":"485","line":20,"column":35,"nodeType":"473","messageId":"474","endLine":20,"endColumn":41},{"ruleId":"471","severity":1,"message":"486","line":23,"column":10,"nodeType":"473","messageId":"474","endLine":23,"endColumn":15},{"ruleId":"471","severity":1,"message":"487","line":53,"column":9,"nodeType":"473","messageId":"474","endLine":53,"endColumn":30},{"ruleId":"471","severity":1,"message":"488","line":92,"column":13,"nodeType":"473","messageId":"474","endLine":92,"endColumn":34},{"ruleId":"471","severity":1,"message":"489","line":94,"column":13,"nodeType":"473","messageId":"474","endLine":94,"endColumn":29},{"ruleId":"471","severity":1,"message":"490","line":96,"column":13,"nodeType":"473","messageId":"474","endLine":96,"endColumn":33},{"ruleId":"471","severity":1,"message":"491","line":97,"column":13,"nodeType":"473","messageId":"474","endLine":97,"endColumn":28},{"ruleId":"471","severity":1,"message":"492","line":178,"column":11,"nodeType":"473","messageId":"474","endLine":178,"endColumn":25},{"ruleId":"471","severity":1,"message":"493","line":180,"column":11,"nodeType":"473","messageId":"474","endLine":180,"endColumn":29},{"ruleId":"471","severity":1,"message":"489","line":181,"column":11,"nodeType":"473","messageId":"474","endLine":181,"endColumn":27},{"ruleId":"471","severity":1,"message":"494","line":182,"column":11,"nodeType":"473","messageId":"474","endLine":182,"endColumn":24},{"ruleId":"471","severity":1,"message":"495","line":184,"column":11,"nodeType":"473","messageId":"474","endLine":184,"endColumn":26},{"ruleId":"471","severity":1,"message":"496","line":194,"column":11,"nodeType":"473","messageId":"474","endLine":194,"endColumn":27},{"ruleId":"471","severity":1,"message":"497","line":216,"column":9,"nodeType":"473","messageId":"474","endLine":216,"endColumn":21},{"ruleId":"471","severity":1,"message":"498","line":249,"column":9,"nodeType":"473","messageId":"474","endLine":249,"endColumn":26},{"ruleId":"471","severity":1,"message":"499","line":10,"column":8,"nodeType":"473","messageId":"474","endLine":10,"endColumn":17},{"ruleId":"471","severity":1,"message":"500","line":12,"column":10,"nodeType":"473","messageId":"474","endLine":12,"endColumn":29},{"ruleId":"471","severity":1,"message":"501","line":11,"column":8,"nodeType":"473","messageId":"474","endLine":11,"endColumn":15},{"ruleId":"471","severity":1,"message":"502","line":3,"column":8,"nodeType":"473","messageId":"474","endLine":3,"endColumn":12},{"ruleId":"471","severity":1,"message":"503","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":10},{"ruleId":"471","severity":1,"message":"504","line":7,"column":10,"nodeType":"473","messageId":"474","endLine":7,"endColumn":25},{"ruleId":"471","severity":1,"message":"505","line":8,"column":10,"nodeType":"473","messageId":"474","endLine":8,"endColumn":23},{"ruleId":"471","severity":1,"message":"506","line":9,"column":10,"nodeType":"473","messageId":"474","endLine":9,"endColumn":22},{"ruleId":"471","severity":1,"message":"507","line":10,"column":10,"nodeType":"473","messageId":"474","endLine":10,"endColumn":16},{"ruleId":"471","severity":1,"message":"508","line":32,"column":9,"nodeType":"473","messageId":"474","endLine":32,"endColumn":15},{"ruleId":"471","severity":1,"message":"509","line":4,"column":10,"nodeType":"473","messageId":"474","endLine":4,"endColumn":21},{"ruleId":"471","severity":1,"message":"510","line":7,"column":8,"nodeType":"473","messageId":"474","endLine":7,"endColumn":19},{"ruleId":"471","severity":1,"message":"511","line":8,"column":8,"nodeType":"473","messageId":"474","endLine":8,"endColumn":16},{"ruleId":"471","severity":1,"message":"512","line":17,"column":10,"nodeType":"473","messageId":"474","endLine":17,"endColumn":18},{"ruleId":"471","severity":1,"message":"513","line":19,"column":10,"nodeType":"473","messageId":"474","endLine":19,"endColumn":21},{"ruleId":"471","severity":1,"message":"514","line":20,"column":10,"nodeType":"473","messageId":"474","endLine":20,"endColumn":18},{"ruleId":"471","severity":1,"message":"515","line":21,"column":21,"nodeType":"473","messageId":"474","endLine":21,"endColumn":33},{"ruleId":"471","severity":1,"message":"516","line":23,"column":9,"nodeType":"473","messageId":"474","endLine":23,"endColumn":22},{"ruleId":"471","severity":1,"message":"517","line":28,"column":9,"nodeType":"473","messageId":"474","endLine":28,"endColumn":23},{"ruleId":"471","severity":1,"message":"518","line":32,"column":9,"nodeType":"473","messageId":"474","endLine":32,"endColumn":25},{"ruleId":"471","severity":1,"message":"519","line":36,"column":9,"nodeType":"473","messageId":"474","endLine":36,"endColumn":26},{"ruleId":"471","severity":1,"message":"520","line":40,"column":9,"nodeType":"473","messageId":"474","endLine":40,"endColumn":23},{"ruleId":"471","severity":1,"message":"521","line":1,"column":29,"nodeType":"473","messageId":"474","endLine":1,"endColumn":38},{"ruleId":"471","severity":1,"message":"509","line":4,"column":10,"nodeType":"473","messageId":"474","endLine":4,"endColumn":21},{"ruleId":"471","severity":1,"message":"510","line":10,"column":8,"nodeType":"473","messageId":"474","endLine":10,"endColumn":19},{"ruleId":"471","severity":1,"message":"511","line":11,"column":8,"nodeType":"473","messageId":"474","endLine":11,"endColumn":16},{"ruleId":"471","severity":1,"message":"522","line":12,"column":8,"nodeType":"473","messageId":"474","endLine":12,"endColumn":17},{"ruleId":"471","severity":1,"message":"515","line":17,"column":21,"nodeType":"473","messageId":"474","endLine":17,"endColumn":33},{"ruleId":"471","severity":1,"message":"512","line":19,"column":10,"nodeType":"473","messageId":"474","endLine":19,"endColumn":18},{"ruleId":"471","severity":1,"message":"513","line":21,"column":10,"nodeType":"473","messageId":"474","endLine":21,"endColumn":21},{"ruleId":"471","severity":1,"message":"514","line":22,"column":10,"nodeType":"473","messageId":"474","endLine":22,"endColumn":18},{"ruleId":"471","severity":1,"message":"523","line":23,"column":9,"nodeType":"473","messageId":"474","endLine":23,"endColumn":15},{"ruleId":"471","severity":1,"message":"516","line":31,"column":9,"nodeType":"473","messageId":"474","endLine":31,"endColumn":22},{"ruleId":"471","severity":1,"message":"517","line":36,"column":9,"nodeType":"473","messageId":"474","endLine":36,"endColumn":23},{"ruleId":"471","severity":1,"message":"518","line":40,"column":9,"nodeType":"473","messageId":"474","endLine":40,"endColumn":25},{"ruleId":"471","severity":1,"message":"519","line":44,"column":9,"nodeType":"473","messageId":"474","endLine":44,"endColumn":26},{"ruleId":"471","severity":1,"message":"520","line":48,"column":9,"nodeType":"473","messageId":"474","endLine":48,"endColumn":23},{"ruleId":"471","severity":1,"message":"509","line":6,"column":10,"nodeType":"473","messageId":"474","endLine":6,"endColumn":21},{"ruleId":"471","severity":1,"message":"510","line":9,"column":8,"nodeType":"473","messageId":"474","endLine":9,"endColumn":19},{"ruleId":"471","severity":1,"message":"511","line":10,"column":8,"nodeType":"473","messageId":"474","endLine":10,"endColumn":16},{"ruleId":"471","severity":1,"message":"515","line":17,"column":21,"nodeType":"473","messageId":"474","endLine":17,"endColumn":33},{"ruleId":"471","severity":1,"message":"524","line":19,"column":21,"nodeType":"473","messageId":"474","endLine":19,"endColumn":33},{"ruleId":"471","severity":1,"message":"512","line":22,"column":10,"nodeType":"473","messageId":"474","endLine":22,"endColumn":18},{"ruleId":"471","severity":1,"message":"513","line":24,"column":10,"nodeType":"473","messageId":"474","endLine":24,"endColumn":21},{"ruleId":"471","severity":1,"message":"514","line":25,"column":10,"nodeType":"473","messageId":"474","endLine":25,"endColumn":18},{"ruleId":"471","severity":1,"message":"516","line":27,"column":9,"nodeType":"473","messageId":"474","endLine":27,"endColumn":22},{"ruleId":"471","severity":1,"message":"517","line":32,"column":9,"nodeType":"473","messageId":"474","endLine":32,"endColumn":23},{"ruleId":"471","severity":1,"message":"518","line":36,"column":9,"nodeType":"473","messageId":"474","endLine":36,"endColumn":25},{"ruleId":"471","severity":1,"message":"519","line":40,"column":9,"nodeType":"473","messageId":"474","endLine":40,"endColumn":26},{"ruleId":"471","severity":1,"message":"520","line":44,"column":9,"nodeType":"473","messageId":"474","endLine":44,"endColumn":23},{"ruleId":"471","severity":1,"message":"481","line":2,"column":10,"nodeType":"473","messageId":"474","endLine":2,"endColumn":15},{"ruleId":"471","severity":1,"message":"510","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":19},{"ruleId":"471","severity":1,"message":"525","line":7,"column":10,"nodeType":"473","messageId":"474","endLine":7,"endColumn":14},{"ruleId":"471","severity":1,"message":"526","line":7,"column":16,"nodeType":"473","messageId":"474","endLine":7,"endColumn":23},{"ruleId":"471","severity":1,"message":"525","line":8,"column":10,"nodeType":"473","messageId":"474","endLine":8,"endColumn":14},{"ruleId":"471","severity":1,"message":"527","line":14,"column":9,"nodeType":"473","messageId":"474","endLine":14,"endColumn":19},{"ruleId":"467","replacedBy":"528"},{"ruleId":"469","replacedBy":"529"},{"ruleId":"471","severity":1,"message":"530","line":11,"column":9,"nodeType":"473","messageId":"474","endLine":11,"endColumn":16},{"ruleId":"531","severity":1,"message":"532","line":23,"column":6,"nodeType":"533","endLine":23,"endColumn":8,"suggestions":"534"},{"ruleId":"471","severity":1,"message":"476","line":18,"column":10,"nodeType":"473","messageId":"474","endLine":18,"endColumn":19},{"ruleId":"471","severity":1,"message":"481","line":3,"column":10,"nodeType":"473","messageId":"474","endLine":3,"endColumn":15},{"ruleId":"471","severity":1,"message":"535","line":7,"column":3,"nodeType":"473","messageId":"474","endLine":7,"endColumn":28},{"ruleId":"471","severity":1,"message":"536","line":8,"column":3,"nodeType":"473","messageId":"474","endLine":8,"endColumn":23},{"ruleId":"471","severity":1,"message":"476","line":23,"column":10,"nodeType":"473","messageId":"474","endLine":23,"endColumn":19},{"ruleId":"471","severity":1,"message":"525","line":25,"column":10,"nodeType":"473","messageId":"474","endLine":25,"endColumn":14},{"ruleId":"471","severity":1,"message":"537","line":26,"column":9,"nodeType":"473","messageId":"474","endLine":26,"endColumn":18},{"ruleId":"471","severity":1,"message":"538","line":68,"column":9,"nodeType":"473","messageId":"474","endLine":68,"endColumn":13},{"ruleId":"471","severity":1,"message":"481","line":3,"column":10,"nodeType":"473","messageId":"474","endLine":3,"endColumn":15},{"ruleId":"471","severity":1,"message":"476","line":21,"column":10,"nodeType":"473","messageId":"474","endLine":21,"endColumn":19},{"ruleId":"471","severity":1,"message":"525","line":22,"column":10,"nodeType":"473","messageId":"474","endLine":22,"endColumn":14},{"ruleId":"471","severity":1,"message":"537","line":28,"column":9,"nodeType":"473","messageId":"474","endLine":28,"endColumn":18},{"ruleId":"471","severity":1,"message":"538","line":55,"column":9,"nodeType":"473","messageId":"474","endLine":55,"endColumn":13},{"ruleId":"471","severity":1,"message":"507","line":3,"column":8,"nodeType":"473","messageId":"474","endLine":3,"endColumn":14},{"ruleId":"471","severity":1,"message":"481","line":4,"column":10,"nodeType":"473","messageId":"474","endLine":4,"endColumn":15},{"ruleId":"471","severity":1,"message":"539","line":8,"column":21,"nodeType":"473","messageId":"474","endLine":8,"endColumn":36},{"ruleId":"471","severity":1,"message":"540","line":20,"column":24,"nodeType":"473","messageId":"474","endLine":20,"endColumn":39},{"ruleId":"471","severity":1,"message":"541","line":21,"column":25,"nodeType":"473","messageId":"474","endLine":21,"endColumn":41},{"ruleId":"471","severity":1,"message":"542","line":25,"column":24,"nodeType":"473","messageId":"474","endLine":25,"endColumn":39},{"ruleId":"471","severity":1,"message":"476","line":26,"column":10,"nodeType":"473","messageId":"474","endLine":26,"endColumn":19},{"ruleId":"471","severity":1,"message":"476","line":8,"column":10,"nodeType":"473","messageId":"474","endLine":8,"endColumn":19},{"ruleId":"471","severity":1,"message":"481","line":4,"column":10,"nodeType":"473","messageId":"474","endLine":4,"endColumn":15},{"ruleId":"471","severity":1,"message":"543","line":25,"column":25,"nodeType":"473","messageId":"474","endLine":25,"endColumn":41},{"ruleId":"471","severity":1,"message":"479","line":10,"column":10,"nodeType":"473","messageId":"474","endLine":10,"endColumn":19},{"ruleId":"471","severity":1,"message":"544","line":1,"column":17,"nodeType":"473","messageId":"474","endLine":1,"endColumn":27},{"ruleId":"471","severity":1,"message":"507","line":3,"column":8,"nodeType":"473","messageId":"474","endLine":3,"endColumn":14},{"ruleId":"471","severity":1,"message":"481","line":4,"column":10,"nodeType":"473","messageId":"474","endLine":4,"endColumn":15},{"ruleId":"471","severity":1,"message":"539","line":7,"column":21,"nodeType":"473","messageId":"474","endLine":7,"endColumn":36},{"ruleId":"471","severity":1,"message":"481","line":2,"column":10,"nodeType":"473","messageId":"474","endLine":2,"endColumn":15},{"ruleId":"471","severity":1,"message":"507","line":3,"column":8,"nodeType":"473","messageId":"474","endLine":3,"endColumn":14},{"ruleId":"471","severity":1,"message":"478","line":19,"column":10,"nodeType":"473","messageId":"474","endLine":19,"endColumn":22},{"ruleId":"471","severity":1,"message":"545","line":53,"column":9,"nodeType":"473","messageId":"474","endLine":53,"endColumn":19},{"ruleId":"471","severity":1,"message":"544","line":1,"column":38,"nodeType":"473","messageId":"474","endLine":1,"endColumn":48},{"ruleId":"471","severity":1,"message":"482","line":3,"column":17,"nodeType":"473","messageId":"474","endLine":3,"endColumn":36},{"ruleId":"471","severity":1,"message":"546","line":7,"column":8,"nodeType":"473","messageId":"474","endLine":7,"endColumn":20},{"ruleId":"471","severity":1,"message":"484","line":17,"column":22,"nodeType":"473","messageId":"474","endLine":17,"endColumn":33},{"ruleId":"471","severity":1,"message":"485","line":17,"column":35,"nodeType":"473","messageId":"474","endLine":17,"endColumn":41},{"ruleId":"471","severity":1,"message":"486","line":19,"column":10,"nodeType":"473","messageId":"474","endLine":19,"endColumn":15},{"ruleId":"471","severity":1,"message":"547","line":22,"column":10,"nodeType":"473","messageId":"474","endLine":22,"endColumn":19},{"ruleId":"471","severity":1,"message":"548","line":22,"column":21,"nodeType":"473","messageId":"474","endLine":22,"endColumn":33},{"ruleId":"471","severity":1,"message":"549","line":25,"column":10,"nodeType":"473","messageId":"474","endLine":25,"endColumn":23},{"ruleId":"471","severity":1,"message":"488","line":78,"column":13,"nodeType":"473","messageId":"474","endLine":78,"endColumn":34},{"ruleId":"471","severity":1,"message":"489","line":80,"column":13,"nodeType":"473","messageId":"474","endLine":80,"endColumn":29},{"ruleId":"471","severity":1,"message":"490","line":82,"column":13,"nodeType":"473","messageId":"474","endLine":82,"endColumn":33},{"ruleId":"471","severity":1,"message":"491","line":83,"column":13,"nodeType":"473","messageId":"474","endLine":83,"endColumn":28},{"ruleId":"471","severity":1,"message":"492","line":164,"column":11,"nodeType":"473","messageId":"474","endLine":164,"endColumn":25},{"ruleId":"471","severity":1,"message":"493","line":166,"column":11,"nodeType":"473","messageId":"474","endLine":166,"endColumn":29},{"ruleId":"471","severity":1,"message":"489","line":167,"column":11,"nodeType":"473","messageId":"474","endLine":167,"endColumn":27},{"ruleId":"471","severity":1,"message":"494","line":168,"column":11,"nodeType":"473","messageId":"474","endLine":168,"endColumn":24},{"ruleId":"471","severity":1,"message":"495","line":170,"column":11,"nodeType":"473","messageId":"474","endLine":170,"endColumn":26},{"ruleId":"471","severity":1,"message":"496","line":180,"column":11,"nodeType":"473","messageId":"474","endLine":180,"endColumn":27},{"ruleId":"471","severity":1,"message":"497","line":202,"column":9,"nodeType":"473","messageId":"474","endLine":202,"endColumn":21},{"ruleId":"471","severity":1,"message":"550","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":19},{"ruleId":"471","severity":1,"message":"551","line":13,"column":10,"nodeType":"473","messageId":"474","endLine":13,"endColumn":17},{"ruleId":"471","severity":1,"message":"525","line":15,"column":10,"nodeType":"473","messageId":"474","endLine":15,"endColumn":14},{"ruleId":"471","severity":1,"message":"537","line":52,"column":9,"nodeType":"473","messageId":"474","endLine":52,"endColumn":18},{"ruleId":"471","severity":1,"message":"527","line":56,"column":9,"nodeType":"473","messageId":"474","endLine":56,"endColumn":19},{"ruleId":"471","severity":1,"message":"552","line":2,"column":10,"nodeType":"473","messageId":"474","endLine":2,"endColumn":25},{"ruleId":"471","severity":1,"message":"481","line":3,"column":10,"nodeType":"473","messageId":"474","endLine":3,"endColumn":15},{"ruleId":"471","severity":1,"message":"482","line":3,"column":17,"nodeType":"473","messageId":"474","endLine":3,"endColumn":36},{"ruleId":"471","severity":1,"message":"553","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":26},{"ruleId":"471","severity":1,"message":"554","line":21,"column":10,"nodeType":"473","messageId":"474","endLine":21,"endColumn":29},{"ruleId":"471","severity":1,"message":"555","line":26,"column":10,"nodeType":"473","messageId":"474","endLine":26,"endColumn":23},{"ruleId":"471","severity":1,"message":"556","line":28,"column":9,"nodeType":"473","messageId":"474","endLine":28,"endColumn":33},{"ruleId":"471","severity":1,"message":"557","line":32,"column":9,"nodeType":"473","messageId":"474","endLine":32,"endColumn":34},{"ruleId":"471","severity":1,"message":"542","line":16,"column":24,"nodeType":"473","messageId":"474","endLine":16,"endColumn":39},{"ruleId":"471","severity":1,"message":"558","line":26,"column":9,"nodeType":"473","messageId":"474","endLine":26,"endColumn":13},{"ruleId":"471","severity":1,"message":"559","line":1,"column":17,"nodeType":"473","messageId":"474","endLine":1,"endColumn":25},{"ruleId":"471","severity":1,"message":"552","line":2,"column":10,"nodeType":"473","messageId":"474","endLine":2,"endColumn":25},{"ruleId":"471","severity":1,"message":"560","line":2,"column":27,"nodeType":"473","messageId":"474","endLine":2,"endColumn":36},{"ruleId":"471","severity":1,"message":"561","line":3,"column":8,"nodeType":"473","messageId":"474","endLine":3,"endColumn":23},{"ruleId":"471","severity":1,"message":"481","line":4,"column":10,"nodeType":"473","messageId":"474","endLine":4,"endColumn":15},{"ruleId":"471","severity":1,"message":"482","line":4,"column":17,"nodeType":"473","messageId":"474","endLine":4,"endColumn":36},{"ruleId":"471","severity":1,"message":"562","line":7,"column":8,"nodeType":"473","messageId":"474","endLine":7,"endColumn":18},{"ruleId":"471","severity":1,"message":"476","line":18,"column":10,"nodeType":"473","messageId":"474","endLine":18,"endColumn":19},{"ruleId":"471","severity":1,"message":"542","line":16,"column":24,"nodeType":"473","messageId":"474","endLine":16,"endColumn":39},{"ruleId":"471","severity":1,"message":"558","line":26,"column":9,"nodeType":"473","messageId":"474","endLine":26,"endColumn":13},"no-native-reassign",["563"],"no-negated-in-lhs",["564"],"no-unused-vars","'TasksPage' is defined but never used.","Identifier","unusedVar","'NewProjectPage' is defined but never used.","'taskState' is assigned a value but never used.","'userState' is assigned a value but never used.","'projectState' is assigned a value but never used.","'teamState' is assigned a value but never used.","'team' is assigned a value but never used.","'Modal' is defined but never used.","'responsiveFontSizes' is defined but never used.","'Draggable' is defined but never used.","'projectName' is assigned a value but never used.","'teamId' is assigned a value but never used.","'tasks' is assigned a value but never used.","'openTasklistFormModal' is assigned a value but never used.","'destinationTasklistId' is assigned a value but never used.","'sourceTasklistId' is assigned a value but never used.","'destinationTaskIndex' is assigned a value but never used.","'sourceTaskIndex' is assigned a value but never used.","'sourceColumnId' is assigned a value but never used.","'destinationIndexId' is assigned a value but never used.","'sourceIndexId' is assigned a value but never used.","'updatedTasklist' is assigned a value but never used.","'updatedTaskIndex' is assigned a value but never used.","'getTasklists' is assigned a value but never used.","'tasklistFormModal' is assigned a value but never used.","'homeImage' is defined but never used.","'AiOutlinePlusCircle' is defined but never used.","'Project' is defined but never used.","'logo' is defined but never used.","'bg' is defined but never used.","'BsCardChecklist' is defined but never used.","'AiOutlineTeam' is defined but never used.","'MdAssignment' is defined but never used.","'Button' is defined but never used.","'onSkip' is assigned a value but never used.","'GrAddCircle' is defined but never used.","'ProjectForm' is defined but never used.","'TaskForm' is defined but never used.","'anchorEl' is assigned a value but never used.","'openProject' is assigned a value but never used.","'openTask' is assigned a value but never used.","'userdispatch' is assigned a value but never used.","'clickOpenTask' is assigned a value but never used.","'clickCloseTask' is assigned a value but never used.","'clickOpenProject' is assigned a value but never used.","'clickCloseProject' is assigned a value but never used.","'handleNewClick' is assigned a value but never used.","'useEffect' is defined but never used.","'apiServer' is defined but never used.","'userId' is assigned a value but never used.","'taskdispatch' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'closeModal' is assigned a value but never used.",["563"],["564"],"'getTeam' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'project.id'. Either include it or remove the dependency array.","ArrayExpression",["565"],"'RiCheckboxBlankCircleLine' is defined but never used.","'RiCheckboxCircleLine' is defined but never used.","'openModal' is assigned a value but never used.","'body' is assigned a value but never used.","'TasklistContext' is defined but never used.","'setProjectError' is assigned a value but never used.","'setAssigneeError' is assigned a value but never used.","'projectdispatch' is assigned a value but never used.","'tasklistdispatch' is assigned a value but never used.","'useContext' is defined but never used.","'clearError' is assigned a value but never used.","'TaskListItem' is defined but never used.","'taskArray' is assigned a value but never used.","'setTaskArray' is assigned a value but never used.","'tasklistTasks' is assigned a value but never used.","'TaskSection' is defined but never used.","'loading' is assigned a value but never used.","'DragDropContext' is defined but never used.","'AddTaskProjectForm' is defined but never used.","'openTaskProjectForm' is assigned a value but never used.","'tasklistState' is assigned a value but never used.","'openTaskProjectFormModal' is assigned a value but never used.","'closeTaskProjectFormModal' is assigned a value but never used.","'date' is assigned a value but never used.","'useState' is defined but never used.","'Droppable' is defined but never used.","'TaskDetailsForm' is defined but never used.","'UserAvatar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"566","fix":"567"},"Update the dependencies array to be: [project.id]",{"range":"568","text":"569"},[720,722],"[project.id]"]