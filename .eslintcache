[{"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/index.js":"1","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/App.js":"2","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/AuthContext.js":"3","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Routes.js":"4","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/UserStore.js":"5","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TasklistStore.js":"6","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TaskStore.js":"7","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/ProjectStore.js":"8","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TeamStore.js":"9","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/AuthRoutes.js":"10","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingRoutes.js":"11","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TaskReducer.js":"12","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/UserReducer.js":"13","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/ProjectReducer.js":"14","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TasklistReducer.js":"15","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TeamReducer.js":"16","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Projects.js":"17","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Team.js":"18","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Project.js":"19","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Tasks.js":"20","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Home.js":"21","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/NewTasks.js":"22","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/RegisterPage.js":"23","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/LeftNavBar.js":"24","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LoginPage.js":"25","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/apiServer.js":"26","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingPage.js":"27","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/Onboard.js":"28","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Loader.js":"29","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBar.js":"30","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarHome.js":"31","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarTask.js":"32","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/index.js":"33","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/NewProjectTile.js":"34","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectItemHome.js":"35","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectTile.js":"36","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskDetailsForm.js":"37","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemHome.js":"38","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemTask.js":"39","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskForm.js":"40","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskSection.js":"41","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskListItem.js":"42","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/NewTeamMemberIcon.js":"43","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskProjectForm.js":"44","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/TeamMemberIcon.js":"45","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TeamForm.js":"46","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TaskListForm.js":"47","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/LoginForm.js":"48","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Home.js":"49","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Logo.js":"50","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/project.js":"51","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Add.js":"52","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/tasks.js":"53","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/alert.js":"54","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/search.js":"55","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/ProjectForm.js":"56","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/UserAvatar.js":"57","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemProject.js":"58","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddMemberForm.js":"59","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTasklist.js":"60","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTaskItem.js":"61","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/pin.js":"62","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/comments.js":"63","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTasklistPopOut.js":"64","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddProjectPopOut.js":"65","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTaskPopOutProjectPage.js":"66","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTaskPopOutTaskPage.js":"67","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/PopOutTaskDetails.js":"68"},{"size":387,"mtime":1608083548331,"results":"69","hashOfConfig":"70"},{"size":1851,"mtime":1607982896422,"results":"71","hashOfConfig":"70"},{"size":104,"mtime":1607369643885,"results":"72","hashOfConfig":"70"},{"size":508,"mtime":1606848376103,"results":"73","hashOfConfig":"70"},{"size":449,"mtime":1607369643914,"results":"74","hashOfConfig":"70"},{"size":500,"mtime":1607369643909,"results":"75","hashOfConfig":"70"},{"size":450,"mtime":1608238733157,"results":"76","hashOfConfig":"70"},{"size":474,"mtime":1607369643906,"results":"77","hashOfConfig":"70"},{"size":450,"mtime":1607369643912,"results":"78","hashOfConfig":"70"},{"size":3471,"mtime":1609442274398,"results":"79","hashOfConfig":"70"},{"size":779,"mtime":1607369511845,"results":"80","hashOfConfig":"70"},{"size":365,"mtime":1608229933494,"results":"81","hashOfConfig":"70"},{"size":193,"mtime":1607369643903,"results":"82","hashOfConfig":"70"},{"size":460,"mtime":1607369643894,"results":"83","hashOfConfig":"70"},{"size":415,"mtime":1609803786925,"results":"84","hashOfConfig":"70"},{"size":308,"mtime":1607369643901,"results":"85","hashOfConfig":"70"},{"size":222,"mtime":1608760205606,"results":"86","hashOfConfig":"70"},{"size":4166,"mtime":1609654253477,"results":"87","hashOfConfig":"70"},{"size":11924,"mtime":1609804575737,"results":"88","hashOfConfig":"70"},{"size":3562,"mtime":1607983552722,"results":"89","hashOfConfig":"70"},{"size":6470,"mtime":1609789402537,"results":"90","hashOfConfig":"70"},{"size":3527,"mtime":1609705375533,"results":"91","hashOfConfig":"70"},{"size":3540,"mtime":1607369511865,"results":"92","hashOfConfig":"70"},{"size":5780,"mtime":1608083409869,"results":"93","hashOfConfig":"70"},{"size":841,"mtime":1607369511852,"results":"94","hashOfConfig":"70"},{"size":467,"mtime":1607976354295,"results":"95","hashOfConfig":"70"},{"size":3401,"mtime":1607369511843,"results":"96","hashOfConfig":"70"},{"size":3243,"mtime":1607978384299,"results":"97","hashOfConfig":"70"},{"size":143,"mtime":1606848376069,"results":"98","hashOfConfig":"70"},{"size":4105,"mtime":1609442136900,"results":"99","hashOfConfig":"70"},{"size":4182,"mtime":1608073492514,"results":"100","hashOfConfig":"70"},{"size":4287,"mtime":1608073631832,"results":"101","hashOfConfig":"70"},{"size":251,"mtime":1606848381423,"results":"102","hashOfConfig":"70"},{"size":1097,"mtime":1609620644075,"results":"103","hashOfConfig":"70"},{"size":2349,"mtime":1609657959427,"results":"104","hashOfConfig":"70"},{"size":1264,"mtime":1607369558073,"results":"105","hashOfConfig":"70"},{"size":6431,"mtime":1608328201447,"results":"106","hashOfConfig":"70"},{"size":3956,"mtime":1609787263536,"results":"107","hashOfConfig":"70"},{"size":3733,"mtime":1609563252910,"results":"108","hashOfConfig":"70"},{"size":8307,"mtime":1609714964694,"results":"109","hashOfConfig":"70"},{"size":1121,"mtime":1607982655510,"results":"110","hashOfConfig":"70"},{"size":3473,"mtime":1607369582506,"results":"111","hashOfConfig":"70"},{"size":1305,"mtime":1607369592304,"results":"112","hashOfConfig":"70"},{"size":6355,"mtime":1609804507324,"results":"113","hashOfConfig":"70"},{"size":521,"mtime":1607369592311,"results":"114","hashOfConfig":"70"},{"size":2808,"mtime":1609706148794,"results":"115","hashOfConfig":"70"},{"size":2417,"mtime":1609802332660,"results":"116","hashOfConfig":"70"},{"size":3075,"mtime":1607371355071,"results":"117","hashOfConfig":"70"},{"size":1221,"mtime":1608269543757,"results":"118","hashOfConfig":"70"},{"size":1659,"mtime":1608269486335,"results":"119","hashOfConfig":"70"},{"size":2932,"mtime":1608269543756,"results":"120","hashOfConfig":"70"},{"size":1176,"mtime":1608269486335,"results":"121","hashOfConfig":"70"},{"size":2211,"mtime":1608269486335,"results":"122","hashOfConfig":"70"},{"size":2081,"mtime":1608269486346,"results":"123","hashOfConfig":"70"},{"size":1796,"mtime":1608269522091,"results":"124","hashOfConfig":"70"},{"size":3948,"mtime":1609788345656,"results":"125","hashOfConfig":"70"},{"size":722,"mtime":1607369525835,"results":"126","hashOfConfig":"70"},{"size":1574,"mtime":1608269203323,"results":"127","hashOfConfig":"70"},{"size":3307,"mtime":1609616811042,"results":"128","hashOfConfig":"70"},{"size":5925,"mtime":1609804070088,"results":"129","hashOfConfig":"70"},{"size":3822,"mtime":1609563311198,"results":"130","hashOfConfig":"70"},{"size":2069,"mtime":1608269486335,"results":"131","hashOfConfig":"70"},{"size":1474,"mtime":1608269543818,"results":"132","hashOfConfig":"70"},{"size":1367,"mtime":1609802100773,"results":"133","hashOfConfig":"70"},{"size":1466,"mtime":1609788408726,"results":"134","hashOfConfig":"70"},{"size":1394,"mtime":1609804574739,"results":"135","hashOfConfig":"70"},{"size":1271,"mtime":1609705470290,"results":"136","hashOfConfig":"70"},{"size":16574,"mtime":1609705011597,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"1sdex4x",{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"140"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"140"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"140"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"140"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"140"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"140"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"140"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"140"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"140"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"140"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"140"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"140"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"140"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/index.js",[],["289","290"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/App.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/AuthContext.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Routes.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/UserStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TasklistStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TaskStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/ProjectStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TeamStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/AuthRoutes.js",["291","292","293","294","295"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport HomePage from \"./Pages/Home\";\nimport TasksPage from \"./Pages/Tasks\";\nimport ProjectPage from \"./Pages/Project\";\nimport ProjectsPage from \"./Pages/Projects\";\nimport TeamPage from \"./Pages/Team\";\nimport NewTasksPage from \"./Pages/NewTasks\";\nimport \"../css/Navbar.css\";\nimport LeftNavBar from \"./NavigationBar/LeftNavBar\";\n\nimport { Context as UserContext } from \"../context/store/UserStore\";\nimport { Context as TaskContext } from \"../context/store/TaskStore\";\nimport { Context as ProjectContext } from \"../context/store/ProjectStore\";\nimport { Context as TeamContext } from \"../context/store/TeamStore\";\n\nimport apiServer from \"../config/apiServer\";\n\nconst AuthRoutes = () => {\n  const [sidebar, setSidebar] = useState(true);\n  const showSidebar = () => setSidebar(!sidebar);\n  const [taskState, taskdispatch] = useContext(TaskContext);\n  const [userState, userdispatch] = useContext(UserContext);\n  const [projectState, projectdispatch] = useContext(ProjectContext);\n  const [teamState, teamdispatch] = useContext(TeamContext);\n\n  //Maybe grab all information here and state goes down to child components?\n  const getUserInfo = async () => {\n    const id = localStorage.getItem(\"userId\");\n    const res = await apiServer.get(`/user/${id}`);\n    await userdispatch({ type: \"get_user_info\", payload: res.data });\n  };\n\n  const getUserTasks = async () => {\n    const id = localStorage.getItem(\"userId\");\n    const res = await apiServer.get(`/task/user/${id}`);\n    await taskdispatch({ type: \"get_user_tasks\", payload: res.data });\n  };\n\n  const getUserTeams = async () => {\n    const id = localStorage.getItem(\"userId\");\n    const res = await apiServer.get(`/team/user/${id}`);\n    await teamdispatch({ type: \"get_user_teams\", payload: res.data });\n  };\n\n  const getUserProjects = async () => {\n    const id = localStorage.getItem(\"userId\");\n    const res = await apiServer.get(`/project/user/${id}`);\n    await projectdispatch({\n      type: \"get_user_projects\",\n      payload: res.data,\n    });\n  };\n\n  useEffect(() => {\n    getUserInfo();\n    getUserTasks();\n    getUserTeams();\n    getUserProjects();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"overlay\">\n      <BrowserRouter>\n        <LeftNavBar showSidebar={showSidebar} sidebar={sidebar} />\n        <div\n          className={\n            sidebar\n              ? \"overlay-right-container\"\n              : \"overlay-right-container__short\"\n          }\n        >\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/tasks\" component={NewTasksPage} />\n            <Route exact path=\"/projects\" component={ProjectsPage} />\n\n            {/* <Route\n              path=\"/team/:teamId/project/:projectId/:projectName\"\n              component={ProjectPage}\n            /> */}\n            <Route\n              path=\"/team/:teamId/project/:projectId/:projectName\"\n              render={() => <ProjectPage sidebar={sidebar} />}\n            />\n            <Route path=\"/team/:teamId/:teamName\" component={TeamPage} />\n            <Route\n              path=\"/*\"\n              render={() => {\n                return <Redirect to=\"/\" />;\n              }}\n            />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default AuthRoutes;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingRoutes.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TaskReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/UserReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/ProjectReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TasklistReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TeamReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Projects.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Team.js",["296"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport TopNavBar from \"../NavigationBar/TopNavBar\";\nimport apiServer from \"../../config/apiServer\";\nimport Loader from \"../Loader\";\nimport \"../../css/TeamPage.css\";\nimport TeamMemberIcon from \"../teams/TeamMemberIcon\";\nimport ProjectTile from \"../projects/ProjectTile\";\nimport NewProjectTile from \"../projects/NewProjectTile\";\nimport NewTeamMemberIcon from \"../teams/NewTeamMemberIcon\";\nimport AddProjectPopOut from \"../PopOutMenu/AddProjectPopOut\";\n\nconst TeamPage = () => {\n  const { teamId, teamName } = useParams();\n  const [team, setTeam] = useState();\n  const [teamProjects, setTeamProjects] = useState();\n  const [teamUsers, setTeamUsers] = useState();\n  const [teamDescription, setTeamDescription] = useState();\n  const [loading, setLoading] = useState(true);\n  const [sideProjectForm, setSideProjectForm] = useState(false);\n\n  const showSideProjectForm = () => {\n    setSideProjectForm(!sideProjectForm);\n  };\n\n  const getTeam = async () => {\n    try {\n      const res = await apiServer.get(`/team/${teamId}`);\n      setTeam(res.data);\n      setTeamProjects(res.data.Projects);\n      setTeamUsers(res.data.Users);\n      setTeamDescription(res.data.description);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleUpdate = (e) => {\n    setTeamDescription(e.target.value);\n  };\n\n  const updateDescription = async (e) => {\n    const description = e.target.value;\n    await apiServer.put(`/team/${teamId}/description`, { description });\n    console.log(e.target.value);\n  };\n\n  useEffect(() => {\n    getTeam();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [teamId, teamName, setTeam, setTeamProjects, setTeamUsers]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  const membersList = teamUsers.map((user, i) => {\n    return <TeamMemberIcon user={user} key={i} />;\n  });\n\n  const projectsList = teamProjects.map((project, i) => {\n    return (\n      <ProjectTile teamId={teamId} project={project} key={i} id={project.id} />\n    );\n  });\n  return (\n    <>\n      <TopNavBar name={teamName} setTeamProjects={setTeamProjects} />\n      <div className=\"team-page-container\">\n        <div className=\"team-page-content-container\">\n          <div className=\"team-page-content-left\">\n            <div className=\"team-content-left-description-container\">\n              <div className=\"team-content-left-description-header\">\n                <div className=\"team-content-title\">Description</div>\n              </div>\n              <form className=\"team-content-left-description-form\">\n                <textarea\n                  className=\"edit-description\"\n                  placeholder=\"Click to add team description...\"\n                  value={teamDescription}\n                  onChange={handleUpdate}\n                  onBlur={updateDescription}\n                ></textarea>\n              </form>\n            </div>\n            <div className=\"team-content-left-members-container\">\n              <div className=\"team-content-left-members-header\">\n                <div className=\"team-content-title\">Members</div>\n              </div>\n              <div className=\"team-content-left-members--list\">\n                {membersList}\n                <NewTeamMemberIcon\n                  setTeamUsers={setTeamUsers}\n                  teamId={teamId}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"team-page-content-right\">\n            <div className=\"team-content-right-header\">\n              <div className=\"team-content-title\">Projects</div>\n            </div>\n            <div className=\"team-content-right-projects--list\">\n              {projectsList}\n              <NewProjectTile showSideProjectForm={showSideProjectForm} />\n            </div>\n          </div>\n        </div>\n        {sideProjectForm ? (\n          <AddProjectPopOut\n            showSideProjectForm={showSideProjectForm}\n            setTeamProjects={setTeamProjects}\n            title={\"Add Project\"}\n          />\n        ) : null}\n      </div>\n    </>\n  );\n};\n\nexport default TeamPage;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Project.js",["297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Tasks.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Home.js",["316","317","318","319"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/NewTasks.js",["320","321","322","323","324"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/RegisterPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/LeftNavBar.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LoginPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/apiServer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/Onboard.js",["325"],"import React, { useContext, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport apiServer from \"../../config/apiServer\";\nimport { useForm } from \"react-hook-form\";\nimport \"../../css/LoginPage.css\";\n\nconst Onboard = (props) => {\n  const { register, handleSubmit, errors } = useForm();\n  const { setAuth } = useContext(AuthContext);\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const onboard = async ({ teamName }) => {\n    const email = localStorage.getItem(\"email\");\n    if (teamName) {\n      try {\n        const res = await apiServer.put(\"/register/onboard\", {\n          email,\n          teamName,\n        });\n        //sets initial token\n        localStorage.setItem(\"token\", res.data.token);\n        setErrorMessage(\"\");\n        //for Refresh\n        setAuth(res.data.token);\n      } catch (err) {\n        console.log(err.status);\n        setErrorMessage(\"Something went wrong\");\n      }\n    }\n  };\n\n  const onSkip = () => {\n    //sets initial token\n    localStorage.setItem(\"token\", localStorage.getItem(\"onboard\"));\n    //for component to refresh to redirect webpage\n    setAuth(localStorage.getItem(\"onboard\"));\n    localStorage.removeItem(\"onboard\");\n  };\n  return (\n    <div className=\"onboard-page-container\">\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          marginTop: \"200px\",\n        }}\n      >\n        <div className=\"onboard-page-header\">\n          <h1\n            style={{\n              fontWeight: \"500\",\n              marginBottom: \"20px\",\n              marginTop: \"1px\",\n              fontSize: \"24px\",\n            }}\n          >\n            What team will you be working on?\n          </h1>\n        </div>\n        <form className=\"onboard-page--form\" onSubmit={handleSubmit(onboard)}>\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <label htmlFor=\"teamName\">Team Name</label>\n            <input name=\"teamName\" ref={register({ minLength: 2 })}></input>\n            {errors.teamName?.type === \"minLengh\" && (\n              <p style={{ color: \"red\", margin: \"1px\" }}>\n                Team name must be greater than 1 character\n              </p>\n            )}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            {/* <button\n              style={{\n                width: \"150px\",\n                border: \"1px solid #0093ff\",\n                backgroundColor: \"transparent\",\n                borderRadius: \"5px\",\n                color: \"black\",\n                outline: \"none\",\n                cursor: \"pointer\",\n              }}\n              onClick={onSkip}\n            >\n              Skip\n            </button> */}\n            <button\n              style={{\n                width: \"150px\",\n              }}\n              type=\"submit\"\n            >\n              Continue\n            </button>\n          </div>\n          {errorMessage ? (\n            <p style={{ color: \"red\", margin: \"1px\" }}>{errorMessage}</p>\n          ) : null}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Onboard;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Loader.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBar.js",["326","327","328","329","330","331","332","333","334","335","336","337"],"import React, { useContext, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport \"../../css/Navbar.css\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport UserAvatar from \"./UserAvatar\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport ProjectForm from \"../Forms/ProjectForm\";\nimport TaskForm from \"../Forms/AddTaskForm\";\nimport Search from \"../../assets/search\";\nimport messageIcon from \"../../assets/message.png\";\nimport Alert from \"../../assets/alert\";\nimport { Context as UserContext } from \"../../context/store/UserStore\";\n\nconst TopNavBar = ({ name, setTeamProjects, setTasklists, sidebar }) => {\n  const { logout } = useContext(AuthContext);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorEle, setAnchorEle] = useState(null);\n  const [openProject, setOpenProject] = useState(false);\n  const [openTask, setOpenTask] = useState(false);\n  const [userState, userdispatch] = useContext(UserContext);\n\n  const clickOpenTask = () => {\n    setOpenTask(true);\n    handleNewClose();\n  };\n\n  const clickCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const clickOpenProject = () => {\n    setOpenProject(true);\n    handleNewClose();\n  };\n  const clickCloseProject = () => {\n    setOpenProject(false);\n  };\n\n  const handleNewClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleNewClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfClick = (event) => {\n    setAnchorEle(event.currentTarget);\n  };\n  const handleProfClose = () => {\n    setAnchorEle(null);\n  };\n\n  return (\n    // <div\n    //   className={\n    //     sidebar ? \"top-nav-bar-container__short\" : \"top-nav-bar-container\"\n    //   }\n    // >\n    <div className=\"top-nav-bar-container\">\n      <div className=\"top-nav-bar-left\">\n        <h2>{name}</h2>\n      </div>\n      <div className=\"top-nav-bar-middle\"></div>\n      <div className=\"top-nav-bar-right\" style={{}}>\n        {/* <div style={{ display: \"flex\" }}>\n          <input className=\"searchbar\" placeholder={\"Search\"}></input>\n        </div> */}\n        {/* <div>\n          <GrAddCircle onClick={handleNewClick} className=\"top-nav-bar--icon\" />\n          <Menu\n            style={{ marginTop: \"40px\" }}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleNewClose}\n          >\n            <MenuItem onClick={clickOpenTask}>Add Task</MenuItem>\n            <TaskForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseTask}\n              open={openTask}\n              setTasklists={setTasklists}\n            ></TaskForm>\n            <MenuItem onClick={clickOpenProject}>Add Project</MenuItem>\n            <ProjectForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseProject}\n              open={openProject}\n              setTeamProjects={setTeamProjects}\n            />\n          </Menu>\n        </div> */}\n        <div\n          className=\"top-nav-icons\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <div>\n            <Alert />\n          </div>\n          <div>\n            <Search />\n          </div>\n\n          <div>\n            <img className=\"logo\" style={{}} src={messageIcon} alt=\"logo\" />\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div style={{ padding: \"0\" }}>\n            <UserAvatar id={localStorage.getItem(\"userId\")} />\n          </div>\n          <div>{userState.user.name}</div>\n          <div\n            onClick={handleProfClick}\n            style={{ padding: \"0\", cursor: \"pointer\" }}\n          >\n            <i className=\"arrow\"></i>\n          </div>\n        </div>\n\n        <Menu\n          style={{ marginTop: \"40px\" }}\n          anchorEl={anchorEle}\n          keepMounted\n          open={Boolean(anchorEle)}\n          onClose={handleProfClose}\n        >\n          <MenuItem onClick={logout}>Logout</MenuItem>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nexport default TopNavBar;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarHome.js",["338","339","340","341","342","343","344","345","346","347","348","349","350","351","352"],"import React, { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport \"../../css/Navbar.css\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport UserAvatar from \"./UserAvatar\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport Search from \"../../assets/search\";\nimport messageIcon from \"../../assets/message.png\";\nimport Alert from \"../../assets/alert\";\nimport ProjectForm from \"../Forms/ProjectForm\";\nimport TaskForm from \"../Forms/AddTaskForm\";\nimport apiServer from \"../../config/apiServer\";\nimport { Context as UserContext } from \"../../context/store/UserStore\";\n\nconst TopNavBarHome = () => {\n  const { logout } = useContext(AuthContext);\n  const [userState, userdispatch] = useContext(UserContext);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorEle, setAnchorEle] = useState(null);\n  const [openProject, setOpenProject] = useState(false);\n  const [openTask, setOpenTask] = useState(false);\n  const userId = localStorage.getItem(\"userId\");\n\n  // useEffect(()=>{\n  //   (async()=>{\n  //     const user = await apiServer.get(\"/user\")\n  //   })();\n  // },[])\n\n  const clickOpenTask = () => {\n    setOpenTask(true);\n    handleNewClose();\n  };\n\n  const clickCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const clickOpenProject = () => {\n    setOpenProject(true);\n    handleNewClose();\n  };\n  const clickCloseProject = () => {\n    setOpenProject(false);\n  };\n\n  const handleNewClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleNewClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfClick = (event) => {\n    setAnchorEle(event.currentTarget);\n  };\n  const handleProfClose = () => {\n    setAnchorEle(null);\n  };\n  return (\n    <div className=\"top-nav-bar-container\" style={{}}>\n      <div\n        className=\"top-nav-bar-left\"\n        style={{ display: \"flex\", flexDirection: \"column\" }}\n      ></div>\n      <div className=\"top-nav-bar-middle\"></div>\n      <div className=\"top-nav-bar-right\" style={{}}>\n        {/* <div style={{ display: \"flex\" }}>\n          <input className=\"searchbar\" placeholder={\"Search\"}></input>\n        </div> */}\n        {/* <div>\n          <GrAddCircle onClick={handleNewClick} className=\"top-nav-bar--icon\" />\n          <Menu\n            style={{ marginTop: \"40px\" }}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleNewClose}\n          >\n            <MenuItem onClick={clickOpenTask}>Add Task</MenuItem>\n            <TaskForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseTask}\n              open={openTask}\n            ></TaskForm>\n            <MenuItem onClick={clickOpenProject}>Add Project</MenuItem>\n            <ProjectForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseProject}\n              open={openProject}\n            />\n          </Menu>\n        </div> */}\n        <div\n          className=\"top-nav-icons\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <div>\n            <Alert />\n          </div>\n          <div>\n            <Search />\n          </div>\n\n          <div>\n            <img className=\"logo\" style={{}} src={messageIcon} alt=\"logo\" />\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div style={{ padding: \"0\" }}>\n            <UserAvatar id={localStorage.getItem(\"userId\")} />\n          </div>\n          <div>\n            <p style={{ fontWeight: 500 }}>{userState.user.name}</p>\n          </div>\n          <div\n            onClick={handleProfClick}\n            style={{ padding: \"0\", cursor: \"pointer\" }}\n          >\n            <i className=\"arrow\"></i>\n          </div>\n        </div>\n\n        <Menu\n          style={{ marginTop: \"40px\" }}\n          anchorEl={anchorEle}\n          keepMounted\n          open={Boolean(anchorEle)}\n          onClose={handleProfClose}\n        >\n          <MenuItem onClick={logout}>Logout</MenuItem>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nexport default TopNavBarHome;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarTask.js",["353","354","355","356","357","358","359","360","361","362","363","364","365"],"import React, { useContext, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport { Context as UserContext } from \"../../context/store/UserStore\";\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\nimport \"../../css/Navbar.css\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport UserAvatar from \"./UserAvatar\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport ProjectForm from \"../Forms/ProjectForm\";\nimport TaskForm from \"../Forms/AddTaskForm\";\nimport Search from \"../../assets/search\";\nimport messageIcon from \"../../assets/message.png\";\nimport Alert from \"../../assets/alert\";\n\nconst TopNavBarTask = () => {\n  const { logout } = useContext(AuthContext);\n  const [userState, userdispatch] = useContext(UserContext);\n  const { name } = userState.user;\n  const [taskState, taskdispatch] = useContext(TaskContext);\n  const numTask = taskState.tasks.filter((task) => task.completed === true);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorEle, setAnchorEle] = useState(null);\n  const [openProject, setOpenProject] = useState(false);\n  const [openTask, setOpenTask] = useState(false);\n\n  const clickOpenTask = () => {\n    setOpenTask(true);\n    handleNewClose();\n  };\n\n  const clickCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const clickOpenProject = () => {\n    setOpenProject(true);\n    handleNewClose();\n  };\n  const clickCloseProject = () => {\n    setOpenProject(false);\n  };\n\n  const handleNewClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleNewClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfClick = (event) => {\n    setAnchorEle(event.currentTarget);\n  };\n  const handleProfClose = () => {\n    setAnchorEle(null);\n  };\n\n  return (\n    <div className=\"top-nav-bar-container\" style={{}}>\n      <div\n        className=\"top-nav-bar-left\"\n        style={{ display: \"flex\", flexDirection: \"column\" }}\n      >\n        <div style={{ fontSize: \"20px\" }}>{name}'s Tasks</div>\n        <p style={{}}>{numTask.length} completed tasks</p>\n      </div>\n      <div className=\"top-nav-bar-middle\"></div>\n      <div className=\"top-nav-bar-right\" style={{}}>\n        {/* <div style={{ display: \"flex\" }}>\n          <input className=\"searchbar\" placeholder={\"Search\"}></input>\n        </div> */}\n        {/* <div>\n          <GrAddCircle onClick={handleNewClick} className=\"top-nav-bar--icon\" />\n          <Menu\n            style={{ marginTop: \"40px\" }}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleNewClose}\n          >\n            <MenuItem onClick={clickOpenTask}>Add Task</MenuItem>\n            <TaskForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseTask}\n              open={openTask}\n            ></TaskForm>\n            <MenuItem onClick={clickOpenProject}>Add Project</MenuItem>\n            <ProjectForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseProject}\n              open={openProject}\n            />\n            \n          </Menu>\n        </div> */}\n        <div\n          className=\"top-nav-icons\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <div>\n            <Alert />\n          </div>\n          <div>\n            <Search />\n          </div>\n\n          <div>\n            <img className=\"logo\" style={{}} src={messageIcon} alt=\"logo\" />\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div style={{ padding: \"0\" }}>\n            <UserAvatar id={localStorage.getItem(\"userId\")} />\n          </div>\n          <div>{userState.user.name}</div>\n          <div\n            onClick={handleProfClick}\n            style={{ padding: \"0\", cursor: \"pointer\" }}\n          >\n            <i className=\"arrow\"></i>\n          </div>\n        </div>\n\n        <Menu\n          style={{ marginTop: \"40px\" }}\n          anchorEl={anchorEle}\n          keepMounted\n          open={Boolean(anchorEle)}\n          onClose={handleProfClose}\n        >\n          <MenuItem onClick={logout}>Logout</MenuItem>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nexport default TopNavBarTask;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/index.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/NewProjectTile.js",["366","367","368"],"import React, { useState } from \"react\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport \"../../css/Project.css\";\r\nimport ProjectForm from \"../Forms/ProjectForm\";\r\nconst NewProjectTile = ({ showSideProjectForm }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const openModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n  const modalBody = (\r\n    <div className=\"modal-container\">\r\n      <ProjectForm clickClose={closeModal} open={open}></ProjectForm>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      <div className=\"project-tile-container\" onClick={showSideProjectForm}>\r\n        <div className=\"project-tile-box\">\r\n          <div className=\"new-project-tile-icon-container\">\r\n            <FiPlus className=\"new-project-tile-icon\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"project-tile-name\">New Project</div>\r\n      </div>\r\n      {/* <Modal open={open} onClose={closeModal}>\r\n        {modalBody}\r\n      </Modal> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewProjectTile;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectItemHome.js",["369","370"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/Project.css\";\r\nimport { AiOutlineEllipsis } from \"react-icons/ai\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nconst ProjectItemHome = ({ project }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const openModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMenuClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  //import component as body such as forms, details, etc\r\n  // const body = (\r\n  //   <div className=\"modal-container\">\r\n  //     {/* <h2 id=\"modal-title\">Task Detail</h2>\r\n  //     <p id=\"modal-description\">\r\n  //       Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n  //     </p> */}\r\n  //     <TaskDetailsForm task={task} closeModal={closeModal} />\r\n  //   </div>\r\n  // );\r\n\r\n  return (\r\n    <Link\r\n      className=\"project-tile--link\"\r\n      to={`/team/${project.team_id}/project/${project.id}/${project.name}`}\r\n    >\r\n      <div className=\"project-home-item\" onClick={openModal}>\r\n        <div className=\"project-home-item-inner-container\">\r\n          <div className=\"project-home-item-inner-left\">\r\n            <div className=\"project-home-item-icon-container\">\r\n              <span className={`dot-task-${project.id}`}></span>\r\n            </div>\r\n            <div className=\"project-home-item-name-container\">\r\n              <p style={{ fontSize: \"15px\", fontWeight: \"500\", margin: \"0px\" }}>\r\n                {project.name}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"project-home-item-more-menu\"\r\n            style={{ height: \"100%\" }}\r\n            onClick={handleMenuClick}\r\n          >\r\n            <AiOutlineEllipsis style={{ fontSize: \"24px\" }} />\r\n          </div>\r\n          <Menu\r\n            style={{}}\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleMenuClose}\r\n          >\r\n            <MenuItem onClick={handleMenuClose}>Delete</MenuItem>\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ProjectItemHome;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectTile.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskDetailsForm.js",["371"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"../../css/Task.css\";\nimport moment from \"moment\";\nimport UserAvatar from \"../NavigationBar/UserAvatar\";\nimport apiServer from \"../../config/apiServer\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\nconst TaskDetailsForm = ({\n  task,\n  closeModal,\n  open,\n  setTasks,\n  setTasklistTasks,\n}) => {\n  const { register, handleSubmit } = useForm();\n  const [taskState, taskdispatch] = useContext(TaskContext);\n  const createdDate = moment(\n    task.createdAt.substring(0, 10).replace(\"-\", \"\"),\n    \"YYYYMMDD\"\n  );\n  const updatedDate = moment(\n    task.updatedAt.substring(0, 10).replace(\"-\", \"\"),\n    \"YYYYMMDD\"\n  );\n\n  const date = moment(\n    task.due_date.substring(0, 10).replace(\"-\", \"\"),\n    \"YYYYMMDD\"\n  );\n  const dueDate = date.format(\"YYYY-MM-DD\");\n\n  const [user, setUser] = useState();\n  const [loading, setLoading] = useState(true);\n  // console.log(task.completed);\n  const getTaskUser = async () => {\n    const res = await apiServer.get(`/user/${task.assignee_id}`);\n    setUser(res.data);\n    setLoading(false);\n  };\n\n  const onSubmit = async ({ name, due_date, description, completed }) => {\n    // put route to update task\n    try {\n      await apiServer.put(`/task/${task.id}`, {\n        name,\n        due_date,\n        description,\n        completed,\n      });\n      //Updates new task list\n      const res = await apiServer.get(\n        `/task/user/${localStorage.getItem(\"userId\")}`\n      );\n      await taskdispatch({ type: \"update_task\", payload: res.data });\n      if (setTasklistTasks) {\n        const taskres = await apiServer.get(\n          `/tasklist/${task.tasklist_id}/tasks`\n        );\n        setTasklistTasks(taskres.data);\n      }\n      closeModal();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await apiServer.delete(`/task/${task.id}`);\n      //Updates new task list\n      const res = await apiServer.get(\n        `/task/user/${localStorage.getItem(\"userId\")}`\n      );\n      await taskdispatch({ type: \"update_task\", payload: res.data });\n      closeModal();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getTaskUser();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading) {\n    return <div></div>;\n  }\n  return (\n    <div>\n      <form className=\"task-details-form\" onSubmit={handleSubmit(onSubmit)}>\n        <div>\n          <textarea\n            name=\"name\"\n            type=\"text\"\n            placeholder={\"Task Name\"}\n            defaultValue={task.name}\n            ref={register}\n            className=\"edit-task-title textarea\"\n          ></textarea>\n        </div>\n        <div className=\"edit-task-info\">\n          <div\n            className=\"edit-task-info-left\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <div className=\"edit-task-user-avatar-container\">\n              <UserAvatar id={task.assignee_id} />\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                paddingLeft: \"10px\",\n              }}\n            >\n              <div style={{ fontWeight: \"500\" }}>Assignee</div>\n              <select\n                style={{ marginTop: \"10px\", border: \"none\" }}\n                name=\"assignee\"\n                defaultValue={user.name}\n              >\n                <option value={user.name}>{user.name}</option>\n              </select>\n              {/* <div>{user.name}</div> */}\n            </div>\n          </div>\n          <div className=\"edit-task-info-mid\">\n            <input\n              type=\"checkbox\"\n              name=\"completed\"\n              defaultChecked={task.completed}\n              ref={register}\n            ></input>\n            <label htmlFor=\"completed\" style={{ fontWeight: \"500\" }}>\n              Mark Complete\n            </label>\n          </div>\n          <div\n            className=\"edit-task-info-right\"\n            style={{ display: \"flex\", flexDirection: \"column\" }}\n          >\n            <div style={{ display: \"flex\" }}>\n              <div style={{ fontWeight: \"500\", marginRight: \"5px\" }}>\n                Created:{\" \"}\n              </div>\n              <div>{createdDate.format(\"MMM DD YYYY\")}</div>\n            </div>\n            <div style={{ display: \"flex\", marginTop: \"5px\" }}>\n              <div style={{ fontWeight: \"500\", marginRight: \"5px\" }}>\n                Last Updated:{\" \"}\n              </div>\n              <div>{updatedDate.format(\"MMM DD YYYY\")}</div>\n            </div>\n            <div style={{ marginTop: \"5px\", display: \"flex\" }}>\n              <div\n                style={{\n                  fontWeight: \"500\",\n                  marginRight: \"5px\",\n                  alignSelf: \"center\",\n                }}\n              >\n                Due:\n              </div>\n              <input\n                className=\"edit-task-form-input\"\n                style={{ border: \"1px solid black\" }}\n                type=\"date\"\n                name=\"due_date\"\n                defaultValue={dueDate}\n                ref={register}\n              ></input>\n            </div>\n          </div>\n        </div>\n        <div>\n          <textarea\n            name=\"description\"\n            type=\"text\"\n            placeholder={\"Task Description\"}\n            defaultValue={task.description}\n            ref={register}\n            className=\"edit-task-description textarea\"\n          ></textarea>\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <div>\n            <Button\n              style={{ color: \"red\" }}\n              onClick={handleDelete}\n              color=\"primary\"\n            >\n              Delete\n            </Button>\n          </div>\n          <div style={{ display: \"flex\", marginLeft: \"350px\" }}>\n            <Button\n              style={{ color: \"#0093ff\" }}\n              onClick={closeModal}\n              color=\"primary\"\n            >\n              Cancel\n            </Button>\n            <Button style={{ color: \"#0093ff\" }} type=\"submit\" color=\"primary\">\n              Save\n            </Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default TaskDetailsForm;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemHome.js",["372","373","374","375","376","377","378"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemTask.js",["379","380","381","382","383"],"import React, { useState, useContext } from \"react\";\r\nimport moment from \"moment\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport \"../../css/Modal.css\";\r\nimport TaskDetailsForm from \"../tasks/TaskDetailsForm\";\r\nimport {\r\n  RiCheckboxBlankCircleLine,\r\n  RiCheckboxCircleLine,\r\n} from \"react-icons/ri\";\r\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\r\nimport apiServer from \"../../config/apiServer\";\r\n\r\n//Task item list for home and task page\r\n\r\nconst TaskItemTask = ({\r\n  task,\r\n  showSideTaskDetails,\r\n  sideTaskDetails,\r\n  setInitialLoad,\r\n}) => {\r\n  const [taskState, taskDispatch] = useContext(TaskContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const date = moment(\r\n    task.due_date.substring(0, 10).replace(\"-\", \"\"),\r\n    \"YYYYMMDD\"\r\n  );\r\n  const openModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const setTaskPopOut = async () => {\r\n    if (sideTaskDetails === false) {\r\n      showSideTaskDetails();\r\n      //---\r\n      taskDispatch({ type: \"get_selected_task\", payload: null });\r\n      const res = await apiServer.get(`/task/${task.id}`);\r\n      await taskDispatch({ type: \"get_selected_task\", payload: res.data });\r\n      setInitialLoad(false);\r\n      console.log(\"if popout\");\r\n    } else {\r\n      console.log(\"else popout\");\r\n      taskDispatch({ type: \"get_selected_task\", payload: null });\r\n      const res = await apiServer.get(`/task/${task.id}`);\r\n      await taskDispatch({ type: \"get_selected_task\", payload: res.data });\r\n      setInitialLoad(false);\r\n    }\r\n  };\r\n\r\n  //import component as body such as forms, details, etc\r\n  const body = (\r\n    <div className=\"modal-container\">\r\n      {/* <h2 id=\"modal-title\">Task Detail</h2>\r\n      <p id=\"modal-description\">\r\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n      </p> */}\r\n      <TaskDetailsForm task={task} closeModal={closeModal} />\r\n    </div>\r\n  );\r\n  return (\r\n    <>\r\n      <li className=\"task-task-item\" onClick={setTaskPopOut}>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          {task.completed ? (\r\n            <RiCheckboxCircleLine\r\n              style={{ color: \"green\", fontSize: \"16px\" }}\r\n            />\r\n          ) : (\r\n            <RiCheckboxBlankCircleLine style={{ fontSize: \"16px\" }} />\r\n          )}\r\n          <p\r\n            style={{\r\n              paddingLeft: \"5px\",\r\n              color: \"gray\",\r\n              WebkitUserSelect: \"none\",\r\n              MozUserSelect: \"none\",\r\n              msUserSelect: \"none\",\r\n            }}\r\n          >\r\n            {task.name}\r\n          </p>\r\n        </div>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <div\r\n            className={`task-project-home-name-container task-project-${task.Project.id}`}\r\n          >\r\n            <p\r\n              style={{\r\n                margin: \"0px\",\r\n                padding: \"5px\",\r\n                fontSize: \"12px\",\r\n                fontWeight: \"500\",\r\n                WebkitUserSelect: \"none\",\r\n                MozUserSelect: \"none\",\r\n                msUserSelect: \"none\",\r\n              }}\r\n            >\r\n              {task.Project.name}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <p\r\n              style={{\r\n                color: \"gray\",\r\n                WebkitUserSelect: \"none\",\r\n                MozUserSelect: \"none\",\r\n                msUserSelect: \"none\",\r\n              }}\r\n            >\r\n              {date.format(\"MMM D YYYY\")}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      {/* <Modal open={open} onClose={closeModal}>\r\n        {body}\r\n      </Modal> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskItemTask;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskForm.js",["384","385","386","387","388","389"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskSection.js",["390"],"import React, { useContext, useState } from \"react\";\r\nimport { BiRightArrow } from \"react-icons/bi\";\r\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\r\nimport \"../../css/Task.css\";\r\nimport TaskItemTask from \"./TaskItemTask\";\r\nconst TaskSection = ({ title, tasks }) => {\r\n  const [open, setOpen] = useState(true);\r\n  const [taskState] = useContext(TaskContext);\r\n\r\n  const toggle = () => {\r\n    setOpen(!open);\r\n    let arrow = document.getElementById(`task-collapse-${title}`);\r\n    arrow.classList.toggle(\"open-arrow-collapse\");\r\n    arrow.classList.toggle(\"open-arrow\");\r\n  };\r\n  const taskList = tasks.map((task, i) => {\r\n    return <TaskItemTask task={task} key={i} />;\r\n  });\r\n  return (\r\n    <div className=\"task-section\">\r\n      <div className=\"task-section-header\" onClick={toggle}>\r\n        <div id={`task-collapse-${title}`} className=\"open-arrow\">\r\n          <BiRightArrow />\r\n        </div>\r\n        <h3 className=\"task-section-title\">{title}</h3>\r\n      </div>\r\n      {open && <div className=\"task-section-list\"> {taskList}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskSection;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskListItem.js",[],["391","392"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/NewTeamMemberIcon.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskProjectForm.js",["393","394"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/TeamMemberIcon.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TeamForm.js",["395"],"import React, { useContext } from \"react\";\nimport { Modal } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useForm } from \"react-hook-form\";\nimport apiServer from \"../../config/apiServer\";\nimport { Context as TeamContext } from \"../../context/store/TeamStore\";\nimport \"../../css/Forms.css\";\nconst TeamForm = ({ handleNewClose, clickClose, open }) => {\n  const { register, handleSubmit, errors } = useForm();\n  const [teamState, teamdispatch] = useContext(TeamContext);\n  const userId = localStorage.getItem(\"userId\");\n\n  const onSubmit = async ({ name, description }) => {\n    await apiServer.post(`/team/user/${userId}`, {\n      name,\n      description,\n    });\n\n    const res = await apiServer.get(`/team/user/${userId}`);\n    await teamdispatch({ type: \"update_user_teams\", payload: res.data });\n    clickClose();\n  };\n\n  return (\n    <div>\n      <Modal open={open} onClose={clickClose}>\n        <div className=\"modal-container\">\n          <form className=\"task-form\" onSubmit={handleSubmit(onSubmit)}>\n            <h2 className=\"form-header\">Create a Team</h2>\n            <div className=\"form-top-container\">\n              <div className=\"form-top-left\">\n                <label className=\"form-label\">\n                  Team Name\n                  <input\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder={\"Team Name\"}\n                    className=\"form-input\"\n                    ref={register({ required: true })}\n                  ></input>\n                  {errors.name?.type === \"required\" && (\n                    <p className=\"error-message\">Please enter a team name</p>\n                  )}\n                </label>\n              </div>\n              <div className=\"form-top-middle\"></div>\n              {/* <div\n                className=\"form-top-right\"\n                style={{ alignSelf: \"normal\" }}\n              ></div> */}\n            </div>\n            <div>\n              <textarea\n                name=\"description\"\n                type=\"text\"\n                placeholder={\"Team Description\"}\n                className=\"edit-task-description textarea\"\n                ref={register}\n              ></textarea>\n            </div>\n            <div style={{ display: \"flex\", marginLeft: \"400px\" }}>\n              <Button\n                style={{ color: \"#0093ff\" }}\n                onClick={clickClose}\n                color=\"primary\"\n              >\n                Cancel\n              </Button>\n              <Button\n                style={{ color: \"#0093ff\" }}\n                type=\"submit\"\n                color=\"primary\"\n              >\n                Add\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TeamForm;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TaskListForm.js",["396","397","398","399"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/LoginForm.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Home.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Logo.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/project.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Add.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/tasks.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/alert.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/search.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/ProjectForm.js",["400","401"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/UserAvatar.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemProject.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddMemberForm.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTasklist.js",["402","403","404","405","406","407","408","409"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTaskItem.js",["410","411","412","413","414","415","416","417","418","419","420"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport TaskDetailsForm from \"../tasks/TaskDetailsForm\";\r\nimport { Modal, responsiveFontSizes } from \"@material-ui/core\";\r\nimport Pin from \"../../assets/pin\";\r\nimport Comments from \"../../assets/comments\";\r\nimport UserAvatar from \"../NavigationBar/UserAvatar\";\r\nimport moment from \"moment\";\r\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\r\nimport apiServer from \"../../config/apiServer\";\r\n\r\nconst ColumnTaskItem = ({\r\n  task,\r\n  index,\r\n  showSideTaskDetails,\r\n  sideTaskDetails,\r\n}) => {\r\n  const [openTaskDetailForm, setOpenTaskDetailForm] = useState(false);\r\n  const [taskState, taskDispatch] = useContext(TaskContext);\r\n\r\n  const date = moment(\r\n    task.due_date.substring(0, 10).replace(\"-\", \"\"),\r\n    \"YYYYMMDD\"\r\n  );\r\n  const openTaskDetailFormModal = () => {\r\n    setOpenTaskDetailForm(true);\r\n  };\r\n\r\n  const closeTaskDetailFormModal = () => {\r\n    setOpenTaskDetailForm(false);\r\n  };\r\n\r\n  const setTaskPopOut = async () => {\r\n    if (sideTaskDetails === false) {\r\n      showSideTaskDetails();\r\n      //---\r\n      taskDispatch({ type: \"get_selected_task\", payload: null });\r\n      const res = await apiServer.get(`/task/${task.id}`);\r\n      await taskDispatch({ type: \"get_selected_task\", payload: res.data });\r\n    } else {\r\n      taskDispatch({ type: \"get_selected_task\", payload: null });\r\n      const res = await apiServer.get(`/task/${task.id}`);\r\n      await taskDispatch({ type: \"get_selected_task\", payload: res.data });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div key={task.id}>\r\n      <Draggable\r\n        draggableId={`${task.id.toString()}`}\r\n        type=\"task\"\r\n        key={`${task.id}`}\r\n        index={index}\r\n      >\r\n        {(provided, snapshot) => (\r\n          <div\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            className=\"task-project-item\"\r\n            // onClick={openTaskDetailFormModal}\r\n            onClick={setTaskPopOut}\r\n          >\r\n            <div className=\"task-project-container-left\">\r\n              <div className=\"task-project-name\">{task.name}</div>\r\n              <div className=\"task-project-icons\">\r\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <Pin />{\" \"}\r\n                  <p style={{ color: \"darkgray\", marginLeft: \"5px\" }}>8</p>\r\n                </div>\r\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <Comments />{\" \"}\r\n                  <p style={{ color: \"darkgray\", marginLeft: \"5px\" }}>9</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"task-project-container-right\">\r\n              <div className=\"task-project-assignee-avatar\">\r\n                <div className=\"user-avatar\">\r\n                  {(task.User.name[0] + task.User.name[1]).toUpperCase()}\r\n                </div>\r\n              </div>\r\n              <div className=\"task-project-due_date\">\r\n                <p style={{ color: \"darkgray\" }}>{date.format(\"MMM D\")}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n      <div>\r\n        {/* <Modal\r\n          open={openTaskDetailForm}\r\n          onClose={closeTaskDetailFormModal}\r\n          style={{ backgroundColor: \"white\" }}\r\n        >\r\n          <div className=\"modal-container\">\r\n            <TaskDetailsForm\r\n              // setTasks={setTasks}\r\n              // setTasklistTasks={setTasklistTasks}\r\n              task={task}\r\n              closeModal={closeTaskDetailFormModal}\r\n            />\r\n          </div>\r\n        </Modal> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColumnTaskItem;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/pin.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/comments.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTasklistPopOut.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddProjectPopOut.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTaskPopOutProjectPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTaskPopOutTaskPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/PopOutTaskDetails.js",["421","422","423"],{"ruleId":"424","replacedBy":"425"},{"ruleId":"426","replacedBy":"427"},{"ruleId":"428","severity":1,"message":"429","line":4,"column":8,"nodeType":"430","messageId":"431","endLine":4,"endColumn":17},{"ruleId":"428","severity":1,"message":"432","line":22,"column":10,"nodeType":"430","messageId":"431","endLine":22,"endColumn":19},{"ruleId":"428","severity":1,"message":"433","line":23,"column":10,"nodeType":"430","messageId":"431","endLine":23,"endColumn":19},{"ruleId":"428","severity":1,"message":"434","line":24,"column":10,"nodeType":"430","messageId":"431","endLine":24,"endColumn":22},{"ruleId":"428","severity":1,"message":"435","line":25,"column":10,"nodeType":"430","messageId":"431","endLine":25,"endColumn":19},{"ruleId":"428","severity":1,"message":"436","line":15,"column":10,"nodeType":"430","messageId":"431","endLine":15,"endColumn":14},{"ruleId":"428","severity":1,"message":"437","line":3,"column":10,"nodeType":"430","messageId":"431","endLine":3,"endColumn":15},{"ruleId":"428","severity":1,"message":"438","line":3,"column":17,"nodeType":"430","messageId":"431","endLine":3,"endColumn":36},{"ruleId":"428","severity":1,"message":"439","line":8,"column":38,"nodeType":"430","messageId":"431","endLine":8,"endColumn":47},{"ruleId":"428","severity":1,"message":"440","line":20,"column":22,"nodeType":"430","messageId":"431","endLine":20,"endColumn":33},{"ruleId":"428","severity":1,"message":"441","line":20,"column":35,"nodeType":"430","messageId":"431","endLine":20,"endColumn":41},{"ruleId":"428","severity":1,"message":"442","line":23,"column":10,"nodeType":"430","messageId":"431","endLine":23,"endColumn":15},{"ruleId":"428","severity":1,"message":"443","line":53,"column":9,"nodeType":"430","messageId":"431","endLine":53,"endColumn":30},{"ruleId":"428","severity":1,"message":"444","line":92,"column":13,"nodeType":"430","messageId":"431","endLine":92,"endColumn":34},{"ruleId":"428","severity":1,"message":"445","line":94,"column":13,"nodeType":"430","messageId":"431","endLine":94,"endColumn":29},{"ruleId":"428","severity":1,"message":"446","line":96,"column":13,"nodeType":"430","messageId":"431","endLine":96,"endColumn":33},{"ruleId":"428","severity":1,"message":"447","line":97,"column":13,"nodeType":"430","messageId":"431","endLine":97,"endColumn":28},{"ruleId":"428","severity":1,"message":"448","line":178,"column":11,"nodeType":"430","messageId":"431","endLine":178,"endColumn":25},{"ruleId":"428","severity":1,"message":"449","line":180,"column":11,"nodeType":"430","messageId":"431","endLine":180,"endColumn":29},{"ruleId":"428","severity":1,"message":"445","line":181,"column":11,"nodeType":"430","messageId":"431","endLine":181,"endColumn":27},{"ruleId":"428","severity":1,"message":"450","line":182,"column":11,"nodeType":"430","messageId":"431","endLine":182,"endColumn":24},{"ruleId":"428","severity":1,"message":"451","line":184,"column":11,"nodeType":"430","messageId":"431","endLine":184,"endColumn":26},{"ruleId":"428","severity":1,"message":"452","line":194,"column":11,"nodeType":"430","messageId":"431","endLine":194,"endColumn":27},{"ruleId":"428","severity":1,"message":"453","line":216,"column":9,"nodeType":"430","messageId":"431","endLine":216,"endColumn":21},{"ruleId":"428","severity":1,"message":"454","line":249,"column":9,"nodeType":"430","messageId":"431","endLine":249,"endColumn":26},{"ruleId":"428","severity":1,"message":"455","line":8,"column":8,"nodeType":"430","messageId":"431","endLine":8,"endColumn":19},{"ruleId":"428","severity":1,"message":"456","line":9,"column":8,"nodeType":"430","messageId":"431","endLine":9,"endColumn":22},{"ruleId":"428","severity":1,"message":"457","line":10,"column":8,"nodeType":"430","messageId":"431","endLine":10,"endColumn":17},{"ruleId":"428","severity":1,"message":"458","line":12,"column":10,"nodeType":"430","messageId":"431","endLine":12,"endColumn":29},{"ruleId":"428","severity":1,"message":"459","line":5,"column":8,"nodeType":"430","messageId":"431","endLine":5,"endColumn":19},{"ruleId":"428","severity":1,"message":"460","line":13,"column":10,"nodeType":"430","messageId":"431","endLine":13,"endColumn":17},{"ruleId":"428","severity":1,"message":"461","line":15,"column":10,"nodeType":"430","messageId":"431","endLine":15,"endColumn":14},{"ruleId":"428","severity":1,"message":"462","line":52,"column":9,"nodeType":"430","messageId":"431","endLine":52,"endColumn":18},{"ruleId":"428","severity":1,"message":"463","line":56,"column":9,"nodeType":"430","messageId":"431","endLine":56,"endColumn":19},{"ruleId":"428","severity":1,"message":"464","line":32,"column":9,"nodeType":"430","messageId":"431","endLine":32,"endColumn":15},{"ruleId":"428","severity":1,"message":"465","line":4,"column":10,"nodeType":"430","messageId":"431","endLine":4,"endColumn":21},{"ruleId":"428","severity":1,"message":"466","line":7,"column":8,"nodeType":"430","messageId":"431","endLine":7,"endColumn":19},{"ruleId":"428","severity":1,"message":"467","line":8,"column":8,"nodeType":"430","messageId":"431","endLine":8,"endColumn":16},{"ruleId":"428","severity":1,"message":"468","line":17,"column":10,"nodeType":"430","messageId":"431","endLine":17,"endColumn":18},{"ruleId":"428","severity":1,"message":"469","line":19,"column":10,"nodeType":"430","messageId":"431","endLine":19,"endColumn":21},{"ruleId":"428","severity":1,"message":"470","line":20,"column":10,"nodeType":"430","messageId":"431","endLine":20,"endColumn":18},{"ruleId":"428","severity":1,"message":"471","line":21,"column":21,"nodeType":"430","messageId":"431","endLine":21,"endColumn":33},{"ruleId":"428","severity":1,"message":"472","line":23,"column":9,"nodeType":"430","messageId":"431","endLine":23,"endColumn":22},{"ruleId":"428","severity":1,"message":"473","line":28,"column":9,"nodeType":"430","messageId":"431","endLine":28,"endColumn":23},{"ruleId":"428","severity":1,"message":"474","line":32,"column":9,"nodeType":"430","messageId":"431","endLine":32,"endColumn":25},{"ruleId":"428","severity":1,"message":"475","line":36,"column":9,"nodeType":"430","messageId":"431","endLine":36,"endColumn":26},{"ruleId":"428","severity":1,"message":"476","line":40,"column":9,"nodeType":"430","messageId":"431","endLine":40,"endColumn":23},{"ruleId":"428","severity":1,"message":"477","line":1,"column":29,"nodeType":"430","messageId":"431","endLine":1,"endColumn":38},{"ruleId":"428","severity":1,"message":"465","line":4,"column":10,"nodeType":"430","messageId":"431","endLine":4,"endColumn":21},{"ruleId":"428","severity":1,"message":"466","line":10,"column":8,"nodeType":"430","messageId":"431","endLine":10,"endColumn":19},{"ruleId":"428","severity":1,"message":"467","line":11,"column":8,"nodeType":"430","messageId":"431","endLine":11,"endColumn":16},{"ruleId":"428","severity":1,"message":"478","line":12,"column":8,"nodeType":"430","messageId":"431","endLine":12,"endColumn":17},{"ruleId":"428","severity":1,"message":"471","line":17,"column":21,"nodeType":"430","messageId":"431","endLine":17,"endColumn":33},{"ruleId":"428","severity":1,"message":"468","line":19,"column":10,"nodeType":"430","messageId":"431","endLine":19,"endColumn":18},{"ruleId":"428","severity":1,"message":"469","line":21,"column":10,"nodeType":"430","messageId":"431","endLine":21,"endColumn":21},{"ruleId":"428","severity":1,"message":"470","line":22,"column":10,"nodeType":"430","messageId":"431","endLine":22,"endColumn":18},{"ruleId":"428","severity":1,"message":"479","line":23,"column":9,"nodeType":"430","messageId":"431","endLine":23,"endColumn":15},{"ruleId":"428","severity":1,"message":"472","line":31,"column":9,"nodeType":"430","messageId":"431","endLine":31,"endColumn":22},{"ruleId":"428","severity":1,"message":"473","line":36,"column":9,"nodeType":"430","messageId":"431","endLine":36,"endColumn":23},{"ruleId":"428","severity":1,"message":"474","line":40,"column":9,"nodeType":"430","messageId":"431","endLine":40,"endColumn":25},{"ruleId":"428","severity":1,"message":"475","line":44,"column":9,"nodeType":"430","messageId":"431","endLine":44,"endColumn":26},{"ruleId":"428","severity":1,"message":"476","line":48,"column":9,"nodeType":"430","messageId":"431","endLine":48,"endColumn":23},{"ruleId":"428","severity":1,"message":"465","line":6,"column":10,"nodeType":"430","messageId":"431","endLine":6,"endColumn":21},{"ruleId":"428","severity":1,"message":"466","line":9,"column":8,"nodeType":"430","messageId":"431","endLine":9,"endColumn":19},{"ruleId":"428","severity":1,"message":"467","line":10,"column":8,"nodeType":"430","messageId":"431","endLine":10,"endColumn":16},{"ruleId":"428","severity":1,"message":"471","line":17,"column":21,"nodeType":"430","messageId":"431","endLine":17,"endColumn":33},{"ruleId":"428","severity":1,"message":"480","line":19,"column":21,"nodeType":"430","messageId":"431","endLine":19,"endColumn":33},{"ruleId":"428","severity":1,"message":"468","line":22,"column":10,"nodeType":"430","messageId":"431","endLine":22,"endColumn":18},{"ruleId":"428","severity":1,"message":"469","line":24,"column":10,"nodeType":"430","messageId":"431","endLine":24,"endColumn":21},{"ruleId":"428","severity":1,"message":"470","line":25,"column":10,"nodeType":"430","messageId":"431","endLine":25,"endColumn":18},{"ruleId":"428","severity":1,"message":"472","line":27,"column":9,"nodeType":"430","messageId":"431","endLine":27,"endColumn":22},{"ruleId":"428","severity":1,"message":"473","line":32,"column":9,"nodeType":"430","messageId":"431","endLine":32,"endColumn":23},{"ruleId":"428","severity":1,"message":"474","line":36,"column":9,"nodeType":"430","messageId":"431","endLine":36,"endColumn":25},{"ruleId":"428","severity":1,"message":"475","line":40,"column":9,"nodeType":"430","messageId":"431","endLine":40,"endColumn":26},{"ruleId":"428","severity":1,"message":"476","line":44,"column":9,"nodeType":"430","messageId":"431","endLine":44,"endColumn":23},{"ruleId":"428","severity":1,"message":"437","line":2,"column":10,"nodeType":"430","messageId":"431","endLine":2,"endColumn":15},{"ruleId":"428","severity":1,"message":"462","line":8,"column":9,"nodeType":"430","messageId":"431","endLine":8,"endColumn":18},{"ruleId":"428","severity":1,"message":"481","line":15,"column":9,"nodeType":"430","messageId":"431","endLine":15,"endColumn":18},{"ruleId":"428","severity":1,"message":"461","line":8,"column":10,"nodeType":"430","messageId":"431","endLine":8,"endColumn":14},{"ruleId":"428","severity":1,"message":"463","line":14,"column":9,"nodeType":"430","messageId":"431","endLine":14,"endColumn":19},{"ruleId":"428","severity":1,"message":"432","line":18,"column":10,"nodeType":"430","messageId":"431","endLine":18,"endColumn":19},{"ruleId":"428","severity":1,"message":"437","line":3,"column":10,"nodeType":"430","messageId":"431","endLine":3,"endColumn":15},{"ruleId":"428","severity":1,"message":"482","line":7,"column":3,"nodeType":"430","messageId":"431","endLine":7,"endColumn":28},{"ruleId":"428","severity":1,"message":"483","line":8,"column":3,"nodeType":"430","messageId":"431","endLine":8,"endColumn":23},{"ruleId":"428","severity":1,"message":"432","line":23,"column":10,"nodeType":"430","messageId":"431","endLine":23,"endColumn":19},{"ruleId":"428","severity":1,"message":"461","line":25,"column":10,"nodeType":"430","messageId":"431","endLine":25,"endColumn":14},{"ruleId":"428","severity":1,"message":"462","line":26,"column":9,"nodeType":"430","messageId":"431","endLine":26,"endColumn":18},{"ruleId":"428","severity":1,"message":"484","line":60,"column":9,"nodeType":"430","messageId":"431","endLine":60,"endColumn":13},{"ruleId":"428","severity":1,"message":"437","line":3,"column":10,"nodeType":"430","messageId":"431","endLine":3,"endColumn":15},{"ruleId":"428","severity":1,"message":"432","line":21,"column":10,"nodeType":"430","messageId":"431","endLine":21,"endColumn":19},{"ruleId":"428","severity":1,"message":"461","line":22,"column":10,"nodeType":"430","messageId":"431","endLine":22,"endColumn":14},{"ruleId":"428","severity":1,"message":"462","line":28,"column":9,"nodeType":"430","messageId":"431","endLine":28,"endColumn":18},{"ruleId":"428","severity":1,"message":"484","line":55,"column":9,"nodeType":"430","messageId":"431","endLine":55,"endColumn":13},{"ruleId":"428","severity":1,"message":"437","line":4,"column":10,"nodeType":"430","messageId":"431","endLine":4,"endColumn":15},{"ruleId":"428","severity":1,"message":"485","line":8,"column":21,"nodeType":"430","messageId":"431","endLine":8,"endColumn":36},{"ruleId":"428","severity":1,"message":"486","line":14,"column":24,"nodeType":"430","messageId":"431","endLine":14,"endColumn":39},{"ruleId":"428","severity":1,"message":"487","line":15,"column":25,"nodeType":"430","messageId":"431","endLine":15,"endColumn":41},{"ruleId":"428","severity":1,"message":"488","line":16,"column":24,"nodeType":"430","messageId":"431","endLine":16,"endColumn":39},{"ruleId":"428","severity":1,"message":"432","line":17,"column":10,"nodeType":"430","messageId":"431","endLine":17,"endColumn":19},{"ruleId":"428","severity":1,"message":"432","line":8,"column":10,"nodeType":"430","messageId":"431","endLine":8,"endColumn":19},{"ruleId":"424","replacedBy":"489"},{"ruleId":"426","replacedBy":"490"},{"ruleId":"428","severity":1,"message":"437","line":4,"column":10,"nodeType":"430","messageId":"431","endLine":4,"endColumn":15},{"ruleId":"428","severity":1,"message":"491","line":25,"column":25,"nodeType":"430","messageId":"431","endLine":25,"endColumn":41},{"ruleId":"428","severity":1,"message":"435","line":10,"column":10,"nodeType":"430","messageId":"431","endLine":10,"endColumn":19},{"ruleId":"428","severity":1,"message":"492","line":1,"column":17,"nodeType":"430","messageId":"431","endLine":1,"endColumn":27},{"ruleId":"428","severity":1,"message":"493","line":3,"column":8,"nodeType":"430","messageId":"431","endLine":3,"endColumn":14},{"ruleId":"428","severity":1,"message":"437","line":4,"column":10,"nodeType":"430","messageId":"431","endLine":4,"endColumn":15},{"ruleId":"428","severity":1,"message":"485","line":7,"column":21,"nodeType":"430","messageId":"431","endLine":7,"endColumn":36},{"ruleId":"428","severity":1,"message":"437","line":2,"column":10,"nodeType":"430","messageId":"431","endLine":2,"endColumn":15},{"ruleId":"428","severity":1,"message":"434","line":18,"column":10,"nodeType":"430","messageId":"431","endLine":18,"endColumn":22},{"ruleId":"428","severity":1,"message":"494","line":2,"column":10,"nodeType":"430","messageId":"431","endLine":2,"endColumn":25},{"ruleId":"428","severity":1,"message":"437","line":3,"column":10,"nodeType":"430","messageId":"431","endLine":3,"endColumn":15},{"ruleId":"428","severity":1,"message":"438","line":3,"column":17,"nodeType":"430","messageId":"431","endLine":3,"endColumn":36},{"ruleId":"428","severity":1,"message":"495","line":5,"column":8,"nodeType":"430","messageId":"431","endLine":5,"endColumn":26},{"ruleId":"428","severity":1,"message":"496","line":21,"column":10,"nodeType":"430","messageId":"431","endLine":21,"endColumn":29},{"ruleId":"428","severity":1,"message":"497","line":26,"column":10,"nodeType":"430","messageId":"431","endLine":26,"endColumn":23},{"ruleId":"428","severity":1,"message":"498","line":28,"column":9,"nodeType":"430","messageId":"431","endLine":28,"endColumn":33},{"ruleId":"428","severity":1,"message":"499","line":32,"column":9,"nodeType":"430","messageId":"431","endLine":32,"endColumn":34},{"ruleId":"428","severity":1,"message":"477","line":1,"column":17,"nodeType":"430","messageId":"431","endLine":1,"endColumn":26},{"ruleId":"428","severity":1,"message":"494","line":2,"column":10,"nodeType":"430","messageId":"431","endLine":2,"endColumn":25},{"ruleId":"428","severity":1,"message":"500","line":2,"column":27,"nodeType":"430","messageId":"431","endLine":2,"endColumn":36},{"ruleId":"428","severity":1,"message":"501","line":3,"column":8,"nodeType":"430","messageId":"431","endLine":3,"endColumn":23},{"ruleId":"428","severity":1,"message":"437","line":4,"column":10,"nodeType":"430","messageId":"431","endLine":4,"endColumn":15},{"ruleId":"428","severity":1,"message":"438","line":4,"column":17,"nodeType":"430","messageId":"431","endLine":4,"endColumn":36},{"ruleId":"428","severity":1,"message":"502","line":7,"column":8,"nodeType":"430","messageId":"431","endLine":7,"endColumn":18},{"ruleId":"428","severity":1,"message":"503","line":18,"column":10,"nodeType":"430","messageId":"431","endLine":18,"endColumn":28},{"ruleId":"428","severity":1,"message":"432","line":19,"column":10,"nodeType":"430","messageId":"431","endLine":19,"endColumn":19},{"ruleId":"428","severity":1,"message":"504","line":25,"column":9,"nodeType":"430","messageId":"431","endLine":25,"endColumn":32},{"ruleId":"428","severity":1,"message":"505","line":29,"column":9,"nodeType":"430","messageId":"431","endLine":29,"endColumn":33},{"ruleId":"428","severity":1,"message":"477","line":1,"column":39,"nodeType":"430","messageId":"431","endLine":1,"endColumn":48},{"ruleId":"428","severity":1,"message":"488","line":16,"column":24,"nodeType":"430","messageId":"431","endLine":16,"endColumn":39},{"ruleId":"428","severity":1,"message":"506","line":26,"column":9,"nodeType":"430","messageId":"431","endLine":26,"endColumn":13},"no-native-reassign",["507"],"no-negated-in-lhs",["508"],"no-unused-vars","'TasksPage' is defined but never used.","Identifier","unusedVar","'taskState' is assigned a value but never used.","'userState' is assigned a value but never used.","'projectState' is assigned a value but never used.","'teamState' is assigned a value but never used.","'team' is assigned a value but never used.","'Modal' is defined but never used.","'responsiveFontSizes' is defined but never used.","'Draggable' is defined but never used.","'projectName' is assigned a value but never used.","'teamId' is assigned a value but never used.","'tasks' is assigned a value but never used.","'openTasklistFormModal' is assigned a value but never used.","'destinationTasklistId' is assigned a value but never used.","'sourceTasklistId' is assigned a value but never used.","'destinationTaskIndex' is assigned a value but never used.","'sourceTaskIndex' is assigned a value but never used.","'sourceColumnId' is assigned a value but never used.","'destinationIndexId' is assigned a value but never used.","'sourceIndexId' is assigned a value but never used.","'updatedTasklist' is assigned a value but never used.","'updatedTaskIndex' is assigned a value but never used.","'getTasklists' is assigned a value but never used.","'tasklistFormModal' is assigned a value but never used.","'ProjectTile' is defined but never used.","'NewProjectTile' is defined but never used.","'homeImage' is defined but never used.","'AiOutlinePlusCircle' is defined but never used.","'TaskSection' is defined but never used.","'loading' is assigned a value but never used.","'open' is assigned a value but never used.","'openModal' is assigned a value but never used.","'closeModal' is assigned a value but never used.","'onSkip' is assigned a value but never used.","'GrAddCircle' is defined but never used.","'ProjectForm' is defined but never used.","'TaskForm' is defined but never used.","'anchorEl' is assigned a value but never used.","'openProject' is assigned a value but never used.","'openTask' is assigned a value but never used.","'userdispatch' is assigned a value but never used.","'clickOpenTask' is assigned a value but never used.","'clickCloseTask' is assigned a value but never used.","'clickOpenProject' is assigned a value but never used.","'clickCloseProject' is assigned a value but never used.","'handleNewClick' is assigned a value but never used.","'useEffect' is defined but never used.","'apiServer' is defined but never used.","'userId' is assigned a value but never used.","'taskdispatch' is assigned a value but never used.","'modalBody' is assigned a value but never used.","'RiCheckboxBlankCircleLine' is defined but never used.","'RiCheckboxCircleLine' is defined but never used.","'body' is assigned a value but never used.","'TasklistContext' is defined but never used.","'setProjectError' is assigned a value but never used.","'setAssigneeError' is assigned a value but never used.","'projectdispatch' is assigned a value but never used.",["507"],["508"],"'tasklistdispatch' is assigned a value but never used.","'useContext' is defined but never used.","'Button' is defined but never used.","'DragDropContext' is defined but never used.","'AddTaskProjectForm' is defined but never used.","'openTaskProjectForm' is assigned a value but never used.","'tasklistState' is assigned a value but never used.","'openTaskProjectFormModal' is assigned a value but never used.","'closeTaskProjectFormModal' is assigned a value but never used.","'Droppable' is defined but never used.","'TaskDetailsForm' is defined but never used.","'UserAvatar' is defined but never used.","'openTaskDetailForm' is assigned a value but never used.","'openTaskDetailFormModal' is assigned a value but never used.","'closeTaskDetailFormModal' is assigned a value but never used.","'date' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]