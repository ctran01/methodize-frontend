[{"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/index.js":"1","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/App.js":"2","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/AuthContext.js":"3","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Routes.js":"4","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/UserStore.js":"5","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TasklistStore.js":"6","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TaskStore.js":"7","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/ProjectStore.js":"8","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TeamStore.js":"9","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/AuthRoutes.js":"10","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingRoutes.js":"11","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TaskReducer.js":"12","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/UserReducer.js":"13","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/ProjectReducer.js":"14","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TasklistReducer.js":"15","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TeamReducer.js":"16","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Projects.js":"17","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Team.js":"18","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Project.js":"19","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Tasks.js":"20","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Home.js":"21","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/NewTasks.js":"22","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/RegisterPage.js":"23","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/LeftNavBar.js":"24","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LoginPage.js":"25","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/apiServer.js":"26","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingPage.js":"27","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/Onboard.js":"28","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Loader.js":"29","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBar.js":"30","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarHome.js":"31","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarTask.js":"32","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/index.js":"33","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/NewProjectTile.js":"34","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectItemHome.js":"35","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectTile.js":"36","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskDetailsForm.js":"37","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemHome.js":"38","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemTask.js":"39","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskForm.js":"40","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskSection.js":"41","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskListItem.js":"42","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/NewTeamMemberIcon.js":"43","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskProjectForm.js":"44","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/TeamMemberIcon.js":"45","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TeamForm.js":"46","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TaskListForm.js":"47","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/LoginForm.js":"48","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Home.js":"49","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Logo.js":"50","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/project.js":"51","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Add.js":"52","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/tasks.js":"53","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/alert.js":"54","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/search.js":"55","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/ProjectForm.js":"56","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/UserAvatar.js":"57","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemProject.js":"58","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddMemberForm.js":"59","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTasklist.js":"60","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTaskItem.js":"61","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/pin.js":"62","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/comments.js":"63","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/PopOutTaskDetails.js":"64","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTasklistPopOut.js":"65","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTaskPopOut.js":"66"},{"size":387,"mtime":1608083548331,"results":"67","hashOfConfig":"68"},{"size":1851,"mtime":1607982896422,"results":"69","hashOfConfig":"68"},{"size":104,"mtime":1607369643885,"results":"70","hashOfConfig":"68"},{"size":508,"mtime":1606848376103,"results":"71","hashOfConfig":"68"},{"size":449,"mtime":1607369643914,"results":"72","hashOfConfig":"68"},{"size":500,"mtime":1607369643909,"results":"73","hashOfConfig":"68"},{"size":450,"mtime":1608238733157,"results":"74","hashOfConfig":"68"},{"size":474,"mtime":1607369643906,"results":"75","hashOfConfig":"68"},{"size":450,"mtime":1607369643912,"results":"76","hashOfConfig":"68"},{"size":3471,"mtime":1609442274398,"results":"77","hashOfConfig":"68"},{"size":779,"mtime":1607369511845,"results":"78","hashOfConfig":"68"},{"size":365,"mtime":1608229933494,"results":"79","hashOfConfig":"68"},{"size":193,"mtime":1607369643903,"results":"80","hashOfConfig":"68"},{"size":460,"mtime":1607369643894,"results":"81","hashOfConfig":"68"},{"size":318,"mtime":1607369643898,"results":"82","hashOfConfig":"68"},{"size":308,"mtime":1607369643901,"results":"83","hashOfConfig":"68"},{"size":222,"mtime":1608760205606,"results":"84","hashOfConfig":"68"},{"size":3694,"mtime":1607369544367,"results":"85","hashOfConfig":"68"},{"size":11798,"mtime":1609562557924,"results":"86","hashOfConfig":"68"},{"size":3562,"mtime":1607983552722,"results":"87","hashOfConfig":"68"},{"size":4520,"mtime":1608443835936,"results":"88","hashOfConfig":"68"},{"size":3040,"mtime":1609372396308,"results":"89","hashOfConfig":"68"},{"size":3540,"mtime":1607369511865,"results":"90","hashOfConfig":"68"},{"size":5780,"mtime":1608083409869,"results":"91","hashOfConfig":"68"},{"size":841,"mtime":1607369511852,"results":"92","hashOfConfig":"68"},{"size":467,"mtime":1607976354295,"results":"93","hashOfConfig":"68"},{"size":3401,"mtime":1607369511843,"results":"94","hashOfConfig":"68"},{"size":3243,"mtime":1607978384299,"results":"95","hashOfConfig":"68"},{"size":143,"mtime":1606848376069,"results":"96","hashOfConfig":"68"},{"size":4105,"mtime":1609442136900,"results":"97","hashOfConfig":"68"},{"size":4182,"mtime":1608073492514,"results":"98","hashOfConfig":"68"},{"size":4287,"mtime":1608073631832,"results":"99","hashOfConfig":"68"},{"size":251,"mtime":1606848381423,"results":"100","hashOfConfig":"68"},{"size":1056,"mtime":1607369558071,"results":"101","hashOfConfig":"68"},{"size":2101,"mtime":1608008621276,"results":"102","hashOfConfig":"68"},{"size":1264,"mtime":1607369558073,"results":"103","hashOfConfig":"68"},{"size":6431,"mtime":1608328201447,"results":"104","hashOfConfig":"68"},{"size":3038,"mtime":1608007269891,"results":"105","hashOfConfig":"68"},{"size":3733,"mtime":1609563252910,"results":"106","hashOfConfig":"68"},{"size":8860,"mtime":1609562188271,"results":"107","hashOfConfig":"68"},{"size":1121,"mtime":1607982655510,"results":"108","hashOfConfig":"68"},{"size":3473,"mtime":1607369582506,"results":"109","hashOfConfig":"68"},{"size":1305,"mtime":1607369592304,"results":"110","hashOfConfig":"68"},{"size":5160,"mtime":1609562623478,"results":"111","hashOfConfig":"68"},{"size":521,"mtime":1607369592311,"results":"112","hashOfConfig":"68"},{"size":2803,"mtime":1607369501738,"results":"113","hashOfConfig":"68"},{"size":2373,"mtime":1609562624719,"results":"114","hashOfConfig":"68"},{"size":3075,"mtime":1607371355071,"results":"115","hashOfConfig":"68"},{"size":1221,"mtime":1608269543757,"results":"116","hashOfConfig":"68"},{"size":1659,"mtime":1608269486335,"results":"117","hashOfConfig":"68"},{"size":2932,"mtime":1608269543756,"results":"118","hashOfConfig":"68"},{"size":1176,"mtime":1608269486335,"results":"119","hashOfConfig":"68"},{"size":2211,"mtime":1608269486335,"results":"120","hashOfConfig":"68"},{"size":2081,"mtime":1608269486346,"results":"121","hashOfConfig":"68"},{"size":1796,"mtime":1608269522091,"results":"122","hashOfConfig":"68"},{"size":4143,"mtime":1607369501732,"results":"123","hashOfConfig":"68"},{"size":722,"mtime":1607369525835,"results":"124","hashOfConfig":"68"},{"size":1574,"mtime":1608269203323,"results":"125","hashOfConfig":"68"},{"size":3301,"mtime":1607369501709,"results":"126","hashOfConfig":"68"},{"size":5589,"mtime":1609562559027,"results":"127","hashOfConfig":"68"},{"size":3822,"mtime":1609563311198,"results":"128","hashOfConfig":"68"},{"size":2069,"mtime":1608269486335,"results":"129","hashOfConfig":"68"},{"size":1474,"mtime":1608269543818,"results":"130","hashOfConfig":"68"},{"size":16574,"mtime":1609562774063,"results":"131","hashOfConfig":"68"},{"size":1171,"mtime":1609555695369,"results":"132","hashOfConfig":"68"},{"size":1173,"mtime":1609562284305,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"1sdex4x",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"136"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"136"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"136"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"136"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"136"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"136"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"136"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"136"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"136"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"136"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"136"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"136"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"136"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"136"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/index.js",[],["281","282"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/App.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/AuthContext.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Routes.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/UserStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TasklistStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TaskStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/ProjectStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/store/TeamStore.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/AuthRoutes.js",["283","284","285","286","287"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport HomePage from \"./Pages/Home\";\nimport TasksPage from \"./Pages/Tasks\";\nimport ProjectPage from \"./Pages/Project\";\nimport ProjectsPage from \"./Pages/Projects\";\nimport TeamPage from \"./Pages/Team\";\nimport NewTasksPage from \"./Pages/NewTasks\";\nimport \"../css/Navbar.css\";\nimport LeftNavBar from \"./NavigationBar/LeftNavBar\";\n\nimport { Context as UserContext } from \"../context/store/UserStore\";\nimport { Context as TaskContext } from \"../context/store/TaskStore\";\nimport { Context as ProjectContext } from \"../context/store/ProjectStore\";\nimport { Context as TeamContext } from \"../context/store/TeamStore\";\n\nimport apiServer from \"../config/apiServer\";\n\nconst AuthRoutes = () => {\n  const [sidebar, setSidebar] = useState(true);\n  const showSidebar = () => setSidebar(!sidebar);\n  const [taskState, taskdispatch] = useContext(TaskContext);\n  const [userState, userdispatch] = useContext(UserContext);\n  const [projectState, projectdispatch] = useContext(ProjectContext);\n  const [teamState, teamdispatch] = useContext(TeamContext);\n\n  //Maybe grab all information here and state goes down to child components?\n  const getUserInfo = async () => {\n    const id = localStorage.getItem(\"userId\");\n    const res = await apiServer.get(`/user/${id}`);\n    await userdispatch({ type: \"get_user_info\", payload: res.data });\n  };\n\n  const getUserTasks = async () => {\n    const id = localStorage.getItem(\"userId\");\n    const res = await apiServer.get(`/task/user/${id}`);\n    await taskdispatch({ type: \"get_user_tasks\", payload: res.data });\n  };\n\n  const getUserTeams = async () => {\n    const id = localStorage.getItem(\"userId\");\n    const res = await apiServer.get(`/team/user/${id}`);\n    await teamdispatch({ type: \"get_user_teams\", payload: res.data });\n  };\n\n  const getUserProjects = async () => {\n    const id = localStorage.getItem(\"userId\");\n    const res = await apiServer.get(`/project/user/${id}`);\n    await projectdispatch({\n      type: \"get_user_projects\",\n      payload: res.data,\n    });\n  };\n\n  useEffect(() => {\n    getUserInfo();\n    getUserTasks();\n    getUserTeams();\n    getUserProjects();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"overlay\">\n      <BrowserRouter>\n        <LeftNavBar showSidebar={showSidebar} sidebar={sidebar} />\n        <div\n          className={\n            sidebar\n              ? \"overlay-right-container\"\n              : \"overlay-right-container__short\"\n          }\n        >\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/tasks\" component={NewTasksPage} />\n            <Route exact path=\"/projects\" component={ProjectsPage} />\n\n            {/* <Route\n              path=\"/team/:teamId/project/:projectId/:projectName\"\n              component={ProjectPage}\n            /> */}\n            <Route\n              path=\"/team/:teamId/project/:projectId/:projectName\"\n              render={() => <ProjectPage sidebar={sidebar} />}\n            />\n            <Route path=\"/team/:teamId/:teamName\" component={TeamPage} />\n            <Route\n              path=\"/*\"\n              render={() => {\n                return <Redirect to=\"/\" />;\n              }}\n            />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default AuthRoutes;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingRoutes.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TaskReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/UserReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/ProjectReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TasklistReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/context/reducer/TeamReducer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Projects.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Team.js",["288"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport TopNavBar from \"../NavigationBar/TopNavBar\";\nimport apiServer from \"../../config/apiServer\";\nimport Loader from \"../Loader\";\nimport \"../../css/TeamPage.css\";\nimport TeamMemberIcon from \"../teams/TeamMemberIcon\";\nimport ProjectTile from \"../projects/ProjectTile\";\nimport NewProjectTile from \"../projects/NewProjectTile\";\nimport NewTeamMemberIcon from \"../teams/NewTeamMemberIcon\";\n\nconst TeamPage = () => {\n  const { teamId, teamName } = useParams();\n  const [team, setTeam] = useState();\n  const [teamProjects, setTeamProjects] = useState();\n  const [teamUsers, setTeamUsers] = useState();\n  const [teamDescription, setTeamDescription] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const getTeam = async () => {\n    try {\n      const res = await apiServer.get(`/team/${teamId}`);\n      setTeam(res.data);\n      setTeamProjects(res.data.Projects);\n      setTeamUsers(res.data.Users);\n      setTeamDescription(res.data.description);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleUpdate = (e) => {\n    setTeamDescription(e.target.value);\n  };\n\n  const updateDescription = async (e) => {\n    const description = e.target.value;\n    await apiServer.put(`/team/${teamId}/description`, { description });\n    console.log(e.target.value);\n  };\n\n  useEffect(() => {\n    getTeam();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [teamId, teamName, setTeam, setTeamProjects, setTeamUsers]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  const membersList = teamUsers.map((user, i) => {\n    return <TeamMemberIcon user={user} key={i} />;\n  });\n\n  const projectsList = teamProjects.map((project, i) => {\n    return (\n      <ProjectTile teamId={teamId} project={project} key={i} id={project.id} />\n    );\n  });\n  return (\n    <div>\n      <TopNavBar name={teamName} setTeamProjects={setTeamProjects} />\n      <div className=\"team-page-container\">\n        <div className=\"team-page-content-container\">\n          <div className=\"team-page-content-left\">\n            <div className=\"team-content-left-description-container\">\n              <div className=\"team-content-left-description-header\">\n                <div className=\"team-content-title\">Description</div>\n              </div>\n              <form className=\"team-content-left-description-form\">\n                <textarea\n                  className=\"edit-description\"\n                  placeholder=\"Click to add team description...\"\n                  value={teamDescription}\n                  onChange={handleUpdate}\n                  onBlur={updateDescription}\n                ></textarea>\n              </form>\n            </div>\n            <div className=\"team-content-left-members-container\">\n              <div className=\"team-content-left-members-header\">\n                <div className=\"team-content-title\">Members</div>\n              </div>\n              <div className=\"team-content-left-members--list\">\n                {membersList}\n                <NewTeamMemberIcon\n                  setTeamUsers={setTeamUsers}\n                  teamId={teamId}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"team-page-content-right\">\n            <div className=\"team-content-right-header\">\n              <div className=\"team-content-title\">Projects</div>\n            </div>\n            <div className=\"team-content-right-projects--list\">\n              {projectsList}\n              <NewProjectTile />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TeamPage;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Project.js",["289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Tasks.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/Home.js",["308","309","310","311"],"import React, { useContext } from \"react\";\n\nimport { Context as UserContext } from \"../../context/store/UserStore\";\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\nimport { Context as ProjectContext } from \"../../context/store/ProjectStore\";\nimport TaskItemHome from \"../tasks/TaskItemHome\";\nimport TopNavBarHome from \"../NavigationBar/TopNavBarHome\";\nimport ProjectTile from \"../projects/ProjectTile\";\nimport NewProjectTile from \"../projects/NewProjectTile\";\nimport homeImage from \"../../assets/codeVersion.png\";\nimport Add from \"../../assets/Add\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport ProjectItemHome from \"../projects/ProjectItemHome\";\n\nconst HomePage = () => {\n  const [userState] = useContext(UserContext);\n  const [taskState] = useContext(TaskContext);\n  const [projectState] = useContext(ProjectContext);\n\n  const uncompletedTasklist = taskState.tasks.filter(\n    (task) => task.completed === false\n  );\n\n  const sortedTaskList = uncompletedTasklist.sort(function (a, b) {\n    return new Date(b.due_date) - new Date(a.due_date);\n  });\n\n  // const upcomingTasklist = sortedTaskList\n  //   .slice(sortedTaskList.length - 4)\n  //   .reverse();\n\n  const taskList = sortedTaskList.map((task, i) => {\n    return !task.completed && <TaskItemHome task={task} key={i} />;\n  });\n\n  const projectLists = projectState.projects.slice(0, 4);\n\n  const projectTiles = projectLists.map((project, i) => {\n    return <ProjectItemHome project={project} key={i} id={project.id} />;\n    // return <ProjectTile project={project} key={i} id={project.id} />;\n  });\n\n  return (\n    <>\n      <TopNavBarHome />\n      <section className=\"home-container\">\n        {/* <div className=\"home-container\"> */}\n        <div className=\"home-welcome-header\">\n          <div>\n            <p className=\"home-welcome-message\">Hi, {userState.user.name}!</p>\n            <p style={{ display: \"flex\", alignSelf: \"center\" }}>\n              Welcome to your dashboard.\n            </p>\n          </div>\n        </div>\n        <div className=\"home-main-content-container\">\n          <div className=\"home-tasks-container\">\n            <div className=\"home-tasks-header\">\n              <div>\n                <h2\n                  style={{\n                    color: \"#151b26\",\n                    fontWeight: 500,\n                    fontSize: \"20px\",\n                  }}\n                >\n                  Tasks Due Soon\n                </h2>\n              </div>\n              <div>\n                <Link\n                  to=\"/tasks\"\n                  style={{ textDecoration: \"none\", color: \"blue\" }}\n                >\n                  <p style={{ fontSize: \"14px\" }}>See all my tasks</p>\n                </Link>\n              </div>\n            </div>\n            <div className=\"home-tasks--list\">\n              {/* call get all tasks for specific user route */}\n              {taskList}\n              <div className=\"new-home-item-container\">\n                <div className=\"new-home-icon-container\">\n                  <Add className=\"new-home-item-icon\" />\n                </div>\n                <div className=\"new-home-item-name\">Create Task</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"home-projects-container\">\n            <div className=\"home-projects-header\">\n              <div>\n                <h2\n                  style={{\n                    color: \"#151b26\",\n                    fontWeight: 500,\n                    fontSize: \"20px\",\n                  }}\n                >\n                  Projects\n                </h2>\n              </div>\n              <div>\n                <Link\n                  to=\"/tasks\"\n                  style={{ textDecoration: \"none\", color: \"blue\" }}\n                >\n                  <p style={{ fontSize: \"14px\" }}>See all my projects</p>\n                </Link>\n              </div>\n            </div>\n            <div className=\"home-projects--list\">\n              {/* call get all projects for specific user route */}\n              {projectTiles}\n              <div className=\"new-home-item-container\">\n                <div className=\"new-home-icon-container\">\n                  <Add className=\"new-home-item-icon\" />\n                </div>\n                <div className=\"new-home-item-name\">Create Project</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* </div> */}\n      </section>\n    </>\n  );\n};\n\nexport default HomePage;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Pages/NewTasks.js",["312","313","314","315","316"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport TopNavBarTask from \"../NavigationBar/TopNavBarTask\";\r\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\r\nimport apiServer from \"../../config/apiServer\";\r\nimport TaskSection from \"../tasks/TaskSection\";\r\nimport PopOutTaskDetails from \"../tasks/PopOutTaskDetails\";\r\nimport TaskItemTask from \"../tasks/TaskItemTask\";\r\nimport Add from \"../../assets/Add\";\r\nimport { RiNurseFill } from \"react-icons/ri\";\r\n\r\nconst NewTasks = () => {\r\n  const [taskState, taskdispatch] = useContext(TaskContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [initialLoad, setInitialLoad] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [sideTaskDetails, setSideTaskDetails] = useState(false);\r\n  const showSideTaskDetails = () => setSideTaskDetails(!sideTaskDetails);\r\n\r\n  const getUserTasks = async () => {\r\n    const id = localStorage.getItem(\"userId\");\r\n    const res = await apiServer.get(`/task/user/${id}`);\r\n    await taskdispatch({ type: \"get_user_tasks\", payload: res.data });\r\n    // setTasks(res.data);\r\n    setLoading(false);\r\n  };\r\n\r\n  const sortedTasks = taskState.tasks.sort(function (a, b) {\r\n    return new Date(a.due_date) - new Date(b.due_date);\r\n  });\r\n\r\n  const renderedTasks = sortedTasks.map((task, i) => {\r\n    return (\r\n      <TaskItemTask\r\n        task={task}\r\n        key={i}\r\n        showSideTaskDetails={showSideTaskDetails}\r\n        sideTaskDetails={sideTaskDetails}\r\n        setInitialLoad={setInitialLoad}\r\n      />\r\n    );\r\n  });\r\n  const openModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserTasks();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TopNavBarTask />\r\n      <div className=\"tasks-container\">\r\n        {/* <div className=\"tasks-container-header\"></div> */}\r\n        <div className=\"tasks-main-content\">\r\n          <div\r\n            className={\r\n              taskState.selectedTask || initialLoad\r\n                ? \"tasks-inner-container\"\r\n                : \"tasks-inner-container hidden\"\r\n            }\r\n          >\r\n            <div className=\"tasks-add-task-container\" onClick={openModal}>\r\n              <div className=\"tasks-add-task-icon\">\r\n                <Add />\r\n              </div>\r\n              <div className=\"add-task-button\">\r\n                <p style={{ margin: \"2px 0px 0px 0px\", paddingLeft: \"5px\" }}>\r\n                  Add Task\r\n                </p>\r\n              </div>\r\n            </div>\r\n            {renderedTasks}\r\n            {/* <TaskSection title={\"Tasks\"} tasks={sortedTasks} /> */}\r\n          </div>\r\n          {sideTaskDetails && taskState.selectedTask ? (\r\n            <PopOutTaskDetails\r\n              showSideTaskDetails={showSideTaskDetails}\r\n              sideTaskDetails={sideTaskDetails}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewTasks;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/RegisterPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/LeftNavBar.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LoginPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/apiServer.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/LandingPage.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/LandingPage/Onboard.js",["317"],"import React, { useContext, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport apiServer from \"../../config/apiServer\";\nimport { useForm } from \"react-hook-form\";\nimport \"../../css/LoginPage.css\";\n\nconst Onboard = (props) => {\n  const { register, handleSubmit, errors } = useForm();\n  const { setAuth } = useContext(AuthContext);\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const onboard = async ({ teamName }) => {\n    const email = localStorage.getItem(\"email\");\n    if (teamName) {\n      try {\n        const res = await apiServer.put(\"/register/onboard\", {\n          email,\n          teamName,\n        });\n        //sets initial token\n        localStorage.setItem(\"token\", res.data.token);\n        setErrorMessage(\"\");\n        //for Refresh\n        setAuth(res.data.token);\n      } catch (err) {\n        console.log(err.status);\n        setErrorMessage(\"Something went wrong\");\n      }\n    }\n  };\n\n  const onSkip = () => {\n    //sets initial token\n    localStorage.setItem(\"token\", localStorage.getItem(\"onboard\"));\n    //for component to refresh to redirect webpage\n    setAuth(localStorage.getItem(\"onboard\"));\n    localStorage.removeItem(\"onboard\");\n  };\n  return (\n    <div className=\"onboard-page-container\">\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          marginTop: \"200px\",\n        }}\n      >\n        <div className=\"onboard-page-header\">\n          <h1\n            style={{\n              fontWeight: \"500\",\n              marginBottom: \"20px\",\n              marginTop: \"1px\",\n              fontSize: \"24px\",\n            }}\n          >\n            What team will you be working on?\n          </h1>\n        </div>\n        <form className=\"onboard-page--form\" onSubmit={handleSubmit(onboard)}>\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <label htmlFor=\"teamName\">Team Name</label>\n            <input name=\"teamName\" ref={register({ minLength: 2 })}></input>\n            {errors.teamName?.type === \"minLengh\" && (\n              <p style={{ color: \"red\", margin: \"1px\" }}>\n                Team name must be greater than 1 character\n              </p>\n            )}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            {/* <button\n              style={{\n                width: \"150px\",\n                border: \"1px solid #0093ff\",\n                backgroundColor: \"transparent\",\n                borderRadius: \"5px\",\n                color: \"black\",\n                outline: \"none\",\n                cursor: \"pointer\",\n              }}\n              onClick={onSkip}\n            >\n              Skip\n            </button> */}\n            <button\n              style={{\n                width: \"150px\",\n              }}\n              type=\"submit\"\n            >\n              Continue\n            </button>\n          </div>\n          {errorMessage ? (\n            <p style={{ color: \"red\", margin: \"1px\" }}>{errorMessage}</p>\n          ) : null}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Onboard;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Loader.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBar.js",["318","319","320","321","322","323","324","325","326","327","328","329"],"import React, { useContext, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport \"../../css/Navbar.css\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport UserAvatar from \"./UserAvatar\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport ProjectForm from \"../Forms/ProjectForm\";\nimport TaskForm from \"../Forms/AddTaskForm\";\nimport Search from \"../../assets/search\";\nimport messageIcon from \"../../assets/message.png\";\nimport Alert from \"../../assets/alert\";\nimport { Context as UserContext } from \"../../context/store/UserStore\";\n\nconst TopNavBar = ({ name, setTeamProjects, setTasklists, sidebar }) => {\n  const { logout } = useContext(AuthContext);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorEle, setAnchorEle] = useState(null);\n  const [openProject, setOpenProject] = useState(false);\n  const [openTask, setOpenTask] = useState(false);\n  const [userState, userdispatch] = useContext(UserContext);\n\n  const clickOpenTask = () => {\n    setOpenTask(true);\n    handleNewClose();\n  };\n\n  const clickCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const clickOpenProject = () => {\n    setOpenProject(true);\n    handleNewClose();\n  };\n  const clickCloseProject = () => {\n    setOpenProject(false);\n  };\n\n  const handleNewClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleNewClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfClick = (event) => {\n    setAnchorEle(event.currentTarget);\n  };\n  const handleProfClose = () => {\n    setAnchorEle(null);\n  };\n\n  return (\n    // <div\n    //   className={\n    //     sidebar ? \"top-nav-bar-container__short\" : \"top-nav-bar-container\"\n    //   }\n    // >\n    <div className=\"top-nav-bar-container\">\n      <div className=\"top-nav-bar-left\">\n        <h2>{name}</h2>\n      </div>\n      <div className=\"top-nav-bar-middle\"></div>\n      <div className=\"top-nav-bar-right\" style={{}}>\n        {/* <div style={{ display: \"flex\" }}>\n          <input className=\"searchbar\" placeholder={\"Search\"}></input>\n        </div> */}\n        {/* <div>\n          <GrAddCircle onClick={handleNewClick} className=\"top-nav-bar--icon\" />\n          <Menu\n            style={{ marginTop: \"40px\" }}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleNewClose}\n          >\n            <MenuItem onClick={clickOpenTask}>Add Task</MenuItem>\n            <TaskForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseTask}\n              open={openTask}\n              setTasklists={setTasklists}\n            ></TaskForm>\n            <MenuItem onClick={clickOpenProject}>Add Project</MenuItem>\n            <ProjectForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseProject}\n              open={openProject}\n              setTeamProjects={setTeamProjects}\n            />\n          </Menu>\n        </div> */}\n        <div\n          className=\"top-nav-icons\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <div>\n            <Alert />\n          </div>\n          <div>\n            <Search />\n          </div>\n\n          <div>\n            <img className=\"logo\" style={{}} src={messageIcon} alt=\"logo\" />\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div style={{ padding: \"0\" }}>\n            <UserAvatar id={localStorage.getItem(\"userId\")} />\n          </div>\n          <div>{userState.user.name}</div>\n          <div\n            onClick={handleProfClick}\n            style={{ padding: \"0\", cursor: \"pointer\" }}\n          >\n            <i className=\"arrow\"></i>\n          </div>\n        </div>\n\n        <Menu\n          style={{ marginTop: \"40px\" }}\n          anchorEl={anchorEle}\n          keepMounted\n          open={Boolean(anchorEle)}\n          onClose={handleProfClose}\n        >\n          <MenuItem onClick={logout}>Logout</MenuItem>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nexport default TopNavBar;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarHome.js",["330","331","332","333","334","335","336","337","338","339","340","341","342","343","344"],"import React, { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport \"../../css/Navbar.css\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport UserAvatar from \"./UserAvatar\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport Search from \"../../assets/search\";\nimport messageIcon from \"../../assets/message.png\";\nimport Alert from \"../../assets/alert\";\nimport ProjectForm from \"../Forms/ProjectForm\";\nimport TaskForm from \"../Forms/AddTaskForm\";\nimport apiServer from \"../../config/apiServer\";\nimport { Context as UserContext } from \"../../context/store/UserStore\";\n\nconst TopNavBarHome = () => {\n  const { logout } = useContext(AuthContext);\n  const [userState, userdispatch] = useContext(UserContext);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorEle, setAnchorEle] = useState(null);\n  const [openProject, setOpenProject] = useState(false);\n  const [openTask, setOpenTask] = useState(false);\n  const userId = localStorage.getItem(\"userId\");\n\n  // useEffect(()=>{\n  //   (async()=>{\n  //     const user = await apiServer.get(\"/user\")\n  //   })();\n  // },[])\n\n  const clickOpenTask = () => {\n    setOpenTask(true);\n    handleNewClose();\n  };\n\n  const clickCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const clickOpenProject = () => {\n    setOpenProject(true);\n    handleNewClose();\n  };\n  const clickCloseProject = () => {\n    setOpenProject(false);\n  };\n\n  const handleNewClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleNewClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfClick = (event) => {\n    setAnchorEle(event.currentTarget);\n  };\n  const handleProfClose = () => {\n    setAnchorEle(null);\n  };\n  return (\n    <div className=\"top-nav-bar-container\" style={{}}>\n      <div\n        className=\"top-nav-bar-left\"\n        style={{ display: \"flex\", flexDirection: \"column\" }}\n      ></div>\n      <div className=\"top-nav-bar-middle\"></div>\n      <div className=\"top-nav-bar-right\" style={{}}>\n        {/* <div style={{ display: \"flex\" }}>\n          <input className=\"searchbar\" placeholder={\"Search\"}></input>\n        </div> */}\n        {/* <div>\n          <GrAddCircle onClick={handleNewClick} className=\"top-nav-bar--icon\" />\n          <Menu\n            style={{ marginTop: \"40px\" }}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleNewClose}\n          >\n            <MenuItem onClick={clickOpenTask}>Add Task</MenuItem>\n            <TaskForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseTask}\n              open={openTask}\n            ></TaskForm>\n            <MenuItem onClick={clickOpenProject}>Add Project</MenuItem>\n            <ProjectForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseProject}\n              open={openProject}\n            />\n          </Menu>\n        </div> */}\n        <div\n          className=\"top-nav-icons\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <div>\n            <Alert />\n          </div>\n          <div>\n            <Search />\n          </div>\n\n          <div>\n            <img className=\"logo\" style={{}} src={messageIcon} alt=\"logo\" />\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div style={{ padding: \"0\" }}>\n            <UserAvatar id={localStorage.getItem(\"userId\")} />\n          </div>\n          <div>\n            <p style={{ fontWeight: 500 }}>{userState.user.name}</p>\n          </div>\n          <div\n            onClick={handleProfClick}\n            style={{ padding: \"0\", cursor: \"pointer\" }}\n          >\n            <i className=\"arrow\"></i>\n          </div>\n        </div>\n\n        <Menu\n          style={{ marginTop: \"40px\" }}\n          anchorEl={anchorEle}\n          keepMounted\n          open={Boolean(anchorEle)}\n          onClose={handleProfClose}\n        >\n          <MenuItem onClick={logout}>Logout</MenuItem>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nexport default TopNavBarHome;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/TopNavBarTask.js",["345","346","347","348","349","350","351","352","353","354","355","356","357"],"import React, { useContext, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport { Context as UserContext } from \"../../context/store/UserStore\";\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\nimport \"../../css/Navbar.css\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport UserAvatar from \"./UserAvatar\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport ProjectForm from \"../Forms/ProjectForm\";\nimport TaskForm from \"../Forms/AddTaskForm\";\nimport Search from \"../../assets/search\";\nimport messageIcon from \"../../assets/message.png\";\nimport Alert from \"../../assets/alert\";\n\nconst TopNavBarTask = () => {\n  const { logout } = useContext(AuthContext);\n  const [userState, userdispatch] = useContext(UserContext);\n  const { name } = userState.user;\n  const [taskState, taskdispatch] = useContext(TaskContext);\n  const numTask = taskState.tasks.filter((task) => task.completed === true);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorEle, setAnchorEle] = useState(null);\n  const [openProject, setOpenProject] = useState(false);\n  const [openTask, setOpenTask] = useState(false);\n\n  const clickOpenTask = () => {\n    setOpenTask(true);\n    handleNewClose();\n  };\n\n  const clickCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const clickOpenProject = () => {\n    setOpenProject(true);\n    handleNewClose();\n  };\n  const clickCloseProject = () => {\n    setOpenProject(false);\n  };\n\n  const handleNewClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleNewClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfClick = (event) => {\n    setAnchorEle(event.currentTarget);\n  };\n  const handleProfClose = () => {\n    setAnchorEle(null);\n  };\n\n  return (\n    <div className=\"top-nav-bar-container\" style={{}}>\n      <div\n        className=\"top-nav-bar-left\"\n        style={{ display: \"flex\", flexDirection: \"column\" }}\n      >\n        <div style={{ fontSize: \"20px\" }}>{name}'s Tasks</div>\n        <p style={{}}>{numTask.length} completed tasks</p>\n      </div>\n      <div className=\"top-nav-bar-middle\"></div>\n      <div className=\"top-nav-bar-right\" style={{}}>\n        {/* <div style={{ display: \"flex\" }}>\n          <input className=\"searchbar\" placeholder={\"Search\"}></input>\n        </div> */}\n        {/* <div>\n          <GrAddCircle onClick={handleNewClick} className=\"top-nav-bar--icon\" />\n          <Menu\n            style={{ marginTop: \"40px\" }}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleNewClose}\n          >\n            <MenuItem onClick={clickOpenTask}>Add Task</MenuItem>\n            <TaskForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseTask}\n              open={openTask}\n            ></TaskForm>\n            <MenuItem onClick={clickOpenProject}>Add Project</MenuItem>\n            <ProjectForm\n              handleNewClose={handleNewClose}\n              clickClose={clickCloseProject}\n              open={openProject}\n            />\n            \n          </Menu>\n        </div> */}\n        <div\n          className=\"top-nav-icons\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <div>\n            <Alert />\n          </div>\n          <div>\n            <Search />\n          </div>\n\n          <div>\n            <img className=\"logo\" style={{}} src={messageIcon} alt=\"logo\" />\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div style={{ padding: \"0\" }}>\n            <UserAvatar id={localStorage.getItem(\"userId\")} />\n          </div>\n          <div>{userState.user.name}</div>\n          <div\n            onClick={handleProfClick}\n            style={{ padding: \"0\", cursor: \"pointer\" }}\n          >\n            <i className=\"arrow\"></i>\n          </div>\n        </div>\n\n        <Menu\n          style={{ marginTop: \"40px\" }}\n          anchorEl={anchorEle}\n          keepMounted\n          open={Boolean(anchorEle)}\n          onClose={handleProfClose}\n        >\n          <MenuItem onClick={logout}>Logout</MenuItem>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nexport default TopNavBarTask;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/config/index.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/NewProjectTile.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectItemHome.js",["358","359"],"import React, { useState } from \"react\";\r\nimport \"../../css/Project.css\";\r\nimport { AiOutlineEllipsis } from \"react-icons/ai\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nconst ProjectItemHome = ({ project }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const openModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMenuClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  //import component as body such as forms, details, etc\r\n  // const body = (\r\n  //   <div className=\"modal-container\">\r\n  //     {/* <h2 id=\"modal-title\">Task Detail</h2>\r\n  //     <p id=\"modal-description\">\r\n  //       Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n  //     </p> */}\r\n  //     <TaskDetailsForm task={task} closeModal={closeModal} />\r\n  //   </div>\r\n  // );\r\n\r\n  return (\r\n    <div className=\"project-home-item\" onClick={openModal}>\r\n      <div className=\"project-home-item-inner-container\">\r\n        <div className=\"project-home-item-inner-left\">\r\n          <div className=\"project-home-item-icon-container\">\r\n            <span className={`dot-task-${project.id}`}></span>\r\n          </div>\r\n          <div className=\"project-home-item-name-container\">\r\n            <p style={{ fontSize: \"15px\", fontWeight: \"500\", margin: \"0px\" }}>\r\n              {project.name}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"project-home-item-more-menu\"\r\n          style={{ height: \"100%\" }}\r\n          onClick={handleMenuClick}\r\n        >\r\n          <AiOutlineEllipsis style={{ fontSize: \"24px\" }} />\r\n        </div>\r\n        <Menu\r\n          style={{}}\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleMenuClose}\r\n        >\r\n          <MenuItem onClick={handleMenuClose}>Delete</MenuItem>\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectItemHome;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/projects/ProjectTile.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskDetailsForm.js",["360"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"../../css/Task.css\";\nimport moment from \"moment\";\nimport UserAvatar from \"../NavigationBar/UserAvatar\";\nimport apiServer from \"../../config/apiServer\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\nconst TaskDetailsForm = ({\n  task,\n  closeModal,\n  open,\n  setTasks,\n  setTasklistTasks,\n}) => {\n  const { register, handleSubmit } = useForm();\n  const [taskState, taskdispatch] = useContext(TaskContext);\n  const createdDate = moment(\n    task.createdAt.substring(0, 10).replace(\"-\", \"\"),\n    \"YYYYMMDD\"\n  );\n  const updatedDate = moment(\n    task.updatedAt.substring(0, 10).replace(\"-\", \"\"),\n    \"YYYYMMDD\"\n  );\n\n  const date = moment(\n    task.due_date.substring(0, 10).replace(\"-\", \"\"),\n    \"YYYYMMDD\"\n  );\n  const dueDate = date.format(\"YYYY-MM-DD\");\n\n  const [user, setUser] = useState();\n  const [loading, setLoading] = useState(true);\n  // console.log(task.completed);\n  const getTaskUser = async () => {\n    const res = await apiServer.get(`/user/${task.assignee_id}`);\n    setUser(res.data);\n    setLoading(false);\n  };\n\n  const onSubmit = async ({ name, due_date, description, completed }) => {\n    // put route to update task\n    try {\n      await apiServer.put(`/task/${task.id}`, {\n        name,\n        due_date,\n        description,\n        completed,\n      });\n      //Updates new task list\n      const res = await apiServer.get(\n        `/task/user/${localStorage.getItem(\"userId\")}`\n      );\n      await taskdispatch({ type: \"update_task\", payload: res.data });\n      if (setTasklistTasks) {\n        const taskres = await apiServer.get(\n          `/tasklist/${task.tasklist_id}/tasks`\n        );\n        setTasklistTasks(taskres.data);\n      }\n      closeModal();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await apiServer.delete(`/task/${task.id}`);\n      //Updates new task list\n      const res = await apiServer.get(\n        `/task/user/${localStorage.getItem(\"userId\")}`\n      );\n      await taskdispatch({ type: \"update_task\", payload: res.data });\n      closeModal();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getTaskUser();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading) {\n    return <div></div>;\n  }\n  return (\n    <div>\n      <form className=\"task-details-form\" onSubmit={handleSubmit(onSubmit)}>\n        <div>\n          <textarea\n            name=\"name\"\n            type=\"text\"\n            placeholder={\"Task Name\"}\n            defaultValue={task.name}\n            ref={register}\n            className=\"edit-task-title textarea\"\n          ></textarea>\n        </div>\n        <div className=\"edit-task-info\">\n          <div\n            className=\"edit-task-info-left\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <div className=\"edit-task-user-avatar-container\">\n              <UserAvatar id={task.assignee_id} />\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                paddingLeft: \"10px\",\n              }}\n            >\n              <div style={{ fontWeight: \"500\" }}>Assignee</div>\n              <select\n                style={{ marginTop: \"10px\", border: \"none\" }}\n                name=\"assignee\"\n                defaultValue={user.name}\n              >\n                <option value={user.name}>{user.name}</option>\n              </select>\n              {/* <div>{user.name}</div> */}\n            </div>\n          </div>\n          <div className=\"edit-task-info-mid\">\n            <input\n              type=\"checkbox\"\n              name=\"completed\"\n              defaultChecked={task.completed}\n              ref={register}\n            ></input>\n            <label htmlFor=\"completed\" style={{ fontWeight: \"500\" }}>\n              Mark Complete\n            </label>\n          </div>\n          <div\n            className=\"edit-task-info-right\"\n            style={{ display: \"flex\", flexDirection: \"column\" }}\n          >\n            <div style={{ display: \"flex\" }}>\n              <div style={{ fontWeight: \"500\", marginRight: \"5px\" }}>\n                Created:{\" \"}\n              </div>\n              <div>{createdDate.format(\"MMM DD YYYY\")}</div>\n            </div>\n            <div style={{ display: \"flex\", marginTop: \"5px\" }}>\n              <div style={{ fontWeight: \"500\", marginRight: \"5px\" }}>\n                Last Updated:{\" \"}\n              </div>\n              <div>{updatedDate.format(\"MMM DD YYYY\")}</div>\n            </div>\n            <div style={{ marginTop: \"5px\", display: \"flex\" }}>\n              <div\n                style={{\n                  fontWeight: \"500\",\n                  marginRight: \"5px\",\n                  alignSelf: \"center\",\n                }}\n              >\n                Due:\n              </div>\n              <input\n                className=\"edit-task-form-input\"\n                style={{ border: \"1px solid black\" }}\n                type=\"date\"\n                name=\"due_date\"\n                defaultValue={dueDate}\n                ref={register}\n              ></input>\n            </div>\n          </div>\n        </div>\n        <div>\n          <textarea\n            name=\"description\"\n            type=\"text\"\n            placeholder={\"Task Description\"}\n            defaultValue={task.description}\n            ref={register}\n            className=\"edit-task-description textarea\"\n          ></textarea>\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <div>\n            <Button\n              style={{ color: \"red\" }}\n              onClick={handleDelete}\n              color=\"primary\"\n            >\n              Delete\n            </Button>\n          </div>\n          <div style={{ display: \"flex\", marginLeft: \"350px\" }}>\n            <Button\n              style={{ color: \"#0093ff\" }}\n              onClick={closeModal}\n              color=\"primary\"\n            >\n              Cancel\n            </Button>\n            <Button style={{ color: \"#0093ff\" }} type=\"submit\" color=\"primary\">\n              Save\n            </Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default TaskDetailsForm;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemHome.js",["361","362"],"import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { Modal } from \"@material-ui/core\";\nimport \"../../css/Modal.css\";\nimport TaskDetailsForm from \"./TaskDetailsForm\";\nimport {\n  RiCheckboxBlankCircleLine,\n  RiCheckboxCircleLine,\n} from \"react-icons/ri\";\nimport { AiOutlineEllipsis } from \"react-icons/ai\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\n//Task item list for home and task page\n\nconst TaskItemHome = ({ task }) => {\n  const date = moment(\n    task.due_date.substring(0, 10).replace(\"-\", \"\"),\n    \"YYYYMMDD\"\n  );\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [open, setOpen] = useState(false);\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  //import component as body such as forms, details, etc\n  const body = (\n    <div className=\"modal-container\">\n      {/* <h2 id=\"modal-title\">Task Detail</h2>\n      <p id=\"modal-description\">\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n      </p> */}\n      <TaskDetailsForm task={task} closeModal={closeModal} />\n    </div>\n  );\n  return (\n    <>\n      <div className=\"task-home-item\">\n        <div className=\"task-home-item-inner-container\">\n          <div className=\"task-home-item-inner-left\" onClick={openModal}>\n            <div className=\"task-home-item-icon-container\">\n              {/* {task.completed ? (\n                <RiCheckboxCircleLine\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                />\n              ) : (\n                <RiCheckboxBlankCircleLine style={{ fontSize: \"16px\" }} />\n              )} */}\n              <span className={`dot-task-${task.id}`}></span>\n            </div>\n            <div className=\"task-home-item-name-container\">\n              <p\n                style={{\n                  fontSize: \"15px\",\n                  fontWeight: \"500\",\n                  margin: \"0px\",\n                }}\n              >\n                {task.name}\n              </p>\n              <p style={{ color: \"grey\", margin: \"0\" }}>\n                {date.format(\"MMM D\")}\n              </p>\n            </div>\n          </div>\n          <div\n            className=\"task-home-item-more-menu\"\n            style={{ height: \"100%\" }}\n            onClick={handleMenuClick}\n          >\n            <AiOutlineEllipsis style={{ fontSize: \"24px\" }} />\n          </div>\n          <Menu\n            style={{}}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n          >\n            <MenuItem onClick={handleMenuClose}>Delete</MenuItem>\n          </Menu>\n        </div>\n      </div>\n      <Modal open={open} onClose={closeModal}>\n        {body}\n      </Modal>\n      {/* <TaskDetailsForm task={task} closeModal={closeModal} open={open} /> */}\n    </>\n  );\n};\n\nexport default TaskItemHome;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemTask.js",["363","364","365","366","367"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskForm.js",["368","369","370","371","372"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskSection.js",["373"],"import React, { useContext, useState } from \"react\";\r\nimport { BiRightArrow } from \"react-icons/bi\";\r\nimport { Context as TaskContext } from \"../../context/store/TaskStore\";\r\nimport \"../../css/Task.css\";\r\nimport TaskItemTask from \"./TaskItemTask\";\r\nconst TaskSection = ({ title, tasks }) => {\r\n  const [open, setOpen] = useState(true);\r\n  const [taskState] = useContext(TaskContext);\r\n\r\n  const toggle = () => {\r\n    setOpen(!open);\r\n    let arrow = document.getElementById(`task-collapse-${title}`);\r\n    arrow.classList.toggle(\"open-arrow-collapse\");\r\n    arrow.classList.toggle(\"open-arrow\");\r\n  };\r\n  const taskList = tasks.map((task, i) => {\r\n    return <TaskItemTask task={task} key={i} />;\r\n  });\r\n  return (\r\n    <div className=\"task-section\">\r\n      <div className=\"task-section-header\" onClick={toggle}>\r\n        <div id={`task-collapse-${title}`} className=\"open-arrow\">\r\n          <BiRightArrow />\r\n        </div>\r\n        <h3 className=\"task-section-title\">{title}</h3>\r\n      </div>\r\n      {open && <div className=\"task-section-list\"> {taskList}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskSection;\r\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskListItem.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/NewTeamMemberIcon.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddTaskProjectForm.js",["374","375"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/teams/TeamMemberIcon.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TeamForm.js",["376"],"import React, { useContext } from \"react\";\nimport { Modal } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useForm } from \"react-hook-form\";\nimport apiServer from \"../../config/apiServer\";\nimport { Context as TeamContext } from \"../../context/store/TeamStore\";\nimport \"../../css/Forms.css\";\nconst TeamForm = ({ handleNewClose, clickClose, open }) => {\n  const { register, handleSubmit, errors } = useForm();\n  const [teamState, teamdispatch] = useContext(TeamContext);\n  const userId = localStorage.getItem(\"userId\");\n\n  const onSubmit = async ({ name, description }) => {\n    await apiServer.post(`/team/user/${userId}`, {\n      name,\n      description,\n    });\n\n    const res = await apiServer.get(`/team/user/${userId}`);\n    await teamdispatch({ type: \"update_user_teams\", payload: res.data });\n    clickClose();\n  };\n\n  return (\n    <div>\n      <Modal open={open} onClose={clickClose}>\n        <div className=\"modal-container\">\n          <form className=\"task-form\" onSubmit={handleSubmit(onSubmit)}>\n            <h2 className=\"form-header\">Create a Team</h2>\n            <div className=\"form-top-container\">\n              <div className=\"form-top-left\">\n                <label className=\"form-label\">\n                  Team Name\n                  <input\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder={\"Team Name\"}\n                    className=\"form-input\"\n                    ref={register({ required: true })}\n                  ></input>\n                  {errors.name?.type === \"required\" && (\n                    <p className=\"error-message\">Please enter a team name</p>\n                  )}\n                </label>\n              </div>\n              <div className=\"form-top-middle\"></div>\n              {/* <div\n                className=\"form-top-right\"\n                style={{ alignSelf: \"normal\" }}\n              ></div> */}\n            </div>\n            <div>\n              <textarea\n                name=\"description\"\n                type=\"text\"\n                placeholder={\"Team Description\"}\n                className=\"edit-task-description textarea\"\n                ref={register}\n              ></textarea>\n            </div>\n            <div style={{ display: \"flex\", marginLeft: \"400px\" }}>\n              <Button\n                style={{ color: \"#0093ff\" }}\n                onClick={clickClose}\n                color=\"primary\"\n              >\n                Cancel\n              </Button>\n              <Button\n                style={{ color: \"#0093ff\" }}\n                type=\"submit\"\n                color=\"primary\"\n              >\n                Add\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TeamForm;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/TaskListForm.js",["377","378","379"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/LoginForm.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Home.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Logo.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/project.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/Add.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/tasks.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/alert.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/search.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/ProjectForm.js",["380"],"import React, { useContext } from \"react\";\nimport { Modal } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useForm } from \"react-hook-form\";\nimport apiServer from \"../../config/apiServer\";\nimport { Context as TeamContext } from \"../../context/store/TeamStore\";\nimport { Context as ProjectContext } from \"../../context/store/ProjectStore\";\nimport \"../../css/Forms.css\";\nconst ProjectForm = ({ handleNewClose, clickClose, open, setTeamProjects }) => {\n  const { register, handleSubmit, errors, clearErrors } = useForm();\n  const [teamState, teamdispatch] = useContext(TeamContext);\n  const [projectState, projectdispatch] = useContext(ProjectContext);\n  const userId = localStorage.getItem(\"userId\");\n\n  const onSubmit = async ({ name, teamId }) => {\n    await apiServer.post(`/team/${teamId}/project/`, {\n      name,\n      userId,\n    });\n\n    //REFER TO THIS WHEN CHECKING FOR RERENDERING\n    const res = await apiServer.get(`/project/user/${userId}`);\n    await projectdispatch({ type: \"get_user_projects\", payload: res.data });\n    const projectResponse = await apiServer.get(`/team/${teamId}`);\n    // NOTE: One way this could work is if we recreate form for just team page add project form button\n    // Will not work with top nav bar form\n    // setTeamProjects(projectResponse.data.Projects);\n    await teamdispatch({\n      type: `get_team_projects${teamId}`,\n      payload: projectResponse.data,\n    });\n    if (setTeamProjects) {\n      const teamResponse = await apiServer.get(`/team/${teamId}`);\n      setTeamProjects(teamResponse.data.Projects);\n    }\n    // window.location.reload();\n\n    clickClose();\n  };\n\n  const clearError = () => {\n    var teamSelect = document.getElementById(\"team-select\");\n    clearErrors(teamSelect.name);\n  };\n  const renderedTeams = teamState.teams.map((team, i) => {\n    return (\n      <option key={i} id={team.id} value={team.id}>\n        {team.name}\n      </option>\n    );\n  });\n\n  return (\n    <div>\n      <Modal open={open} onClose={clickClose}>\n        <div className=\"modal-container\">\n          <form className=\"task-form\" onSubmit={handleSubmit(onSubmit)}>\n            <h2 className=\"form-header\">Add a Project</h2>\n            <div className=\"form-top-container\">\n              <div className=\"form-top-left\">\n                <label className=\"form-label\">\n                  Project Name\n                  <input\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder={\"Project Name\"}\n                    className=\"form-input\"\n                    onChange={clearError}\n                    ref={register({ required: true })}\n                  ></input>\n                  {errors.name?.type === \"required\" && (\n                    <p className=\"error-message\">\n                      Please fill out project name\n                    </p>\n                  )}\n                </label>\n              </div>\n              <div className=\"form-top-middle\">\n                <label className=\"form-label\" style={{ width: \"200px\" }}>\n                  Team\n                  <select\n                    id=\"team-select\"\n                    name=\"teamId\"\n                    className=\"form-input\"\n                    ref={register({ required: true })}\n                  >\n                    {renderedTeams}\n                  </select>\n                  {errors.teamId?.type === \"required\" && (\n                    <p className=\"error-message\">Please choose a team</p>\n                  )}\n                </label>\n              </div>\n            </div>\n\n            <div style={{ display: \"flex\", marginLeft: \"400px\" }}>\n              <Button\n                style={{ color: \"#0093ff\" }}\n                onClick={clickClose}\n                color=\"primary\"\n              >\n                Cancel\n              </Button>\n              <Button\n                style={{ color: \"#0093ff\" }}\n                type=\"submit\"\n                color=\"primary\"\n              >\n                Add\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ProjectForm;\n","/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/NavigationBar/UserAvatar.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/TaskItemProject.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/Forms/AddMemberForm.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTasklist.js",["381","382","383","384","385","386","387","388"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/ColumnTaskItem.js",["389","390","391","392","393","394","395","396","397","398","399"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/pin.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/assets/comments.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/tasks/PopOutTaskDetails.js",["400","401","402"],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTasklistPopOut.js",[],"/mnt/c/Users/Chris/Desktop/methodic-frontend/src/components/PopOutMenu/AddTaskPopOut.js",[],{"ruleId":"403","replacedBy":"404"},{"ruleId":"405","replacedBy":"406"},{"ruleId":"407","severity":1,"message":"408","line":4,"column":8,"nodeType":"409","messageId":"410","endLine":4,"endColumn":17},{"ruleId":"407","severity":1,"message":"411","line":22,"column":10,"nodeType":"409","messageId":"410","endLine":22,"endColumn":19},{"ruleId":"407","severity":1,"message":"412","line":23,"column":10,"nodeType":"409","messageId":"410","endLine":23,"endColumn":19},{"ruleId":"407","severity":1,"message":"413","line":24,"column":10,"nodeType":"409","messageId":"410","endLine":24,"endColumn":22},{"ruleId":"407","severity":1,"message":"414","line":25,"column":10,"nodeType":"409","messageId":"410","endLine":25,"endColumn":19},{"ruleId":"407","severity":1,"message":"415","line":14,"column":10,"nodeType":"409","messageId":"410","endLine":14,"endColumn":14},{"ruleId":"407","severity":1,"message":"416","line":3,"column":10,"nodeType":"409","messageId":"410","endLine":3,"endColumn":15},{"ruleId":"407","severity":1,"message":"417","line":3,"column":17,"nodeType":"409","messageId":"410","endLine":3,"endColumn":36},{"ruleId":"407","severity":1,"message":"418","line":8,"column":38,"nodeType":"409","messageId":"410","endLine":8,"endColumn":47},{"ruleId":"407","severity":1,"message":"419","line":20,"column":22,"nodeType":"409","messageId":"410","endLine":20,"endColumn":33},{"ruleId":"407","severity":1,"message":"420","line":20,"column":35,"nodeType":"409","messageId":"410","endLine":20,"endColumn":41},{"ruleId":"407","severity":1,"message":"421","line":23,"column":10,"nodeType":"409","messageId":"410","endLine":23,"endColumn":15},{"ruleId":"407","severity":1,"message":"422","line":53,"column":9,"nodeType":"409","messageId":"410","endLine":53,"endColumn":30},{"ruleId":"407","severity":1,"message":"423","line":92,"column":13,"nodeType":"409","messageId":"410","endLine":92,"endColumn":34},{"ruleId":"407","severity":1,"message":"424","line":94,"column":13,"nodeType":"409","messageId":"410","endLine":94,"endColumn":29},{"ruleId":"407","severity":1,"message":"425","line":96,"column":13,"nodeType":"409","messageId":"410","endLine":96,"endColumn":33},{"ruleId":"407","severity":1,"message":"426","line":97,"column":13,"nodeType":"409","messageId":"410","endLine":97,"endColumn":28},{"ruleId":"407","severity":1,"message":"427","line":178,"column":11,"nodeType":"409","messageId":"410","endLine":178,"endColumn":25},{"ruleId":"407","severity":1,"message":"428","line":180,"column":11,"nodeType":"409","messageId":"410","endLine":180,"endColumn":29},{"ruleId":"407","severity":1,"message":"424","line":181,"column":11,"nodeType":"409","messageId":"410","endLine":181,"endColumn":27},{"ruleId":"407","severity":1,"message":"429","line":182,"column":11,"nodeType":"409","messageId":"410","endLine":182,"endColumn":24},{"ruleId":"407","severity":1,"message":"430","line":184,"column":11,"nodeType":"409","messageId":"410","endLine":184,"endColumn":26},{"ruleId":"407","severity":1,"message":"431","line":194,"column":11,"nodeType":"409","messageId":"410","endLine":194,"endColumn":27},{"ruleId":"407","severity":1,"message":"432","line":216,"column":9,"nodeType":"409","messageId":"410","endLine":216,"endColumn":21},{"ruleId":"407","severity":1,"message":"433","line":249,"column":9,"nodeType":"409","messageId":"410","endLine":249,"endColumn":26},{"ruleId":"407","severity":1,"message":"434","line":8,"column":8,"nodeType":"409","messageId":"410","endLine":8,"endColumn":19},{"ruleId":"407","severity":1,"message":"435","line":9,"column":8,"nodeType":"409","messageId":"410","endLine":9,"endColumn":22},{"ruleId":"407","severity":1,"message":"436","line":10,"column":8,"nodeType":"409","messageId":"410","endLine":10,"endColumn":17},{"ruleId":"407","severity":1,"message":"437","line":12,"column":10,"nodeType":"409","messageId":"410","endLine":12,"endColumn":29},{"ruleId":"407","severity":1,"message":"438","line":5,"column":8,"nodeType":"409","messageId":"410","endLine":5,"endColumn":19},{"ruleId":"407","severity":1,"message":"439","line":9,"column":10,"nodeType":"409","messageId":"410","endLine":9,"endColumn":21},{"ruleId":"407","severity":1,"message":"440","line":13,"column":10,"nodeType":"409","messageId":"410","endLine":13,"endColumn":17},{"ruleId":"407","severity":1,"message":"441","line":15,"column":10,"nodeType":"409","messageId":"410","endLine":15,"endColumn":14},{"ruleId":"407","severity":1,"message":"442","line":47,"column":9,"nodeType":"409","messageId":"410","endLine":47,"endColumn":19},{"ruleId":"407","severity":1,"message":"443","line":32,"column":9,"nodeType":"409","messageId":"410","endLine":32,"endColumn":15},{"ruleId":"407","severity":1,"message":"444","line":4,"column":10,"nodeType":"409","messageId":"410","endLine":4,"endColumn":21},{"ruleId":"407","severity":1,"message":"445","line":7,"column":8,"nodeType":"409","messageId":"410","endLine":7,"endColumn":19},{"ruleId":"407","severity":1,"message":"446","line":8,"column":8,"nodeType":"409","messageId":"410","endLine":8,"endColumn":16},{"ruleId":"407","severity":1,"message":"447","line":17,"column":10,"nodeType":"409","messageId":"410","endLine":17,"endColumn":18},{"ruleId":"407","severity":1,"message":"448","line":19,"column":10,"nodeType":"409","messageId":"410","endLine":19,"endColumn":21},{"ruleId":"407","severity":1,"message":"449","line":20,"column":10,"nodeType":"409","messageId":"410","endLine":20,"endColumn":18},{"ruleId":"407","severity":1,"message":"450","line":21,"column":21,"nodeType":"409","messageId":"410","endLine":21,"endColumn":33},{"ruleId":"407","severity":1,"message":"451","line":23,"column":9,"nodeType":"409","messageId":"410","endLine":23,"endColumn":22},{"ruleId":"407","severity":1,"message":"452","line":28,"column":9,"nodeType":"409","messageId":"410","endLine":28,"endColumn":23},{"ruleId":"407","severity":1,"message":"453","line":32,"column":9,"nodeType":"409","messageId":"410","endLine":32,"endColumn":25},{"ruleId":"407","severity":1,"message":"454","line":36,"column":9,"nodeType":"409","messageId":"410","endLine":36,"endColumn":26},{"ruleId":"407","severity":1,"message":"455","line":40,"column":9,"nodeType":"409","messageId":"410","endLine":40,"endColumn":23},{"ruleId":"407","severity":1,"message":"456","line":1,"column":29,"nodeType":"409","messageId":"410","endLine":1,"endColumn":38},{"ruleId":"407","severity":1,"message":"444","line":4,"column":10,"nodeType":"409","messageId":"410","endLine":4,"endColumn":21},{"ruleId":"407","severity":1,"message":"445","line":10,"column":8,"nodeType":"409","messageId":"410","endLine":10,"endColumn":19},{"ruleId":"407","severity":1,"message":"446","line":11,"column":8,"nodeType":"409","messageId":"410","endLine":11,"endColumn":16},{"ruleId":"407","severity":1,"message":"457","line":12,"column":8,"nodeType":"409","messageId":"410","endLine":12,"endColumn":17},{"ruleId":"407","severity":1,"message":"450","line":17,"column":21,"nodeType":"409","messageId":"410","endLine":17,"endColumn":33},{"ruleId":"407","severity":1,"message":"447","line":19,"column":10,"nodeType":"409","messageId":"410","endLine":19,"endColumn":18},{"ruleId":"407","severity":1,"message":"448","line":21,"column":10,"nodeType":"409","messageId":"410","endLine":21,"endColumn":21},{"ruleId":"407","severity":1,"message":"449","line":22,"column":10,"nodeType":"409","messageId":"410","endLine":22,"endColumn":18},{"ruleId":"407","severity":1,"message":"458","line":23,"column":9,"nodeType":"409","messageId":"410","endLine":23,"endColumn":15},{"ruleId":"407","severity":1,"message":"451","line":31,"column":9,"nodeType":"409","messageId":"410","endLine":31,"endColumn":22},{"ruleId":"407","severity":1,"message":"452","line":36,"column":9,"nodeType":"409","messageId":"410","endLine":36,"endColumn":23},{"ruleId":"407","severity":1,"message":"453","line":40,"column":9,"nodeType":"409","messageId":"410","endLine":40,"endColumn":25},{"ruleId":"407","severity":1,"message":"454","line":44,"column":9,"nodeType":"409","messageId":"410","endLine":44,"endColumn":26},{"ruleId":"407","severity":1,"message":"455","line":48,"column":9,"nodeType":"409","messageId":"410","endLine":48,"endColumn":23},{"ruleId":"407","severity":1,"message":"444","line":6,"column":10,"nodeType":"409","messageId":"410","endLine":6,"endColumn":21},{"ruleId":"407","severity":1,"message":"445","line":9,"column":8,"nodeType":"409","messageId":"410","endLine":9,"endColumn":19},{"ruleId":"407","severity":1,"message":"446","line":10,"column":8,"nodeType":"409","messageId":"410","endLine":10,"endColumn":16},{"ruleId":"407","severity":1,"message":"450","line":17,"column":21,"nodeType":"409","messageId":"410","endLine":17,"endColumn":33},{"ruleId":"407","severity":1,"message":"459","line":19,"column":21,"nodeType":"409","messageId":"410","endLine":19,"endColumn":33},{"ruleId":"407","severity":1,"message":"447","line":22,"column":10,"nodeType":"409","messageId":"410","endLine":22,"endColumn":18},{"ruleId":"407","severity":1,"message":"448","line":24,"column":10,"nodeType":"409","messageId":"410","endLine":24,"endColumn":21},{"ruleId":"407","severity":1,"message":"449","line":25,"column":10,"nodeType":"409","messageId":"410","endLine":25,"endColumn":18},{"ruleId":"407","severity":1,"message":"451","line":27,"column":9,"nodeType":"409","messageId":"410","endLine":27,"endColumn":22},{"ruleId":"407","severity":1,"message":"452","line":32,"column":9,"nodeType":"409","messageId":"410","endLine":32,"endColumn":23},{"ruleId":"407","severity":1,"message":"453","line":36,"column":9,"nodeType":"409","messageId":"410","endLine":36,"endColumn":25},{"ruleId":"407","severity":1,"message":"454","line":40,"column":9,"nodeType":"409","messageId":"410","endLine":40,"endColumn":26},{"ruleId":"407","severity":1,"message":"455","line":44,"column":9,"nodeType":"409","messageId":"410","endLine":44,"endColumn":23},{"ruleId":"407","severity":1,"message":"441","line":7,"column":10,"nodeType":"409","messageId":"410","endLine":7,"endColumn":14},{"ruleId":"407","severity":1,"message":"442","line":13,"column":9,"nodeType":"409","messageId":"410","endLine":13,"endColumn":19},{"ruleId":"407","severity":1,"message":"411","line":18,"column":10,"nodeType":"409","messageId":"410","endLine":18,"endColumn":19},{"ruleId":"407","severity":1,"message":"460","line":7,"column":3,"nodeType":"409","messageId":"410","endLine":7,"endColumn":28},{"ruleId":"407","severity":1,"message":"461","line":8,"column":3,"nodeType":"409","messageId":"410","endLine":8,"endColumn":23},{"ruleId":"407","severity":1,"message":"416","line":3,"column":10,"nodeType":"409","messageId":"410","endLine":3,"endColumn":15},{"ruleId":"407","severity":1,"message":"411","line":21,"column":10,"nodeType":"409","messageId":"410","endLine":21,"endColumn":19},{"ruleId":"407","severity":1,"message":"441","line":22,"column":10,"nodeType":"409","messageId":"410","endLine":22,"endColumn":14},{"ruleId":"407","severity":1,"message":"462","line":28,"column":9,"nodeType":"409","messageId":"410","endLine":28,"endColumn":18},{"ruleId":"407","severity":1,"message":"463","line":55,"column":9,"nodeType":"409","messageId":"410","endLine":55,"endColumn":13},{"ruleId":"407","severity":1,"message":"464","line":8,"column":21,"nodeType":"409","messageId":"410","endLine":8,"endColumn":36},{"ruleId":"407","severity":1,"message":"465","line":14,"column":24,"nodeType":"409","messageId":"410","endLine":14,"endColumn":39},{"ruleId":"407","severity":1,"message":"466","line":15,"column":25,"nodeType":"409","messageId":"410","endLine":15,"endColumn":41},{"ruleId":"407","severity":1,"message":"467","line":16,"column":24,"nodeType":"409","messageId":"410","endLine":16,"endColumn":39},{"ruleId":"407","severity":1,"message":"411","line":17,"column":10,"nodeType":"409","messageId":"410","endLine":17,"endColumn":19},{"ruleId":"407","severity":1,"message":"411","line":8,"column":10,"nodeType":"409","messageId":"410","endLine":8,"endColumn":19},{"ruleId":"407","severity":1,"message":"416","line":4,"column":10,"nodeType":"409","messageId":"410","endLine":4,"endColumn":15},{"ruleId":"407","severity":1,"message":"468","line":58,"column":11,"nodeType":"409","messageId":"410","endLine":58,"endColumn":23},{"ruleId":"407","severity":1,"message":"414","line":10,"column":10,"nodeType":"409","messageId":"410","endLine":10,"endColumn":19},{"ruleId":"407","severity":1,"message":"469","line":1,"column":17,"nodeType":"409","messageId":"410","endLine":1,"endColumn":27},{"ruleId":"407","severity":1,"message":"416","line":4,"column":10,"nodeType":"409","messageId":"410","endLine":4,"endColumn":15},{"ruleId":"407","severity":1,"message":"464","line":7,"column":21,"nodeType":"409","messageId":"410","endLine":7,"endColumn":36},{"ruleId":"407","severity":1,"message":"413","line":12,"column":10,"nodeType":"409","messageId":"410","endLine":12,"endColumn":22},{"ruleId":"407","severity":1,"message":"469","line":1,"column":38,"nodeType":"409","messageId":"410","endLine":1,"endColumn":48},{"ruleId":"407","severity":1,"message":"470","line":2,"column":10,"nodeType":"409","messageId":"410","endLine":2,"endColumn":25},{"ruleId":"407","severity":1,"message":"416","line":3,"column":10,"nodeType":"409","messageId":"410","endLine":3,"endColumn":15},{"ruleId":"407","severity":1,"message":"417","line":3,"column":17,"nodeType":"409","messageId":"410","endLine":3,"endColumn":36},{"ruleId":"407","severity":1,"message":"471","line":5,"column":8,"nodeType":"409","messageId":"410","endLine":5,"endColumn":26},{"ruleId":"407","severity":1,"message":"472","line":21,"column":10,"nodeType":"409","messageId":"410","endLine":21,"endColumn":29},{"ruleId":"407","severity":1,"message":"473","line":27,"column":9,"nodeType":"409","messageId":"410","endLine":27,"endColumn":33},{"ruleId":"407","severity":1,"message":"474","line":31,"column":9,"nodeType":"409","messageId":"410","endLine":31,"endColumn":34},{"ruleId":"407","severity":1,"message":"456","line":1,"column":17,"nodeType":"409","messageId":"410","endLine":1,"endColumn":26},{"ruleId":"407","severity":1,"message":"470","line":2,"column":10,"nodeType":"409","messageId":"410","endLine":2,"endColumn":25},{"ruleId":"407","severity":1,"message":"475","line":2,"column":27,"nodeType":"409","messageId":"410","endLine":2,"endColumn":36},{"ruleId":"407","severity":1,"message":"476","line":3,"column":8,"nodeType":"409","messageId":"410","endLine":3,"endColumn":23},{"ruleId":"407","severity":1,"message":"416","line":4,"column":10,"nodeType":"409","messageId":"410","endLine":4,"endColumn":15},{"ruleId":"407","severity":1,"message":"417","line":4,"column":17,"nodeType":"409","messageId":"410","endLine":4,"endColumn":36},{"ruleId":"407","severity":1,"message":"477","line":7,"column":8,"nodeType":"409","messageId":"410","endLine":7,"endColumn":18},{"ruleId":"407","severity":1,"message":"478","line":18,"column":10,"nodeType":"409","messageId":"410","endLine":18,"endColumn":28},{"ruleId":"407","severity":1,"message":"411","line":19,"column":10,"nodeType":"409","messageId":"410","endLine":19,"endColumn":19},{"ruleId":"407","severity":1,"message":"479","line":25,"column":9,"nodeType":"409","messageId":"410","endLine":25,"endColumn":32},{"ruleId":"407","severity":1,"message":"480","line":29,"column":9,"nodeType":"409","messageId":"410","endLine":29,"endColumn":33},{"ruleId":"407","severity":1,"message":"456","line":1,"column":39,"nodeType":"409","messageId":"410","endLine":1,"endColumn":48},{"ruleId":"407","severity":1,"message":"467","line":16,"column":24,"nodeType":"409","messageId":"410","endLine":16,"endColumn":39},{"ruleId":"407","severity":1,"message":"481","line":26,"column":9,"nodeType":"409","messageId":"410","endLine":26,"endColumn":13},"no-native-reassign",["482"],"no-negated-in-lhs",["483"],"no-unused-vars","'TasksPage' is defined but never used.","Identifier","unusedVar","'taskState' is assigned a value but never used.","'userState' is assigned a value but never used.","'projectState' is assigned a value but never used.","'teamState' is assigned a value but never used.","'team' is assigned a value but never used.","'Modal' is defined but never used.","'responsiveFontSizes' is defined but never used.","'Draggable' is defined but never used.","'projectName' is assigned a value but never used.","'teamId' is assigned a value but never used.","'tasks' is assigned a value but never used.","'openTasklistFormModal' is assigned a value but never used.","'destinationTasklistId' is assigned a value but never used.","'sourceTasklistId' is assigned a value but never used.","'destinationTaskIndex' is assigned a value but never used.","'sourceTaskIndex' is assigned a value but never used.","'sourceColumnId' is assigned a value but never used.","'destinationIndexId' is assigned a value but never used.","'sourceIndexId' is assigned a value but never used.","'updatedTasklist' is assigned a value but never used.","'updatedTaskIndex' is assigned a value but never used.","'getTasklists' is assigned a value but never used.","'tasklistFormModal' is assigned a value but never used.","'ProjectTile' is defined but never used.","'NewProjectTile' is defined but never used.","'homeImage' is defined but never used.","'AiOutlinePlusCircle' is defined but never used.","'TaskSection' is defined but never used.","'RiNurseFill' is defined but never used.","'loading' is assigned a value but never used.","'open' is assigned a value but never used.","'closeModal' is assigned a value but never used.","'onSkip' is assigned a value but never used.","'GrAddCircle' is defined but never used.","'ProjectForm' is defined but never used.","'TaskForm' is defined but never used.","'anchorEl' is assigned a value but never used.","'openProject' is assigned a value but never used.","'openTask' is assigned a value but never used.","'userdispatch' is assigned a value but never used.","'clickOpenTask' is assigned a value but never used.","'clickCloseTask' is assigned a value but never used.","'clickOpenProject' is assigned a value but never used.","'clickCloseProject' is assigned a value but never used.","'handleNewClick' is assigned a value but never used.","'useEffect' is defined but never used.","'apiServer' is defined but never used.","'userId' is assigned a value but never used.","'taskdispatch' is assigned a value but never used.","'RiCheckboxBlankCircleLine' is defined but never used.","'RiCheckboxCircleLine' is defined but never used.","'openModal' is assigned a value but never used.","'body' is assigned a value but never used.","'TasklistContext' is defined but never used.","'setProjectError' is assigned a value but never used.","'setAssigneeError' is assigned a value but never used.","'projectdispatch' is assigned a value but never used.","'taskResponse' is assigned a value but never used.","'useContext' is defined but never used.","'DragDropContext' is defined but never used.","'AddTaskProjectForm' is defined but never used.","'openTaskProjectForm' is assigned a value but never used.","'openTaskProjectFormModal' is assigned a value but never used.","'closeTaskProjectFormModal' is assigned a value but never used.","'Droppable' is defined but never used.","'TaskDetailsForm' is defined but never used.","'UserAvatar' is defined but never used.","'openTaskDetailForm' is assigned a value but never used.","'openTaskDetailFormModal' is assigned a value but never used.","'closeTaskDetailFormModal' is assigned a value but never used.","'date' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]